[{"path":"https://beauchamplab.github.io/raveio/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhengjia Wang. Author, maintainer, copyright holder. Beauchamp lab. Copyright holder, funder.","code":""},{"path":"https://beauchamplab.github.io/raveio/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"[1] Magnotti, JF, Wang, Z, Beauchamp, MS. RAVE: comprehensive open-source software reproducible analysis visualization intracranial EEG data. NeuroImage, 223, p.117341. [2] Metzger BA, Magnotti JF, Wang Z, Nesbitt E, Karas PJ, Yoshor D, Beauchamp MS. Responses Visual Speech Human Posterior Superior Temporal Gyrus Examined iEEG Deconvolution. Journal Neuroscience [3] Karas PJ, Magnotti JF, Metzger BA, Zhu LL, Smith KB, Yoshor D, Beauchamp MS. visual speech head start improves perception reduces superior temporal cortex responses auditory speech. eLife 2019;8:e48116","code":"@Article{,   title = {{RAVE}: Comprehensive open-source software for reproducible analysis and visualization of intracranial EEG data},   author = {John F. Magnotti and Zhengjia Wang and Michael S. Beauchamp},   journal = {NeuroImage},   year = {2020},   volume = {223},   pages = {117341},   doi = {10.1016/j.neuroimage.2020.117341}, } @Article{,   title = {Responses to visual speech in human Posterior Superior Temporal Gyrus examined with iEEG deconvolution},   author = {Brian A. Metzger and John F. Magnotti and Zhengjia Wang and Elizabeth Nesbitt and Patrick J. Karas and Daniel Yoshor and Michael S. Beauchamp},   journal = {Journal of Neuroscience},   year = {2020},   doi = {10.1523/JNEUROSCI.0279-20.2020}, } @Article{,   title = {The visual speech head start improves perception and reduces superior temporal cortex responses to auditory speech},   author = {Patrick J. Karas and John F. Magnotti and Brian A. Metzger and Lin L. Zhu and Kristen B. Smith and Daniel Yoshor and Michael S. Beauchamp},   journal = {eLife},   year = {2019},   doi = {10.7554/eLife.48116}, }"},{"path":"https://beauchamplab.github.io/raveio/index.html","id":"file-io-package-for-rave-project","dir":"","previous_headings":"","what":"File-System Toolbox for RAVE Project","title":"File-System Toolbox for RAVE Project","text":"‘RAVE’ R project aims providing interactive analysis visualization intracranial Electroencephalography. Developed Beauchamp's Lab, supported NIH 1R24MH117529 package part rave family provides readers multiple file formats, including: * EDF(+), BrainVision, BIDS-iEEG, Matlab files commonly used neuroscientists * HDF5, common file format used ‘Matlab’, ‘Python’, ‘C++’, ‘R’ * FST, file format supports GB-level read/write speed Internally support ‘RAVE’ format; see wiki page.","code":""},{"path":"https://beauchamplab.github.io/raveio/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"File-System Toolbox for RAVE Project","text":"raveio part rave. Please install rave directly wiki page. install raveio alone, simply type R command:","code":"install.packages(\"raveio\")"},{"path":"https://beauchamplab.github.io/raveio/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"File-System Toolbox for RAVE Project","text":"Please cite following paper publication use: Magnotti, JF, Wang, Z, Beauchamp, MS. RAVE: comprehensive open-source software reproducible analysis visualization intracranial EEG data. NeuroImage, 223, p.117341. (DOI) Please consider citing following paper well: Metzger BA, Magnotti JF, Wang Z, Nesbitt E, Karas PJ, Yoshor D, Beauchamp MS. Responses Visual Speech Human Posterior Superior Temporal Gyrus Examined iEEG Deconvolution. Journal Neuroscience (DOI) Karas PJ, Magnotti JF, Metzger BA, Zhu LL, Smith KB, Yoshor D, Beauchamp MS. visual speech head start improves perception reduces superior temporal cortex responses auditory speech. eLife 2019;8:e48116 (DOI) can type print(citation('raveio'), bibtex = TRUE) print details.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"Currently supports minimum file specification version 2.3. Please contact package maintainer 'RAVE' team older specifications needed","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"absolute file path absolute file paths nothing data frame list spike 'waveform' (without normalization) normalized numeric vector (analog signals 'uV' unit)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"block character, session block ID","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"base_path absolute base path file version 'NEV' specification version electrode_table electrode table sample_rate_nev_timestamp sample rate 'NEV' data packet time-stamps has_nsx named vector 'NSx' availability recording_duration recording duration 'NSx' sample_rates sampling frequencies 'NSx' file","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"BlackrockFile$print() BlackrockFile$new() BlackrockFile$nev_path() BlackrockFile$nsx_paths() BlackrockFile$refresh_data() BlackrockFile$get_epoch() BlackrockFile$get_waveform() BlackrockFile$get_electrode() BlackrockFile$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"print user-friendly messages","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"","code":"BlackrockFile$print()"},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"","code":"BlackrockFile$new(path, block, nev_data = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"path path 'BlackRock' file, can without file extensions block session block ID; default file name nev_data whether load comments 'waveforms'","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"method-nev-path-","dir":"Reference","previous_headings":"","what":"Method nev_path()","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"get 'NEV' file path","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"","code":"BlackrockFile$nev_path()"},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"method-nsx-paths-","dir":"Reference","previous_headings":"","what":"Method nsx_paths()","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"get 'NSx' file paths","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"","code":"BlackrockFile$nsx_paths(which = NULL)"},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"signal file get, NULL return available paths, default NULL; must integers","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"method-refresh-data-","dir":"Reference","previous_headings":"","what":"Method refresh_data()","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"refresh load 'NSx' data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"","code":"BlackrockFile$refresh_data(force = FALSE, verbose = TRUE, nev_data = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"force whether force reload data even data loaded cached verbose whether print messages loading nev_data whether refresh 'NEV' extended data; default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"method-get-epoch-","dir":"Reference","previous_headings":"","what":"Method get_epoch()","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"get epoch table 'NEV' comment data packet","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"","code":"BlackrockFile$get_epoch()"},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"method-get-waveform-","dir":"Reference","previous_headings":"","what":"Method get_waveform()","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"get 'waveform' spike data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"","code":"BlackrockFile$get_waveform()"},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"method-get-electrode-","dir":"Reference","previous_headings":"","what":"Method get_electrode()","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"get electrode data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"","code":"BlackrockFile$get_electrode(electrode, nstype = NULL)"},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"electrode integer, must length one nstype signal bank, example, 'ns3', 'ns5'","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"","code":"BlackrockFile$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/BlackrockFile.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition to load data from 'BlackRock' 'Micro-systems' files — BlackrockFile","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":null,"dir":"Reference","previous_headings":"","what":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"Four-mode tensor (array) especially designed 'iEEG/ECoG' data. Dimension names : Trial, Frequency, Time, Electrode.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"data frame dimension names index columns value_name value column ECoGTensor instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"Zhengjia Wang","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"raveio::Tensor -> ECoGTensor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"raveio::Tensor$.use_multi_files() raveio::Tensor$collapse() raveio::Tensor$finalize() raveio::Tensor$get_data() raveio::Tensor$operate() raveio::Tensor$print() raveio::Tensor$set_data() raveio::Tensor$subset() raveio::Tensor$to_swap() raveio::Tensor$to_swap_now()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"ECoGTensor$flatten() ECoGTensor$new()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"method-flatten-","dir":"Reference","previous_headings":"","what":"Method flatten()","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"converts tensor (array) table (data frame)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"","code":"ECoGTensor$flatten(include_index = TRUE, value_name = \"value\")"},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"include_index logical, whether include dimension names value_name character, column name value","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"","code":"ECoGTensor$new(   data,   dim,   dimnames,   varnames,   hybrid = FALSE,   swap_file = temp_tensor_file(),   temporary = TRUE,   multi_files = FALSE,   use_index = TRUE,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/ECoGTensor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"'iEEG/ECoG' Tensor class inherit from Tensor — ECoGTensor","text":"data array vector dim dimension data, mush match data dimnames list dimension names, equal length dim varnames names dimnames, recommended names : Trial, Frequency, Time, Electrode hybrid whether enable hybrid mode reduce RAM usage swap_file hybrid mode, store data; default stores raveio_getopt('tensor_temp_path') temporary whether clean space exiting R session multi_files logical, whether use multiple files instead one giant file store data use_index logical, multi_files true, whether use index dimension partition number ... passed Tensor constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":null,"dir":"Reference","previous_headings":"","what":"Definitions of electrode with 'LFP' signal type — LFP_electrode","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"Please use safer new_electrode function create instances. documentation describe member methods electrode class LFP_electrode","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"reference number NULL 'noref', returns 0, otherwise returns FileArray-class simplify enabled, one block loaded, result vector (type=\"voltage\") matrix (others), otherwise result named list names blocks.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"raveio::RAVEAbstarctElectrode -> LFP_electrode","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"h5_fname 'HDF5' file name valid whether current electrode valid: subject exists contains current electrode reference; subject electrode type matches current electrode type raw_sample_rate voltage sample rate power_sample_rate power/phase sample rate preprocess_info preprocess information power_file path power 'HDF5' file phase_file path phase 'HDF5' file voltage_file path voltage 'HDF5' file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"raveio::RAVEAbstarctElectrode$set_epoch()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"LFP_electrode$print() LFP_electrode$set_reference() LFP_electrode$new() LFP_electrode$.load_noref_wavelet() LFP_electrode$.load_noref_voltage() LFP_electrode$.load_wavelet() LFP_electrode$.load_voltage() LFP_electrode$.load_raw_voltage() LFP_electrode$load_data() LFP_electrode$load_blocks() LFP_electrode$clear_cache() LFP_electrode$clear_memory() LFP_electrode$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"print electrode summary","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$print()"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-set-reference-","dir":"Reference","previous_headings":"","what":"Method set_reference()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"set reference current electrode","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$set_reference(reference)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"reference either NULL LFP_electrode instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$new(subject, number, quiet = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"subject, number, quiet see constructor RAVEAbstarctElectrode","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-load-noref-wavelet-","dir":"Reference","previous_headings":"","what":"Method .load_noref_wavelet()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"load non-referenced wavelet coefficients (internally used)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$.load_noref_wavelet(reload = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"reload whether reload cache","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-load-noref-voltage-","dir":"Reference","previous_headings":"","what":"Method .load_noref_voltage()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"load non-referenced voltage (internally used)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$.load_noref_voltage(reload = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"reload whether reload cache srate voltage signal sample rate","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-load-wavelet-","dir":"Reference","previous_headings":"","what":"Method .load_wavelet()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"load referenced wavelet coefficients (internally used)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$.load_wavelet(   type = c(\"power\", \"phase\", \"wavelet-coefficient\"),   reload = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"type type data load reload whether reload cache","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-load-voltage-","dir":"Reference","previous_headings":"","what":"Method .load_voltage()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"load referenced voltage (internally used)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$.load_voltage(reload = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"reload whether reload cache","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-load-raw-voltage-","dir":"Reference","previous_headings":"","what":"Method .load_raw_voltage()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"load raw voltage (process)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$.load_raw_voltage(reload = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"reload whether reload cache","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-load-data-","dir":"Reference","previous_headings":"","what":"Method load_data()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"method load electrode data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$load_data(   type = c(\"power\", \"phase\", \"voltage\", \"wavelet-coefficient\", \"raw-voltage\") )"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"type data type \"power\", \"phase\", \"voltage\", \"wavelet-coefficient\", \"raw-voltage\". \"power\", \"phase\", \"wavelet-coefficient\", 'Wavelet' transforms required. \"voltage\", 'Notch' filters must applied. types except \"raw-voltage\" referenced. \"raw-voltage\", reference performed since data \"raw\" signal (processing).","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-load-blocks-","dir":"Reference","previous_headings":"","what":"Method load_blocks()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"load electrode block-wise data (reference), useful epoch absent","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$load_blocks(   blocks,   type = c(\"power\", \"phase\", \"voltage\", \"wavelet-coefficient\", \"raw-voltage\"),   simplify = TRUE )"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"blocks session blocks type data type \"power\", \"phase\", \"voltage\", \"raw-voltage\" (filters applied, -imported), \"wavelet-coefficient\". Note type \"raw-voltage\", data needs imported; \"voltage\" data, 'Notch' filters must applied; types, 'Wavelet' transforms required. simplify whether simplify result","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-clear-cache-","dir":"Reference","previous_headings":"","what":"Method clear_cache()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"method clear cache hard drive","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$clear_cache(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-clear-memory-","dir":"Reference","previous_headings":"","what":"Method clear_memory()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"method clear memory","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$clear_memory(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"LFP_electrode$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_electrode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Definitions of electrode with 'LFP' signal type — LFP_electrode","text":"","code":"# Download subject demo/DemoSubject  subject <- as_rave_subject(\"demo/DemoSubject\", strict = FALSE)  if(dir.exists(subject$path)) {  # Electrode 14 in demo/DemoSubject e <- new_electrode(subject = subject, number = 14, signal_type = \"LFP\")  # Load CAR reference \"ref_13-16,24\" ref <- new_reference(subject = subject, number = \"ref_13-16,24\",                      signal_type = \"LFP\") e$set_reference(ref)  # Set epoch e$set_epoch(epoch = 'auditory_onset')  # Set loading window e$trial_intervals <- list(c(-1, 2))  # Preview print(e)  # Now epoch power power <- e$load_data(\"power\") names(dimnames(power))  # Subset power subset(power, Time ~ Time < 0, Electrode ~ Electrode == 14)  # Draw baseline tempfile <- tempfile() bl <- power_baseline(power, baseline_windows = c(-1, 0),                      method = \"decibel\", filebase = tempfile) collapsed_power <- collapse2(bl, keep = c(2,1)) # Visualize dname <- dimnames(bl) image(collapsed_power, x = dname$Time, y = dname$Frequency,       xlab = \"Time (s)\", ylab = \"Frequency (Hz)\",       main = \"Mean power over trial (Baseline: -1~0 seconds)\",       sub = glue('Electrode {e$number} (Reference: {ref$number})')) abline(v = 0, lty = 2, col = 'blue') text(x = 0, y = 20, \"Audio onset\", col = \"blue\", cex = 0.6)  # clear cache on hard disk e$clear_cache() ref$clear_cache()  }"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Definitions of reference with 'LFP' signal type — LFP_reference","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"Please use safer new_reference function create instances. documentation describe member methods electrode class LFP_reference","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"reference number NULL 'noref', returns 0, otherwise returns FileArray-class simplify enabled, one block loaded, result vector (type=\"voltage\") matrix (others), otherwise result named list names blocks.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"raveio::RAVEAbstarctElectrode -> LFP_reference","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"exists whether electrode exists subject h5_fname 'HDF5' file name valid whether current electrode valid: subject exists contains current electrode reference; subject electrode type matches current electrode type raw_sample_rate voltage sample rate power_sample_rate power/phase sample rate preprocess_info preprocess information power_file path power 'HDF5' file phase_file path phase 'HDF5' file voltage_file path voltage 'HDF5' file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"raveio::RAVEAbstarctElectrode$set_epoch()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"LFP_reference$print() LFP_reference$set_reference() LFP_reference$new() LFP_reference$.load_noref_wavelet() LFP_reference$.load_noref_voltage() LFP_reference$.load_wavelet() LFP_reference$.load_voltage() LFP_reference$load_data() LFP_reference$load_blocks() LFP_reference$clear_cache() LFP_reference$clear_memory() LFP_reference$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"print reference summary","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$print()"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-set-reference-","dir":"Reference","previous_headings":"","what":"Method set_reference()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"set reference current electrode","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$set_reference(reference)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"reference either NULL LFP_electrode instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$new(subject, number, quiet = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"subject, number, quiet see constructor RAVEAbstarctElectrode","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-load-noref-wavelet-","dir":"Reference","previous_headings":"","what":"Method .load_noref_wavelet()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"load non-referenced wavelet coefficients (internally used)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$.load_noref_wavelet(reload = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"reload whether reload cache","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-load-noref-voltage-","dir":"Reference","previous_headings":"","what":"Method .load_noref_voltage()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"load non-referenced voltage (internally used)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$.load_noref_voltage(reload = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"reload whether reload cache srate voltage signal sample rate","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-load-wavelet-","dir":"Reference","previous_headings":"","what":"Method .load_wavelet()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"load referenced wavelet coefficients (internally used)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$.load_wavelet(   type = c(\"power\", \"phase\", \"wavelet-coefficient\"),   reload = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"type type data load reload whether reload cache","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-load-voltage-","dir":"Reference","previous_headings":"","what":"Method .load_voltage()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"load referenced voltage (internally used)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$.load_voltage(reload = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"reload whether reload cache","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-load-data-","dir":"Reference","previous_headings":"","what":"Method load_data()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"method load electrode data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$load_data(   type = c(\"power\", \"phase\", \"voltage\", \"wavelet-coefficient\") )"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"type data type \"power\", \"phase\", \"voltage\", \"wavelet-coefficient\".","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-load-blocks-","dir":"Reference","previous_headings":"","what":"Method load_blocks()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"load electrode block-wise data (reference), useful epoch absent","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$load_blocks(   blocks,   type = c(\"power\", \"phase\", \"voltage\", \"wavelet-coefficient\"),   simplify = TRUE )"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"blocks session blocks type data type \"power\", \"phase\", \"voltage\", \"wavelet-coefficient\". Note type voltage, 'Notch' filters must applied; otherwise 'Wavelet' transforms required. simplify whether simplify result","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-clear-cache-","dir":"Reference","previous_headings":"","what":"Method clear_cache()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"method clear cache hard drive","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$clear_cache(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-clear-memory-","dir":"Reference","previous_headings":"","what":"Method clear_memory()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"method clear memory","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$clear_memory(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"LFP_reference$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LFP_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Definitions of reference with 'LFP' signal type — LFP_reference","text":"","code":"if (FALSE) {  # Download subject demo/DemoSubject   subject <- as_rave_subject(\"demo/DemoSubject\")  # Electrode 14 as reference electrode (Bipolar referencing) e <- new_reference(subject = subject, number = \"ref_14\",                    signal_type = \"LFP\")  # Reference \"ref_13-16,24\" (CAR or white-matter reference) ref <- new_reference(subject = subject, number = \"ref_13-16,24\",                      signal_type = \"LFP\") ref  # Set epoch e$set_epoch(epoch = 'auditory_onset')  # Set loading window e$trial_intervals <- list(c(-1, 2))  # Preview print(e)  # Now epoch power power <- e$load_data(\"power\") names(dimnames(power))  # Subset power subset(power, Time ~ Time < 0, Electrode ~ Electrode == 14)  # clear cache on hard disk e$clear_cache()  }"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class to Load 'fst' Files — LazyFST","title":"R6 Class to Load 'fst' Files — LazyFST","text":"provides hybrid data structure 'fst' file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Class to Load 'fst' Files — LazyFST","text":"none none none vector, dimensions subset data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R6 Class to Load 'fst' Files — LazyFST","text":"Zhengjia Wang","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class to Load 'fst' Files — LazyFST","text":"LazyFST$open() LazyFST$close() LazyFST$save() LazyFST$new() LazyFST$get_dims() LazyFST$subset()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"method-open-","dir":"Reference","previous_headings":"","what":"Method open()","title":"R6 Class to Load 'fst' Files — LazyFST","text":"compatible LazyH5","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class to Load 'fst' Files — LazyFST","text":"","code":"LazyFST$open(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class to Load 'fst' Files — LazyFST","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"R6 Class to Load 'fst' Files — LazyFST","text":"close connection","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class to Load 'fst' Files — LazyFST","text":"","code":"LazyFST$close(..., .remove_file = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class to Load 'fst' Files — LazyFST","text":"... ignored .remove_file whether remove file garbage collected","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"method-save-","dir":"Reference","previous_headings":"","what":"Method save()","title":"R6 Class to Load 'fst' Files — LazyFST","text":"compatible LazyH5","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class to Load 'fst' Files — LazyFST","text":"","code":"LazyFST$save(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class to Load 'fst' Files — LazyFST","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class to Load 'fst' Files — LazyFST","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class to Load 'fst' Files — LazyFST","text":"","code":"LazyFST$new(file_path, transpose = FALSE, dims = NULL, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class to Load 'fst' Files — LazyFST","text":"file_path data stored transpose whether load data transposed dims data dimension, support 1 2 dimensions ... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"method-get-dims-","dir":"Reference","previous_headings":"","what":"Method get_dims()","title":"R6 Class to Load 'fst' Files — LazyFST","text":"get data dimension","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class to Load 'fst' Files — LazyFST","text":"","code":"LazyFST$get_dims(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class to Load 'fst' Files — LazyFST","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"method-subset-","dir":"Reference","previous_headings":"","what":"Method subset()","title":"R6 Class to Load 'fst' Files — LazyFST","text":"subset data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class to Load 'fst' Files — LazyFST","text":"","code":"LazyFST$subset(i = NULL, j = NULL, ..., drop = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class to Load 'fst' Files — LazyFST","text":", j, ... index along dimension drop whether apply drop subset","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyFST.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class to Load 'fst' Files — LazyFST","text":"","code":"if(!is_on_cran()){  # Data to save, total 8 MB x <- matrix(rnorm(1000000), ncol = 100)  # Save to local disk f <- tempfile() fst::write_fst(as.data.frame(x), path = f)  # Load via LazyFST dat <- LazyFST$new(file_path = f, dims = c(10000, 100))  # dat < 1 MB  # Check whether the data is identical range(dat[] - x)  # The reading of column is very fast system.time(dat[,100])  # Reading rows might be slow system.time(dat[1,])  } #> NOT_CRAN is TRUE/true (not on CRAN) #>    user  system elapsed  #>   0.012   0.000   0.007"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":null,"dir":"Reference","previous_headings":"","what":"Lazy 'HDF5' file loader — LazyH5","title":"Lazy 'HDF5' file loader — LazyH5","text":"provides hybrid data structure 'HDF5' file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lazy 'HDF5' file loader — LazyH5","text":"none self instance self instance subset data dimension array data type, currently character, integer, raw, double, complex available, types yield \"unknown\"","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lazy 'HDF5' file loader — LazyH5","text":"Zhengjia Wang","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Lazy 'HDF5' file loader — LazyH5","text":"quiet whether suppress messages","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Lazy 'HDF5' file loader — LazyH5","text":"LazyH5$finalize() LazyH5$print() LazyH5$new() LazyH5$save() LazyH5$open() LazyH5$close() LazyH5$subset() LazyH5$get_dims() LazyH5$get_type()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"Lazy 'HDF5' file loader — LazyH5","text":"garbage collection method","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"LazyH5$finalize()"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Lazy 'HDF5' file loader — LazyH5","text":"overrides print method","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"LazyH5$print()"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Lazy 'HDF5' file loader — LazyH5","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"LazyH5$new(file_path, data_name, read_only = FALSE, quiet = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy 'HDF5' file loader — LazyH5","text":"file_path data stored 'HDF5' format data_name data stored file read_only whether open file read-mode. highly recommended set true, otherwise file connection exclusive. quiet whether suppress messages, default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"method-save-","dir":"Reference","previous_headings":"","what":"Method save()","title":"Lazy 'HDF5' file loader — LazyH5","text":"save data 'HDF5' file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"LazyH5$save(   x,   chunk = \"auto\",   level = 7,   replace = TRUE,   new_file = FALSE,   force = TRUE,   ctype = NULL,   size = NULL,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy 'HDF5' file loader — LazyH5","text":"x vector, matrix, array chunk chunk size, length matches data dimension level compress level, 1 9 replace data exists file, replace file new_file remove whole file exists writing? force open file read-mode, saving objects file raise error. Use force=TRUE force write data ctype data type, see mode, usually data type x. Try mode(x) storage.mode(x) hints. size deprecated, compatibility issues ... passed self open() method","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"method-open-","dir":"Reference","previous_headings":"","what":"Method open()","title":"Lazy 'HDF5' file loader — LazyH5","text":"open connection","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"LazyH5$open(new_dataset = FALSE, robj, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy 'HDF5' file loader — LazyH5","text":"new_dataset used internal pointer closed, write data robj data array save ... passed createDataSet hdf5r package","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"Lazy 'HDF5' file loader — LazyH5","text":"close connection","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"LazyH5$close(all = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy 'HDF5' file loader — LazyH5","text":"whether close connections associated data file. true, connections, including access programs, closed","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"method-subset-","dir":"Reference","previous_headings":"","what":"Method subset()","title":"Lazy 'HDF5' file loader — LazyH5","text":"subset data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"LazyH5$subset(..., drop = FALSE, stream = FALSE, envir = parent.frame())"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy 'HDF5' file loader — LazyH5","text":"drop whether apply drop subset stream whether read partial data time envir ,j,... expressions, expression evaluated , j, ... index along dimension","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"method-get-dims-","dir":"Reference","previous_headings":"","what":"Method get_dims()","title":"Lazy 'HDF5' file loader — LazyH5","text":"get data dimension","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"LazyH5$get_dims(stay_open = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy 'HDF5' file loader — LazyH5","text":"stay_open whether leave connection opened","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"method-get-type-","dir":"Reference","previous_headings":"","what":"Method get_type()","title":"Lazy 'HDF5' file loader — LazyH5","text":"get data type","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"LazyH5$get_type(stay_open = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy 'HDF5' file loader — LazyH5","text":"stay_open whether leave connection opened","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/LazyH5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lazy 'HDF5' file loader — LazyH5","text":"","code":"# Data to save x <- array(rnorm(1000), c(10,10,10))  # Save to local disk f <- tempfile() save_h5(x, file = f, name = 'x', chunk = c(10,10,10), level = 0) #> /tmp/RtmpSlBpsL/file19106e70f1ba => x (Dataset Created)  #> /tmp/RtmpSlBpsL/file19106e70f1ba => x (Dataset Removed)  #> /tmp/RtmpSlBpsL/file19106e70f1ba => x (Dataset Created)   # Load via LazyFST dat <- LazyH5$new(file_path = f, data_name = 'x', read_only = TRUE)  dat  # Check whether the data is identical range(dat - x) #> [1] 0 0  # Read a slice of the data system.time(dat[,10,]) #>    user  system elapsed  #>   0.133   0.000   0.133"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect and schedule pipelines — PipelineCollections","title":"Connect and schedule pipelines — PipelineCollections","text":"Connect schedule pipelines Connect schedule pipelines","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect and schedule pipelines — PipelineCollections","text":"list containing id pipeline ID can used deps pipeline forked pipeline instance target_names copy names depend_on copy deps cue copy cue standalone copy standalone","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Connect and schedule pipelines — PipelineCollections","text":"verbose whether verbose build","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Connect and schedule pipelines — PipelineCollections","text":"root_path path directory contains pipelines scheduler collection_path path pipeline collections pipeline_ids pipeline ID codes","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Connect and schedule pipelines — PipelineCollections","text":"PipelineCollections$new() PipelineCollections$add_pipeline() PipelineCollections$build_pipelines() PipelineCollections$run() PipelineCollections$get_scheduler()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Connect and schedule pipelines — PipelineCollections","text":"Constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect and schedule pipelines — PipelineCollections","text":"","code":"PipelineCollections$new(root_path = NULL, overwrite = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect and schedule pipelines — PipelineCollections","text":"root_path store pipelines intermediate results overwrite whether overwrite root_path exists","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"method-add-pipeline-","dir":"Reference","previous_headings":"","what":"Method add_pipeline()","title":"Connect and schedule pipelines — PipelineCollections","text":"Add pipeline collection","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect and schedule pipelines — PipelineCollections","text":"","code":"PipelineCollections$add_pipeline(   x,   names = NULL,   deps = NULL,   pre_hook = NULL,   post_hook = NULL,   cue = c(\"always\", \"thorough\", \"never\"),   search_paths = pipeline_root(),   standalone = TRUE,   hook_envir = parent.frame() )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect and schedule pipelines — PipelineCollections","text":"x pipeline name (can found via pipeline_list), PipelineTools names pipeline targets execute deps pipeline IDs depend ; see 'Values' pre_hook function run pipeline; function needs two arguments: input map (can edit -place), path directory allows store temporary files post_hook function run pipeline; function needs two arguments: pipeline object, path directory allows store intermediate results cue whether always run dependence search_paths search pipeline x character; ignored x pipeline object standalone whether pipeline standalone, set TRUE pipeline added multiple times run independently; default true hook_envir look global environments pre_hook post_hook contains global variables; default calling environment","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"method-build-pipelines-","dir":"Reference","previous_headings":"","what":"Method build_pipelines()","title":"Connect and schedule pipelines — PipelineCollections","text":"Build pipelines visualize","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect and schedule pipelines — PipelineCollections","text":"","code":"PipelineCollections$build_pipelines(visualize = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect and schedule pipelines — PipelineCollections","text":"visualize whether visualize pipeline; default true","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"Connect and schedule pipelines — PipelineCollections","text":"Run collection pipelines","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect and schedule pipelines — PipelineCollections","text":"","code":"PipelineCollections$run(   error = c(\"error\", \"warning\", \"ignore\"),   .scheduler = c(\"none\", \"future\", \"clustermq\"),   .type = c(\"callr\", \"smart\", \"vanilla\"),   .as_promise = FALSE,   .async = FALSE,   rebuild = NA,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect and schedule pipelines — PipelineCollections","text":"error error occurs; default 'error' throwing errors; choices 'warning' 'ignore' .scheduler, .type, .as_promise, .async, ... passed pipeline_run rebuild whether re-build pipeline; default NA ( pipeline built , rebuild)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"method-get-scheduler-","dir":"Reference","previous_headings":"","what":"Method get_scheduler()","title":"Connect and schedule pipelines — PipelineCollections","text":"Get scheduler object","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineCollections.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect and schedule pipelines — PipelineCollections","text":"","code":"PipelineCollections$get_scheduler()"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipeline result object — PipelineResult","title":"Pipeline result object — PipelineResult","text":"Pipeline result object Pipeline result object","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipeline result object — PipelineResult","text":"TRUE target finished, FALSE timeout reached","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Pipeline result object — PipelineResult","text":"progressor progress bar object, usually generated progress2 promise promise instance monitors pipeline progress verbose whether print warning messages names names pipeline build async_callback function callback call check loop; used pipeline running async=TRUE mode check_interval used async=TRUE pipeline_run, interval seconds check progress","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Pipeline result object — PipelineResult","text":"variables target variables pipeline variable_descriptions readable descriptions target variables valid logical true false whether result instance invalidated status result status, possible status 'initialize', 'running', 'finished', 'canceled', 'errored'. Note 'finished' means pipeline process finished. process (read-) process object pipeline running 'async' mode, NULL; see r_bg.","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Pipeline result object — PipelineResult","text":"PipelineResult$validate() PipelineResult$invalidate() PipelineResult$get_progress() PipelineResult$new() PipelineResult$run() PipelineResult$await() PipelineResult$print() PipelineResult$get_values() PipelineResult$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"method-validate-","dir":"Reference","previous_headings":"","what":"Method validate()","title":"Pipeline result object — PipelineResult","text":"check result valid, raises errors invalidated","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline result object — PipelineResult","text":"","code":"PipelineResult$validate()"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"method-invalidate-","dir":"Reference","previous_headings":"","what":"Method invalidate()","title":"Pipeline result object — PipelineResult","text":"invalidate pipeline result","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline result object — PipelineResult","text":"","code":"PipelineResult$invalidate()"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"method-get-progress-","dir":"Reference","previous_headings":"","what":"Method get_progress()","title":"Pipeline result object — PipelineResult","text":"get pipeline progress","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline result object — PipelineResult","text":"","code":"PipelineResult$get_progress()"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Pipeline result object — PipelineResult","text":"constructor (internal)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline result object — PipelineResult","text":"","code":"PipelineResult$new(path = character(0L), verbose = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipeline result object — PipelineResult","text":"path pipeline path verbose whether print warnings","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"Pipeline result object — PipelineResult","text":"run pipeline (internal)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline result object — PipelineResult","text":"","code":"PipelineResult$run(   expr,   env = parent.frame(),   quoted = FALSE,   async = FALSE,   process = NULL )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipeline result object — PipelineResult","text":"expr expression evaluate env environment expr quoted whether expr quoted async whether process runs sessions process process object inherits process, inferred expr process=NULL, raise errors found","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"method-await-","dir":"Reference","previous_headings":"","what":"Method await()","title":"Pipeline result object — PipelineResult","text":"wait targets get finished","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline result object — PipelineResult","text":"","code":"PipelineResult$await(names = NULL, timeout = Inf)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipeline result object — PipelineResult","text":"names target names wait, default NULL, .e. wait targets scheduled timeout maximum waiting time seconds","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Pipeline result object — PipelineResult","text":"print method","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline result object — PipelineResult","text":"","code":"PipelineResult$print()"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"method-get-values-","dir":"Reference","previous_headings":"","what":"Method get_values()","title":"Pipeline result object — PipelineResult","text":"get results","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline result object — PipelineResult","text":"","code":"PipelineResult$get_values(names = NULL, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipeline result object — PipelineResult","text":"names target names read ... passed codelinkpipeline_read","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Pipeline result object — PipelineResult","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline result object — PipelineResult","text":"","code":"PipelineResult$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineResult.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipeline result object — PipelineResult","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definition for pipeline tools — PipelineTools","title":"Class definition for pipeline tools — PipelineTools","text":"Class definition pipeline tools Class definition pipeline tools","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class definition for pipeline tools — PipelineTools","text":"value inputs, list key missing values targets PipelineResult instance as_promise async true; otherwise list values input names environment shared variables See type table progress Nothing new pipeline object based path given saved file path data file found default value","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Class definition for pipeline tools — PipelineTools","text":"settings_path absolute path settings file extdata_path absolute path user-defined pipeline data folder target_table table target names descriptions result_table summary results, including signatures data commands pipeline_path absolute path pipeline pipeline_name code name pipeline","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class definition for pipeline tools — PipelineTools","text":"PipelineTools$new() PipelineTools$set_settings() PipelineTools$get_settings() PipelineTools$read() PipelineTools$run() PipelineTools$eval() PipelineTools$shared_env() PipelineTools$python_module() PipelineTools$progress() PipelineTools$attach() PipelineTools$visualize() PipelineTools$fork() PipelineTools$with_activated() PipelineTools$clean() PipelineTools$save_data() PipelineTools$load_data() PipelineTools$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class definition for pipeline tools — PipelineTools","text":"construction function","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$new(   pipeline_name,   settings_file = \"settings.yaml\",   paths = pipeline_root(),   temporary = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"pipeline_name name pipeline, usually pipeline 'DESCRIPTION' file, pipeline folder name settings_file file name settings file, user inputs stored paths paths find pipeline, usually parent folder pipeline; default pipeline_root() temporary whether save paths current pipeline root registry. Set TRUE importing pipelines subject pipeline folders","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-set-settings-","dir":"Reference","previous_headings":"","what":"Method set_settings()","title":"Class definition for pipeline tools — PipelineTools","text":"set inputs","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$set_settings(..., .list = NULL)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"..., .list named list inputs; inputs named, otherwise errors raised","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-get-settings-","dir":"Reference","previous_headings":"","what":"Method get_settings()","title":"Class definition for pipeline tools — PipelineTools","text":"get current inputs","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$get_settings(key, default = NULL, constraint)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"key input name; default missing, .e., get settings default default value found constraint constraint results; input value constraint, first element constraint returned.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"Class definition for pipeline tools — PipelineTools","text":"read intermediate variables","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$read(var_names, ifnotfound = NULL, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"var_names target names, can obtained via x$target_table member; default missing, .e., read intermediate variables ifnotfound variable default value found ... parameters passing pipeline_read","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"Class definition for pipeline tools — PipelineTools","text":"run pipeline","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$run(   names = NULL,   async = FALSE,   as_promise = async,   scheduler = c(\"none\", \"future\", \"clustermq\"),   type = c(\"smart\", \"callr\", \"vanilla\"),   envir = new.env(parent = globalenv()),   callr_function = NULL,   return_values = TRUE,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"names pipeline variable names calculate; default calculate targets async whether run asynchronous another process as_promise whether return PipelineResult instance scheduler, type, envir, callr_function, return_values, ... passed pipeline_run as_promise true, otherwise arguments passed pipeline_run_bare","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-eval-","dir":"Reference","previous_headings":"","what":"Method eval()","title":"Class definition for pipeline tools — PipelineTools","text":"run pipeline order; unlike $run(), method use targets infrastructure, hence pipeline results stored, order names respected.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$eval(names, env = parent.frame(), clean = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"names pipeline variable names calculate; must specified env environment evaluate store results clean whether evaluate without polluting env","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-shared-env-","dir":"Reference","previous_headings":"","what":"Method shared_env()","title":"Class definition for pipeline tools — PipelineTools","text":"run pipeline shared library scripts starting path R/shared","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$shared_env()"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-python-module-","dir":"Reference","previous_headings":"","what":"Method python_module()","title":"Class definition for pipeline tools — PipelineTools","text":"get 'Python' module embedded pipeline","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$python_module(   type = c(\"info\", \"module\", \"shared\", \"exist\"),   must_work = TRUE )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"type return type, choices 'info' (get basic information module path, default), 'module' (load module return ), 'shared' (load shared sub-module module, shared also report script), 'exist' (returns true false whether module exists ) must_work whether module needs existed . TRUE, raise errors module exist; default TRUE, ignored type 'exist'.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-progress-","dir":"Reference","previous_headings":"","what":"Method progress()","title":"Class definition for pipeline tools — PipelineTools","text":"get progress pipeline","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$progress(method = c(\"summary\", \"details\"))"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"method either 'summary' 'details'","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-attach-","dir":"Reference","previous_headings":"","what":"Method attach()","title":"Class definition for pipeline tools — PipelineTools","text":"attach pipeline tool environment (internally used)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$attach(env)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"env environment","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-visualize-","dir":"Reference","previous_headings":"","what":"Method visualize()","title":"Class definition for pipeline tools — PipelineTools","text":"visualize pipeline target dependency graph","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$visualize(   glimpse = FALSE,   aspect_ratio = 2,   node_size = 30,   label_size = 40,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"glimpse whether glimpse graph network render state aspect_ratio controls node spacing node_size, label_size size nodes node labels ... passed pipeline_visualize","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-fork-","dir":"Reference","previous_headings":"","what":"Method fork()","title":"Class definition for pipeline tools — PipelineTools","text":"fork (copy) current pipeline new directory","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$fork(path, filter_pattern = PIPELINE_FORK_PATTERN)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"path path new pipeline, folder created filter_pattern file pattern copy","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-with-activated-","dir":"Reference","previous_headings":"","what":"Method with_activated()","title":"Class definition for pipeline tools — PipelineTools","text":"run code pipeline activated, environment variables function behaviors might change condition (example, targets package functions)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$with_activated(expr, quoted = FALSE, env = parent.frame())"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"expr expression evaluate quoted whether expr quoted; default false env environment run expr","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-clean-","dir":"Reference","previous_headings":"","what":"Method clean()","title":"Class definition for pipeline tools — PipelineTools","text":"clean part data store","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$clean(   destroy = c(\"all\", \"cloud\", \"local\", \"meta\", \"process\", \"progress\", \"objects\",     \"scratch\", \"workspaces\"),   ask = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"destroy, ask see tar_destroy","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-save-data-","dir":"Reference","previous_headings":"","what":"Method save_data()","title":"Class definition for pipeline tools — PipelineTools","text":"save data pipeline data folder","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$save_data(   data,   name,   format = c(\"json\", \"yaml\", \"csv\", \"fst\", \"rds\"),   overwrite = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"data R object name name data save, must start letters format serialize format, choices 'json', 'yaml', 'csv', 'fst', 'rds'; default 'json'. save arbitrary objects functions environments, use 'rds' overwrite whether overwrite existing files; default ... passed saver functions","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-load-data-","dir":"Reference","previous_headings":"","what":"Method load_data()","title":"Class definition for pipeline tools — PipelineTools","text":"load data pipeline data folder","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$load_data(   name,   error_if_missing = TRUE,   default_if_missing = NULL,   format = c(\"auto\", \"json\", \"yaml\", \"csv\", \"fst\", \"rds\"),   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"name name data error_if_missing whether raise errors name missing default_if_missing default values return name missing format format data, default automatically obtained file extension ... passed loader functions","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class definition for pipeline tools — PipelineTools","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for pipeline tools — PipelineTools","text":"","code":"PipelineTools$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/PipelineTools.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for pipeline tools — PipelineTools","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"class intended direct use. Please create new child classes implement key methods.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"simplify enabled, one block loaded, result vector (type=\"voltage\") matrix (others), otherwise result named list names blocks.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"subject subject instance (RAVESubject) number integer stands electrode number reference ID reference reference electrode, either NULL reference electrode instance inherits RAVEAbstarctElectrode epoch RAVEEpoch instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"type signal type electrode, 'LFP', 'Spike', 'EKG'; default 'Unknown' power_enabled whether electrode can used power analyses frequency, frequency-time analyses; usually requires transforming electrode raw voltage signals using signal processing methods 'Fourier', 'wavelet', 'Hilbert', 'multi-taper', etc. electrode power data, power data can loaded via prepare_subject_power method. is_reference whether instance reference electrode location location type electrode, see LOCATION_TYPES details exists whether electrode exists subject preprocess_file path preprocess 'HDF5' file power_file path power 'HDF5' file phase_file path phase 'HDF5' file voltage_file path voltage 'HDF5' file reference_name reference electrode name epoch_name current epoch name cache_root run-time cache path; NA epoch trial intervals missing trial_intervals trial intervals relative epoch onset","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"RAVEAbstarctElectrode$new() RAVEAbstarctElectrode$set_reference() RAVEAbstarctElectrode$set_epoch() RAVEAbstarctElectrode$clear_cache() RAVEAbstarctElectrode$clear_memory() RAVEAbstarctElectrode$load_data() RAVEAbstarctElectrode$load_blocks() RAVEAbstarctElectrode$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"","code":"RAVEAbstarctElectrode$new(subject, number, quiet = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"subject character RAVESubject instance number current electrode number reference ID quiet reserved, whether suppress warning messages","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"method-set-reference-","dir":"Reference","previous_headings":"","what":"Method set_reference()","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"set reference instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"","code":"RAVEAbstarctElectrode$set_reference(reference)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"reference NULL RAVEAbstarctElectrode instance instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"method-set-epoch-","dir":"Reference","previous_headings":"","what":"Method set_epoch()","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"set epoch instance electrode","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"","code":"RAVEAbstarctElectrode$set_epoch(epoch)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"epoch characters RAVEEpoch instance. characters, make sure \"epoch_<name>.csv\" meta folder.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"method-clear-cache-","dir":"Reference","previous_headings":"","what":"Method clear_cache()","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"method clear cache hard drive","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"","code":"RAVEAbstarctElectrode$clear_cache(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"... implemented child instances","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"method-clear-memory-","dir":"Reference","previous_headings":"","what":"Method clear_memory()","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"method clear memory","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"","code":"RAVEAbstarctElectrode$clear_memory(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"... implemented child instances","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"method-load-data-","dir":"Reference","previous_headings":"","what":"Method load_data()","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"method load electrode data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"","code":"RAVEAbstarctElectrode$load_data(type)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"type data type \"power\", \"phase\", \"voltage\", \"wavelet-coefficient\", others depending child class implementations","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"method-load-blocks-","dir":"Reference","previous_headings":"","what":"Method load_blocks()","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"load electrode block-wise data (reference), useful epoch absent","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"","code":"RAVEAbstarctElectrode$load_blocks(blocks, type, simplify = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"blocks session blocks type data type \"power\", \"phase\", \"voltage\", \"wavelet-coefficient\". simplify whether simplify result","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"","code":"RAVEAbstarctElectrode$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEAbstarctElectrode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract definition of electrode class in RAVE — RAVEAbstarctElectrode","text":"","code":"if (FALSE) {  # To run this example, please download demo subject (~700 MB) from # https://github.com/beauchamplab/rave/releases/tag/v0.1.9-beta  generator <- RAVEAbstarctElectrode  # load demo subject electrode 14 e <- generator$new(\"demo/DemoSubject\", number = 14)  # set epoch e$subject$epoch_names e$set_epoch(\"auditory_onset\") head(e$epoch$table)  # set epoch range (-1 to 2 seconds relative to onset) e$trial_intervals <- c(-1,2) # or to set multiple ranges e$trial_intervals <- list(c(-2,-1), c(0, 2))  # set reference e$subject$reference_names reference_table <- e$subject$meta_data(   meta_type = \"reference\",   meta_name = \"default\") ref_name <- subset(reference_table, Electrode == 14)[[\"Reference\"]]  # the reference is CAR type, mean of electrode 13-16,24 ref_name  # load & set reference ref <- generator$new(e$subject, ref_name) e$set_reference(ref)  }"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":null,"dir":"Reference","previous_headings":"","what":"Definition for epoch class — RAVEEpoch","title":"Definition for epoch class — RAVEEpoch","text":"Trial epoch, contains following information: Block experiment block/session string; Time trial onset within block; Trial trial number; Condition trial condition. optional columns Event_xxx (starts \"Event\"). See https://openwetware.org/wiki/RAVE:Epoching details.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Definition for epoch class — RAVEEpoch","text":"self$table","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Definition for epoch class — RAVEEpoch","text":"name epoch name, character subject RAVESubject instance data list trial information, internally used table trial epoch table .columns epoch column names, internally used","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Definition for epoch class — RAVEEpoch","text":"columns columns trial table n_trials total number trials trials trial numbers","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Definition for epoch class — RAVEEpoch","text":"RAVEEpoch$new() RAVEEpoch$trial_at() RAVEEpoch$update_table() RAVEEpoch$set_trial() RAVEEpoch$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Definition for epoch class — RAVEEpoch","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for epoch class — RAVEEpoch","text":"","code":"RAVEEpoch$new(subject, name)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for epoch class — RAVEEpoch","text":"subject RAVESubject instance character name character, make sure \"epoch_<name>.csv\" meta folder","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"method-trial-at-","dir":"Reference","previous_headings":"","what":"Method trial_at()","title":"Definition for epoch class — RAVEEpoch","text":"get ith trial","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for epoch class — RAVEEpoch","text":"","code":"RAVEEpoch$trial_at(i, df = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for epoch class — RAVEEpoch","text":"trial number df whether return data frame list","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"method-update-table-","dir":"Reference","previous_headings":"","what":"Method update_table()","title":"Definition for epoch class — RAVEEpoch","text":"manually update table field","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for epoch class — RAVEEpoch","text":"","code":"RAVEEpoch$update_table()"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"method-set-trial-","dir":"Reference","previous_headings":"","what":"Method set_trial()","title":"Definition for epoch class — RAVEEpoch","text":"set one trial","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for epoch class — RAVEEpoch","text":"","code":"RAVEEpoch$set_trial(Block, Time, Trial, Condition, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for epoch class — RAVEEpoch","text":"Block block string Time time second Trial positive integer, trial number Condition character, trial condition ... key-value pairs corresponding optional columns","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Definition for epoch class — RAVEEpoch","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for epoch class — RAVEEpoch","text":"","code":"RAVEEpoch$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for epoch class — RAVEEpoch","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEEpoch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Definition for epoch class — RAVEEpoch","text":"","code":"# Please download DemoSubject ~700MB from # https://github.com/beauchamplab/rave/releases/tag/v0.1.9-beta  if (FALSE) {  # Load meta/epoch_auditory_onset.csv from subject demo/DemoSubject epoch <-RAVEEpoch$new(subject = 'demo/DemoSubject',                       name = 'auditory_onset')  # first several trials head(epoch$table)  # query specific trial old_trial1 <- epoch$trial_at(1)  # Create new trial or change existing trial epoch$set_trial(Block = '008', Time = 10,                 Trial = 1, Condition = 'AknownVmeant') new_trial1 <- epoch$trial_at(1)  # Compare new and old trial 1 rbind(old_trial1, new_trial1)  # To get updated trial table, must update first epoch$update_table() head(epoch$table)  }"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"R6 class definition","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"data frame","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"raveio::RAVESubject -> RAVEMetaSubject","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"project project instance current subject; see RAVEProject project_name character string project name subject_code character string subject code subject_id subject ID: \"project/subject\" path subject root path rave_path 'rave' directory subject root path meta_path meta data directory current subject freesurfer_path 'FreeSurfer' directory current subject. path exists, values NA preprocess_path preprocess directory subject 'rave' path data_path data directory subject 'rave' path cache_path path 'FST' copies subject 'data' path pipeline_path path pipeline scripts subject's folder note_path path stores 'RAVE' related subject notes epoch_names possible epoch names reference_names possible reference names reference_path reference path 'rave' folder preprocess_settings preprocess instance; see RAVEPreprocessSettings blocks subject experiment blocks current project electrodes electrodes, matter excluded raw_sample_rates voltage sample rate power_sample_rate power spectrum sample rate has_wavelet whether electrodes wavelet transforms notch_filtered whether electrodes Notch-filtered electrode_types electrode signal types","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"raveio::RAVESubject$get_default() raveio::RAVESubject$get_electrode_table() raveio::RAVESubject$get_epoch() raveio::RAVESubject$get_frequency() raveio::RAVESubject$get_note_summary() raveio::RAVESubject$get_reference() raveio::RAVESubject$initialize_paths() raveio::RAVESubject$set_default() raveio::RAVESubject$valid_electrodes()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"RAVEMetaSubject$print() RAVEMetaSubject$new() RAVEMetaSubject$meta_data() RAVEMetaSubject$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"override print method","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"","code":"RAVEMetaSubject$print(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"","code":"RAVEMetaSubject$new(project_name, subject_code = NULL, strict = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"project_name character project name subject_code character subject code strict whether check subject folders exist","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"method-meta-data-","dir":"Reference","previous_headings":"","what":"Method meta_data()","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"get subject meta data located \"meta/\" folder","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"","code":"RAVEMetaSubject$meta_data(   meta_type = c(\"electrodes\", \"frequencies\", \"time_points\", \"epoch\", \"references\"),   meta_name = \"default\" )"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"meta_type choices 'electrodes', 'frequencies', 'time_points', 'epoch', 'references' meta_name meta_type='epoch', read 'epoch_<meta_name>.csv'; meta_type='references', read 'reference_<meta_name>.csv'.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"","code":"RAVEMetaSubject$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEMetaSubject.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class for meta analyses — RAVEMetaSubject","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines preprocess configurations — RAVEPreprocessSettings","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"R6 class definition","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"list electrode type, number, etc.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"current_version current configuration setting version path settings file path backup_path alternative back path redundancy checks data list raw configurations, internally used subject RAVESubject instance read_only whether configuration read-, yet implemented","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"version configure version currently stored files old_version whether settings file old format blocks experiment blocks electrodes electrode numbers sample_rates voltage data sample rate notch_filtered whether electrodes notch filtered has_wavelet whether electrode wavelet transforms data_imported whether electrodes imported data_locked whether electrode, blocks sample rate locked? usually electrode imported 'rave', electrode locked electrode_locked whether electrode imported locked wavelet_params wavelet parameters notch_params Notch filter parameters electrode_types electrode signal types @freeze_blocks whether free block, internally used @freeze_lfp_ecog whether freeze electrodes record 'LFP' signals, internally used @lfp_ecog_sample_rate 'LFP' sample rates, internally used all_blocks characters, possible blocks even included projects raw_path raw data path raw_path_type raw data path type, 'native' 'bids'","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"RAVEPreprocessSettings$new() RAVEPreprocessSettings$valid() RAVEPreprocessSettings$has_raw() RAVEPreprocessSettings$set_blocks() RAVEPreprocessSettings$set_electrodes() RAVEPreprocessSettings$set_sample_rates() RAVEPreprocessSettings$migrate() RAVEPreprocessSettings$electrode_info() RAVEPreprocessSettings$save()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"RAVEPreprocessSettings$new(subject, read_only = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"subject character RAVESubject instance read_only whether subject read-(yet implemented)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"method-valid-","dir":"Reference","previous_headings":"","what":"Method valid()","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"whether configuration valid ","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"RAVEPreprocessSettings$valid()"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"method-has-raw-","dir":"Reference","previous_headings":"","what":"Method has_raw()","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"whether raw data folder exists","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"RAVEPreprocessSettings$has_raw()"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"method-set-blocks-","dir":"Reference","previous_headings":"","what":"Method set_blocks()","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"set blocks","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"RAVEPreprocessSettings$set_blocks(blocks, force = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"blocks character, combination session task run force whether ignore checking. used data structure native, example, 'BIDS' format","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"method-set-electrodes-","dir":"Reference","previous_headings":"","what":"Method set_electrodes()","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"set electrodes","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"RAVEPreprocessSettings$set_electrodes(   electrodes,   type = SIGNAL_TYPES,   add = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"electrodes integer vectors type signal type electrodes, see SIGNAL_TYPES add whether add current settings","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"method-set-sample-rates-","dir":"Reference","previous_headings":"","what":"Method set_sample_rates()","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"set sample frequency","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"RAVEPreprocessSettings$set_sample_rates(srate, type = SIGNAL_TYPES)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"srate sample rate, must positive number type electrode type set sample rate. 'rave', electrodes signal type must sample rate.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"method-migrate-","dir":"Reference","previous_headings":"","what":"Method migrate()","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"convert old format new formats","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"RAVEPreprocessSettings$migrate(force = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"force whether force migrate save settings","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"method-electrode-info-","dir":"Reference","previous_headings":"","what":"Method electrode_info()","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"get electrode information","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"RAVEPreprocessSettings$electrode_info(electrode)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"electrode integer","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"method-save-","dir":"Reference","previous_headings":"","what":"Method save()","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"save settings hard disk","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"RAVEPreprocessSettings$save()"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEPreprocessSettings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defines preprocess configurations — RAVEPreprocessSettings","text":"","code":"# The following example require downloading demo subject (~700 MB) from # https://github.com/beauchamplab/rave/releases/tag/v0.1.9-beta  if (FALSE) {  conf <- RAVEPreprocessSettings$new(subject = 'demo/DemoSubject') conf$blocks  # \"008\" \"010\" \"011\" \"012\"  conf$electrodes   # 5 electrodes  # Electrode 14 information conf$electrode_info(electrode = 14)  conf$data_imported # All 5 electrodes are imported  conf$data_locked   # Whether block, sample rates should be locked  }"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":null,"dir":"Reference","previous_headings":"","what":"Definition for 'RAVE' project class — RAVEProject","title":"Definition for 'RAVE' project class — RAVEProject","text":"Definition 'RAVE' project class Definition 'RAVE' project class","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Definition for 'RAVE' project class — RAVEProject","text":"character vector true false whether subject project","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Definition for 'RAVE' project class — RAVEProject","text":"path project folder, absolute path name project name, character pipeline_path path pipeline scripts project's folder","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Definition for 'RAVE' project class — RAVEProject","text":"RAVEProject$print() RAVEProject$new() RAVEProject$subjects() RAVEProject$has_subject() RAVEProject$group_path() RAVEProject$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Definition for 'RAVE' project class — RAVEProject","text":"override print method","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for 'RAVE' project class — RAVEProject","text":"","code":"RAVEProject$print(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for 'RAVE' project class — RAVEProject","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Definition for 'RAVE' project class — RAVEProject","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for 'RAVE' project class — RAVEProject","text":"","code":"RAVEProject$new(project_name, strict = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for 'RAVE' project class — RAVEProject","text":"project_name character strict whether check project path","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"method-subjects-","dir":"Reference","previous_headings":"","what":"Method subjects()","title":"Definition for 'RAVE' project class — RAVEProject","text":"get imported subjects within project","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for 'RAVE' project class — RAVEProject","text":"","code":"RAVEProject$subjects()"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"method-has-subject-","dir":"Reference","previous_headings":"","what":"Method has_subject()","title":"Definition for 'RAVE' project class — RAVEProject","text":"whether specific subject exists project","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for 'RAVE' project class — RAVEProject","text":"","code":"RAVEProject$has_subject(subject_code)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for 'RAVE' project class — RAVEProject","text":"subject_code character, subject name","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"method-group-path-","dir":"Reference","previous_headings":"","what":"Method group_path()","title":"Definition for 'RAVE' project class — RAVEProject","text":"get group data path 'rave' module","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for 'RAVE' project class — RAVEProject","text":"","code":"RAVEProject$group_path(module_id, must_work = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for 'RAVE' project class — RAVEProject","text":"module_id character, 'rave' module ID must_work whether directory must exist; exists, new one created?","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Definition for 'RAVE' project class — RAVEProject","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for 'RAVE' project class — RAVEProject","text":"","code":"RAVEProject$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVEProject.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for 'RAVE' project class — RAVEProject","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines 'RAVE' subject class — RAVESubject","title":"Defines 'RAVE' subject class — RAVESubject","text":"R6 class definition","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines 'RAVE' subject class — RAVESubject","text":"data frame integer vector valid electrodes value named list key-value pairs, one key specified simplify=TRUE, value returned. data frame four columns: 'namespace' group name entry (entries within namespace usually share module), 'timestamp' entry registered. 'entry_name' name entry. include_history true, multiple entries 'entry_name' might appear since obsolete entries included. 'entry_value' value corresponding entry. as_table FALSE, returns RAVEEpoch instance; otherwise returns epoch table; raise errors file missing epoch invalid. simplify true, returns vector reference electrode names, otherwise returns whole table; raise errors file missing reference invalid. simplify true, returns vector electrodes valid (excluded) given reference; otherwise returns table. subset true, table subset rows electrodes loaded kept. simplify true, returns vector frequencies; otherwise returns table.","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Defines 'RAVE' subject class — RAVESubject","text":"project project instance current subject; see RAVEProject project_name character string project name subject_code character string subject code subject_id subject ID: \"project/subject\" path subject root path rave_path 'rave' directory subject root path meta_path meta data directory current subject freesurfer_path 'FreeSurfer' directory current subject. path exists, values NA preprocess_path preprocess directory subject 'rave' path data_path data directory subject 'rave' path cache_path path 'FST' copies subject 'data' path pipeline_path path pipeline scripts subject's folder note_path path stores 'RAVE' related subject notes epoch_names possible epoch names reference_names possible reference names reference_path reference path 'rave' folder preprocess_settings preprocess instance; see RAVEPreprocessSettings blocks subject experiment blocks current project electrodes electrodes, matter excluded raw_sample_rates voltage sample rate power_sample_rate power spectrum sample rate has_wavelet whether electrodes wavelet transforms notch_filtered whether electrodes Notch-filtered electrode_types electrode signal types","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Defines 'RAVE' subject class — RAVESubject","text":"RAVESubject$print() RAVESubject$new() RAVESubject$meta_data() RAVESubject$valid_electrodes() RAVESubject$initialize_paths() RAVESubject$set_default() RAVESubject$get_default() RAVESubject$get_note_summary() RAVESubject$get_epoch() RAVESubject$get_reference() RAVESubject$get_electrode_table() RAVESubject$get_frequency() RAVESubject$clone()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Defines 'RAVE' subject class — RAVESubject","text":"override print method","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$print(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Defines 'RAVE' subject class — RAVESubject","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$new(project_name, subject_code = NULL, strict = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"project_name character project name subject_code character subject code strict whether check subject folders exist","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-meta-data-","dir":"Reference","previous_headings":"","what":"Method meta_data()","title":"Defines 'RAVE' subject class — RAVESubject","text":"get subject meta data located \"meta/\" folder","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$meta_data(   meta_type = c(\"electrodes\", \"frequencies\", \"time_points\", \"epoch\", \"references\"),   meta_name = \"default\" )"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"meta_type choices 'electrodes', 'frequencies', 'time_points', 'epoch', 'references' meta_name meta_type='epoch', read 'epoch_<meta_name>.csv'; meta_type='references', read 'reference_<meta_name>.csv'.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-valid-electrodes-","dir":"Reference","previous_headings":"","what":"Method valid_electrodes()","title":"Defines 'RAVE' subject class — RAVESubject","text":"get valid electrode numbers","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$valid_electrodes(reference_name, refresh = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"reference_name character, reference name, see meta_name self$meta_data load_meta2 meta_type 'reference' refresh whether reload reference table obtaining data, default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-initialize-paths-","dir":"Reference","previous_headings":"","what":"Method initialize_paths()","title":"Defines 'RAVE' subject class — RAVESubject","text":"create subject's directories hard disk","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$initialize_paths(include_freesurfer = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"include_freesurfer whether create 'FreeSurfer' path","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-set-default-","dir":"Reference","previous_headings":"","what":"Method set_default()","title":"Defines 'RAVE' subject class — RAVESubject","text":"set default key-value pair subject, used 'RAVE' modules","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$set_default(key, value, namespace = \"default\")"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"key character value value key namespace file name note (without post-fix)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-get-default-","dir":"Reference","previous_headings":"","what":"Method get_default()","title":"Defines 'RAVE' subject class — RAVESubject","text":"get default key-value pairs subject, used 'RAVE' modules","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$get_default(   ...,   default_if_missing = NULL,   simplify = TRUE,   namespace = \"default\" )"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"... single key, vector character keys default_if_missing default value key missing simplify whether simplify results one key fetch; default TRUE namespace file name note (without post-fix)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-get-note-summary-","dir":"Reference","previous_headings":"","what":"Method get_note_summary()","title":"Defines 'RAVE' subject class — RAVESubject","text":"get summary table key-value pairs used 'RAVE' modules subject","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$get_note_summary(namespaces, include_history = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"namespaces namespaces entries; see method get_default set_default. Default possible namespaces include_history whether include history entries; default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-get-epoch-","dir":"Reference","previous_headings":"","what":"Method get_epoch()","title":"Defines 'RAVE' subject class — RAVESubject","text":"check get subject's epoch information","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$get_epoch(epoch_name, as_table = FALSE, trial_starts = 0)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"epoch_name epoch name, depending subject's meta files as_table whether convert data.frame; default false trial_starts start trial relative epoch time; default 0","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-get-reference-","dir":"Reference","previous_headings":"","what":"Method get_reference()","title":"Defines 'RAVE' subject class — RAVESubject","text":"check get subject's reference information","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$get_reference(reference_name, simplify = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"reference_name reference name, depending subject's meta file settings simplify whether return reference column","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-get-electrode-table-","dir":"Reference","previous_headings":"","what":"Method get_electrode_table()","title":"Defines 'RAVE' subject class — RAVESubject","text":"check get subject's electrode table electrodes load-able","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$get_electrode_table(   electrodes,   reference_name,   subset = FALSE,   simplify = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"electrodes characters indicating integers \"1-14,20-30\", integer vector electrode numbers reference_name see method get_reference subset whether subset resulting data table simplify whether return electrodes","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-get-frequency-","dir":"Reference","previous_headings":"","what":"Method get_frequency()","title":"Defines 'RAVE' subject class — RAVESubject","text":"check get subject's frequency table, time-frequency decomposition needed.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$get_frequency(simplify = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"simplify whether simplify vector","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Defines 'RAVE' subject class — RAVESubject","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' subject class — RAVESubject","text":"","code":"RAVESubject$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/RAVESubject.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' subject class — RAVESubject","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"can store hard drive, read slices GB-level data seconds","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"self sliced data data frame dimension names index columns value_name value column original array collapsed data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"dim dimension array dimnames dimension names array use_index whether use one dimension index storing data multiple files hybrid whether allow data written disk last_used timestamp object read temporary whether remove files garbage collected","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"varnames dimension names (read-) read_only whether protect swap files changed swap_file file files save data ","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"Tensor$finalize() Tensor$print() Tensor$.use_multi_files() Tensor$new() Tensor$subset() Tensor$flatten() Tensor$to_swap() Tensor$to_swap_now() Tensor$get_data() Tensor$set_data() Tensor$collapse() Tensor$operate()","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"release resource remove files temporary instances","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$finalize()"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"print data dimensions snapshot","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$print(...)"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-use-multi-files-","dir":"Reference","previous_headings":"","what":"Method .use_multi_files()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"Internally used, whether use multiple files cache data instead one","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$.use_multi_files(mult)"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"mult logical","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$new(   data,   dim,   dimnames,   varnames,   hybrid = FALSE,   use_index = FALSE,   swap_file = temp_tensor_file(),   temporary = TRUE,   multi_files = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"data numeric array dim dimension array dimnames dimension names array varnames characters, names dimnames hybrid whether enable hybrid mode use_index whether use last dimension indexing swap_file store data hybrid mode files save data index; default stores raveio_getopt('tensor_temp_path') temporary whether remove temporary files existing multi_files use_index true, whether use multiple","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-subset-","dir":"Reference","previous_headings":"","what":"Method subset()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"subset tensor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$subset(..., drop = FALSE, data_only = FALSE, .env = parent.frame())"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"... dimension slices drop whether apply drop subset data data_only whether just return data value, wrap Tensor instance .env environment ... evaluated","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-flatten-","dir":"Reference","previous_headings":"","what":"Method flatten()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"converts tensor (array) table (data frame)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$flatten(include_index = FALSE, value_name = \"value\")"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"include_index logical, whether include dimension names value_name character, column name value","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-to-swap-","dir":"Reference","previous_headings":"","what":"Method to_swap()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"Serialize tensor file store via write_fst","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$to_swap(use_index = FALSE, delay = 0)"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"use_index whether use one dimension index faster loading delay greater 0, check last used, long ago, swap hard drive. difference time greater delay seconds, swap immediately.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-to-swap-now-","dir":"Reference","previous_headings":"","what":"Method to_swap_now()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"Serialize tensor file store via write_fst immediately","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$to_swap_now(use_index = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"use_index whether use one dimension index faster loading","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"restore data hard drive memory","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$get_data(drop = FALSE, gc_delay = 3)"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"drop whether apply drop data gc_delay seconds delay garbage collection","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-set-data-","dir":"Reference","previous_headings":"","what":"Method set_data()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"set/replace data given array","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$set_data(v)"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"v value replace old one, must dimension notice tensor environment. change one place, data places change. use carefully.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-collapse-","dir":"Reference","previous_headings":"","what":"Method collapse()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"apply mean, sum, median collapse data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$collapse(keep, method = \"mean\")"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"keep dimensions keep method \"mean\", \"sum\", \"median\"","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"method-operate-","dir":"Reference","previous_headings":"","what":"Method operate()","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"apply tensor anything along given dimension","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"Tensor$operate(   by,   fun = .Primitive(\"/\"),   match_dim,   mem_optimize = FALSE,   same_dimension = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"R object fun function apply match_dim dimensions match data mem_optimize optimize memory same_dimension whether return value dimension original instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/Tensor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for large Tensor (Array) in Hybrid Mode — Tensor","text":"","code":"if(!is_on_cran()){  # Create a tensor ts <- Tensor$new(   data = 1:18000000, c(3000,300,20),   dimnames = list(A = 1:3000, B = 1:300, C = 1:20),   varnames = c('A', 'B', 'C'))  # Size of tensor when in memory is usually large # `lobstr::obj_size(ts)` -> 8.02 MB  # Enable hybrid mode ts$to_swap_now()  # Hybrid mode, usually less than 1 MB # `lobstr::obj_size(ts)` -> 814 kB  # Subset data start1 <- Sys.time() subset(ts, C ~ C < 10 & C > 5, A ~ A < 10) #> Dimension:  9 x 300 x 4 #> - A: 1, 2, 3, 4, 5, 6,... #> - B: 1, 2, 3, 4, 5, 6,... #> - C: 6, 7, 8, 9 end1 <- Sys.time(); end1 - start1 #> Time difference of 0.188035 secs  # Join tensors ts <- lapply(1:20, function(ii){   Tensor$new(     data = 1:9000, c(30,300,1),     dimnames = list(A = 1:30, B = 1:300, C = ii),     varnames = c('A', 'B', 'C'), use_index = 2) }) ts <- join_tensors(ts, temporary = TRUE)  } #> NOT_CRAN is TRUE/true (not on CRAN) #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file191023a81334.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file1910737d045d.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file191024cd8c91.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file1910772b9f76.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file191069307b14.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file1910482eda0b.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file191015c0e38a.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file19103254c858.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file19107af62108.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file19107db3ec17.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file1910545ae8f3.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file19107b01ea5b.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file19101edf7744.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file191064d1fb48.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file19103325a08a.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file1910261daba0.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file191025ec91d0.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file1910296c1d23.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file191025e8e607.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file19102cbb1adc.fst  #> Writing to path: /tmp/RtmpSlBpsL/f0e6951d039923c/file19103a31def2.fst"},{"path":"https://beauchamplab.github.io/raveio/reference/ants_coreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Register 'CT' or 'MR' images via 'ANTs' — ants_coreg","title":"Register 'CT' or 'MR' images via 'ANTs' — ants_coreg","text":"ants_coreg aligns 'CT' 'MR' images; ants_mri_to_template aligns native 'MR' images group templates","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ants_coreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register 'CT' or 'MR' images via 'ANTs' — ants_coreg","text":"","code":"ants_coreg(   ct_path,   mri_path,   coreg_path = NULL,   reg_type = c(\"DenseRigid\", \"Rigid\", \"SyN\", \"Affine\", \"TRSAA\", \"SyNCC\", \"SyNOnly\"),   aff_metric = c(\"mattes\", \"meansquares\", \"GC\"),   syn_metric = c(\"mattes\", \"meansquares\", \"demons\", \"CC\"),   verbose = TRUE,   ... )  cmd_run_ants_coreg(   subject,   ct_path,   mri_path,   reg_type = c(\"DenseRigid\", \"Rigid\", \"SyN\", \"Affine\", \"TRSAA\", \"SyNCC\", \"SyNOnly\"),   aff_metric = c(\"mattes\", \"meansquares\", \"GC\"),   syn_metric = c(\"mattes\", \"meansquares\", \"demons\", \"CC\"),   verbose = TRUE,   dry_run = FALSE )  ants_mri_to_template(   subject,   template_subject = getOption(\"threeBrain.template_subject\", \"N27\"),   preview = FALSE,   verbose = TRUE,   ... )  cmd_run_ants_mri_to_template(   subject,   template_subject = getOption(\"threeBrain.template_subject\", \"N27\"),   verbose = TRUE,   dry_run = FALSE )  ants_morph_electrode(subject, preview = FALSE, dry_run = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/ants_coreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register 'CT' or 'MR' images via 'ANTs' — ants_coreg","text":"ct_path, mri_path absolute paths 'CT' 'MR' image files coreg_path registration path, save results; default parent folder ct_path reg_type registration type, choices 'DenseRigid', 'Rigid', 'Affine', 'SyN', 'TRSAA', 'SyNCC', 'SyNOnly', types; see ants_registration aff_metric cost function use linear 'affine' transform syn_metric cost function use 'SyN' transform verbose whether verbose command; default true ... arguments passed ants_registration subject 'RAVE' subject dry_run whether dry-run script print command instead executing code; default false template_subject template map 'MR' images preview whether preview results; default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ants_coreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register 'CT' or 'MR' images via 'ANTs' — ants_coreg","text":"Aligned 'CT' generated coreg_path path: 'ct_in_t1.nii.gz' aligned 'CT' image; image also re-sampled 'MRI' space 'transform.yaml' transform settings outputs 'CT_IJK_to_MR_RAS.txt' transform matrix volume 'IJK' space original 'CT' 'RAS' anatomical coordinate 'MR' scanner; 'affine' transforms 'CT_RAS_to_MR_RAS.txt' transform matrix scanner 'RAS' space original 'CT' 'RAS' 'MR' scanner space; 'affine' transforms ","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ants_preprocessing.html","id":null,"dir":"Reference","previous_headings":"","what":"Process 'T1' weighted 'MRI' using ANTs — ants_preprocessing","title":"Process 'T1' weighted 'MRI' using ANTs — ants_preprocessing","text":"Process 'T1' weighted 'MRI' using ANTs","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ants_preprocessing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process 'T1' weighted 'MRI' using ANTs — ants_preprocessing","text":"","code":"ants_preprocessing(   work_path,   image_path,   resample = FALSE,   verbose = TRUE,   template_subject = raveio_getopt(\"threeBrain_template_subject\") )"},{"path":"https://beauchamplab.github.io/raveio/reference/ants_preprocessing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process 'T1' weighted 'MRI' using ANTs — ants_preprocessing","text":"work_path working directory, intermediate images stored image_path input image path resample whether resample input image processing verbose whether verbose processing details template_subject template mapping, default derived raveio_getopt","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/ants_preprocessing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process 'T1' weighted 'MRI' using ANTs — ants_preprocessing","text":"Nothing. images saved work_path","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/archive_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Archive and share a subject — archive_subject","title":"Archive and share a subject — archive_subject","text":"Archive share subject","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/archive_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Archive and share a subject — archive_subject","text":"","code":"archive_subject(   subject,   path,   includes = c(\"orignal_signals\", \"processed_data\", \"rave_imaging\", \"pipelines\", \"notes\",     \"user_generated\"),   config = list() )"},{"path":"https://beauchamplab.github.io/raveio/reference/archive_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Archive and share a subject — archive_subject","text":"subject 'RAVE' subject archive path path zip file store; missing empty, path automatically created includes data include archive; default includes ( original raw signals, processed signals, imaging files, stored pipelines, notes, user-generated exports) config list configurations, including changing subject code, project name, exclude cache data; see examples","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/archive_subject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Archive and share a subject — archive_subject","text":"","code":"# This example requires you to install demo subject  if (FALSE) {   # Basic usage path <- archive_subject('demo/DemoSubject')  # clean up unlink(path)  # Advanced usage: include all the original signals # and processed data, no cache data, re-name to # demo/DemoSubjectLite path <- archive_subject(   'demo/DemoSubject',   includes = c(\"orignal_signals\", \"processed_data\"),   config = list(     rename = list(       project_name = \"demo\",       subject_code = \"DemoSubjectLite\"     ),     orignal_signals = list(       # include all raw signals       include_all = TRUE     ),     processed_data = list(       include_cache = FALSE     )   ) )  # Clean up temporary zip file unlink(path)  }"},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert character to RAVEProject instance — as_rave_project","title":"Convert character to RAVEProject instance — as_rave_project","text":"Convert character RAVEProject instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert character to RAVEProject instance — as_rave_project","text":"","code":"as_rave_project(project, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert character to RAVEProject instance — as_rave_project","text":"project character project name ... passed methods","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert character to RAVEProject instance — as_rave_project","text":"RAVEProject instance","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Get RAVESubject instance from character — as_rave_subject","title":"Get RAVESubject instance from character — as_rave_subject","text":"Get RAVESubject instance character","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get RAVESubject instance from character — as_rave_subject","text":"","code":"as_rave_subject(subject_id, strict = TRUE, reload = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get RAVESubject instance from character — as_rave_subject","text":"subject_id character format \"project/subject\" strict whether check subject directories exist reload whether reload (update) subject information, default true","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get RAVESubject instance from character — as_rave_subject","text":"RAVESubject instance","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert numeric number into print-friendly format — as_rave_unit","title":"Convert numeric number into print-friendly format — as_rave_unit","text":"Convert numeric number print-friendly format","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert numeric number into print-friendly format — as_rave_unit","text":"","code":"as_rave_unit(x, unit, label = \"\")"},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert numeric number into print-friendly format — as_rave_unit","text":"x numeric numeric vector unit unit x label prefix printing x","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert numeric number into print-friendly format — as_rave_unit","text":"Still numeric, print-friendly class","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/as_rave_unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert numeric number into print-friendly format — as_rave_unit","text":"","code":"sp <- as_rave_unit(1024, 'GB', 'Hard-disk space is ') print(sp, digits = 0) #> Hard-disk space is 1024 GB  sp - 12 #> Hard-disk space is 1012.00 GB  as.character(sp) #> [1] \"Hard-disk space is 1024.00 GB\"  as.numeric(sp) #> [1] 1024  # Vectorize sp <- as_rave_unit(c(500,200), 'MB/s', c('Writing: ', 'Reading: ')) print(sp, digits = 0, collapse = '\\n') #> Writing: 500 MB/s #> Reading: 200 MB/s"},{"path":"https://beauchamplab.github.io/raveio/reference/auto_process_blackrock.html","id":null,"dir":"Reference","previous_headings":"","what":"Monitors 'BlackRock' output folder and automatically import data into 'RAVE' — auto_process_blackrock","title":"Monitors 'BlackRock' output folder and automatically import data into 'RAVE' — auto_process_blackrock","text":"Automatically import 'BlackRock' files designated folder perform 'Notch' filters, 'Wavelet' transform; also generate epoch, reference files.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/auto_process_blackrock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monitors 'BlackRock' output folder and automatically import data into 'RAVE' — auto_process_blackrock","text":"","code":"auto_process_blackrock(   watch_path,   project_name = \"automated\",   task_name = \"RAVEWatchDog\",   scan_interval = 10,   time_threshold = Sys.time(),   max_jobs = 1L,   as_job = NA,   dry_run = FALSE,   config_open = dry_run )"},{"path":"https://beauchamplab.github.io/raveio/reference/auto_process_blackrock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monitors 'BlackRock' output folder and automatically import data into 'RAVE' — auto_process_blackrock","text":"watch_path folder watch project_name project name generate task_name watcher's name scan_interval scan directory every scan_interval seconds, lower 1 time_threshold time-threshold files: files modified time prior threshold ignored; default current time max_jobs maximum concurrent imports, default 1 as_job whether run 'RStudio' background job block session monitoring; default auto-detected dry_run whether dry-run code (instead executing scripts, return watcher's instance open settings file); default false config_open whether open pipeline configuration file; default equal dry_run","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/auto_process_blackrock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monitors 'BlackRock' output folder and automatically import data into 'RAVE' — auto_process_blackrock","text":"dry_run true, watcher's instance returned; otherwise nothing returned.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/backup_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Back up and rename the file or directory — backup_file","title":"Back up and rename the file or directory — backup_file","text":"Back rename file directory","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/backup_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back up and rename the file or directory — backup_file","text":"","code":"backup_file(path, remove = FALSE, quiet = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/backup_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back up and rename the file or directory — backup_file","text":"path path file directory remove whether remove original path; default false quiet whether verbose messages; default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/backup_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back up and rename the file or directory — backup_file","text":"FALSE nothing back , back-path path exists","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/backup_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back up and rename the file or directory — backup_file","text":"","code":"path <- tempfile() file.create(path) #> [1] TRUE  path2 <- backup_file(path, remove = TRUE) #> Moving file file19101032b643 #> => file19101032b643_[backup_20230809_204707]   file.exists(c(path, path2)) #> [1] FALSE  TRUE unlink(path2)"},{"path":"https://beauchamplab.github.io/raveio/reference/cache_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Manipulate cached data on the file systems — cache_path","title":"Manipulate cached data on the file systems — cache_path","text":"Manipulate cached data file systems","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/cache_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manipulate cached data on the file systems — cache_path","text":"","code":"cache_root(check = FALSE)  clear_cached_files(subject_code, quiet = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/cache_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manipulate cached data on the file systems — cache_path","text":"check whether ensure cache root path subject_code subject code remove; default missing. subject_code provided, subject-related cache files removed. quiet whether suppress message","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/cache_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manipulate cached data on the file systems — cache_path","text":"cache_root returns root path stores 'RAVE' cache data; clear_cached_files returns nothing","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/cache_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manipulate cached data on the file systems — cache_path","text":"'RAVE' intensively uses cache files. running personal computers, disk space might filled quickly. cache files safe remove 'RAVE' instance running. Function clear_cached_files designed remove cache files. run function, please make sure 'RAVE' instances shutdown.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/cache_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manipulate cached data on the file systems — cache_path","text":"","code":"cache_root() #> [1] \"~/rave_data/cache_dir/\""},{"path":"https://beauchamplab.github.io/raveio/reference/catgl.html","id":null,"dir":"Reference","previous_headings":"","what":"Print colored messages — catgl","title":"Print colored messages — catgl","text":"Print colored messages","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/catgl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print colored messages — catgl","text":"","code":"catgl(..., .envir = parent.frame(), level = \"DEBUG\", .pal, .capture = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/catgl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print colored messages — catgl","text":"..., .envir passed glue level passed cat2 .pal see pal cat2 .capture logical, whether capture message return without printing","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/catgl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print colored messages — catgl","text":"message characters","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/catgl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print colored messages — catgl","text":"level order sorted low high: \"DEBUG\", \"DEFAULT\", \"INFO\", \"WARNING\", \"ERROR\", \"FATAL\". different level display different colors icons message. can suppress messages certain levels setting 'raveio' options via raveio_setopt('verbose_level', <level>). Messages levels lower threshold muffled. See examples.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/catgl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print colored messages — catgl","text":"","code":"# ------------------ Basic Styles ---------------------  # Temporarily change verbose level for example raveio_setopt('verbose_level', 'DEBUG', FALSE)  # debug catgl('Debug message', level = 'DEBUG') #> Debug message   # default catgl('Default message', level = 'DEFAULT') #> Default message   # info catgl('Info message', level = 'INFO') #> Info message   # warning catgl('Warning message', level = 'WARNING') #> Warning message   # error catgl('Error message', level = 'ERROR') #> Error message   try({   # fatal, will call stop and raise error   catgl('Error message', level = 'FATAL') }, silent = TRUE) #> Error message   # ------------------ Muffle messages ---------------------  # Temporarily change verbose level to 'WARNING' raveio_setopt('verbose_level', 'WARNING', FALSE)  # default, muffled catgl('Default message')  # message printed for level >= Warning catgl('Default message', level = 'WARNING') #> Default message  catgl('Default message', level = 'ERROR') #> Default message"},{"path":"https://beauchamplab.github.io/raveio/reference/cmd-external.html","id":null,"dir":"Reference","previous_headings":"","what":"External shell commands for 'RAVE' — cmd_run_3dAllineate","title":"External shell commands for 'RAVE' — cmd_run_3dAllineate","text":"shell commands importing 'DICOM' images 'Nifti' format, reconstructing cortical surfaces, align' CT' 'MRI'. commands tested 'MacOS' 'Linux'. 'Windows' machines, please use 'WSL2' system.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/cmd-external.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"External shell commands for 'RAVE' — cmd_run_3dAllineate","text":"","code":"cmd_run_3dAllineate(   subject,   mri_path,   ct_path,   overwrite = FALSE,   command_path = NULL,   dry_run = FALSE,   verbose = dry_run )  cmd_execute(   script,   script_path,   command = \"bash\",   dry_run = FALSE,   backup = TRUE,   args = NULL,   ... )  cmd_run_r(   expr,   quoted = FALSE,   verbose = TRUE,   dry_run = FALSE,   log_file = tempfile(),   script_path = tempfile(),   ... )  cmd_run_dcm2niix(   subject,   src_path,   type = c(\"MRI\", \"CT\"),   merge = c(\"Auto\", \"No\", \"Yes\"),   float = c(\"Yes\", \"No\"),   crop = c(\"No\", \"Yes\", \"Ignore\"),   overwrite = FALSE,   command_path = NULL,   dry_run = FALSE,   verbose = dry_run )  cmd_run_flirt(   subject,   mri_path,   ct_path,   dof = 6,   cost = c(\"mutualinfo\", \"leastsq\", \"normcorr\", \"corratio\", \"normmi\", \"labeldiff\", \"bbr\"),   search = 90,   searchcost = c(\"mutualinfo\", \"leastsq\", \"normcorr\", \"corratio\", \"normmi\", \"labeldiff\",     \"bbr\"),   overwrite = FALSE,   command_path = NULL,   dry_run = FALSE,   verbose = dry_run )  cmd_run_recon_all(   subject,   mri_path,   args = c(\"-all\", \"-autorecon1\", \"-autorecon2\", \"-autorecon3\", \"-autorecon2-cp\",     \"-autorecon2-wm\", \"-autorecon2-pial\"),   work_path = NULL,   overwrite = FALSE,   command_path = NULL,   dry_run = FALSE,   verbose = dry_run )  cmd_run_recon_all_clinical(   subject,   mri_path,   work_path = NULL,   overwrite = FALSE,   command_path = NULL,   dry_run = FALSE,   verbose = dry_run,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/cmd-external.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"External shell commands for 'RAVE' — cmd_run_3dAllineate","text":"subject characters RAVESubject instance mri_path absolute 'MRI' volume; must 'Nifti' format ct_path absolute 'CT' volume; must 'Nifti' format overwrite whether overwrite existing files; default false command_path command line path 'RAVE' find command binary files dry_run whether run dry-run mode; mode, shell command execute. useful debugging scripts; default false verbose whether print command script; default true dry-run mode, false otherwise script shell script script_path path run script command command invoke; default 'bash' backup whether back script file immediately; default true args arguments shell command, especially 'FreeSurfer' reconstruction command ... passed system2, additional arguments expr expression run command quoted whether expr quoted; default false log_file log file stored src_path source 'DICOM' 'Nifti' image (absolute path) type type 'DICOM' 'Nifti' image; choices 'MRI' 'CT' merge, float, crop 'dcm2niix' conversion arguments; ignored source 'Nifti' format dof, cost, search, searchcost parameters used 'FSL' 'flirt' command; see documentation details work_path work path 'FreeSurfer' command;","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/cmd-external.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"External shell commands for 'RAVE' — cmd_run_3dAllineate","text":"list data containing script details: script script details script_path script /saved dry_run whether dry-run mode turned log_file path log file execute function execute script","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/collapse2.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse high-dimensional tensor array — collapse2","title":"Collapse high-dimensional tensor array — collapse2","text":"Collapse high-dimensional tensor array","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/collapse2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse high-dimensional tensor array — collapse2","text":"","code":"collapse2(x, keep, method = c(\"mean\", \"sum\"), ...)  # S3 method for FileArray collapse2(x, keep, method = c(\"mean\", \"sum\"), ...)  # S3 method for Tensor collapse2(x, keep, method = c(\"mean\", \"sum\"), ...)  # S3 method for array collapse2(x, keep, method = c(\"mean\", \"sum\"), ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/collapse2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse high-dimensional tensor array — collapse2","text":"x R array, FileArray-class, Tensor object keep integer vector, margins keep method character, calculates mean sum array collapsing ... passed methods","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/collapse2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse high-dimensional tensor array — collapse2","text":"collapsed array (vector matrix), depending keep","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/collapse2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse high-dimensional tensor array — collapse2","text":"","code":"x <- array(1:16, rep(2, 4))  collapse2(x, c(3, 2)) #>      [,1] [,2] #> [1,]  5.5  7.5 #> [2,]  9.5 11.5  # Alternative method, but slower when `x` is a large array apply(x, c(3, 2), mean) #>      [,1] [,2] #> [1,]  5.5  7.5 #> [2,]  9.5 11.5  # filearray y <- filearray::as_filearray(x)  collapse2(y, c(3, 2)) #>      [,1] [,2] #> [1,]  5.5  7.5 #> [2,]  9.5 11.5  collapse2(y, c(3, 2), \"sum\") #>      [,1] [,2] #> [1,]   22   30 #> [2,]   38   46  # clean up y$delete(force = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/collapse_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse power array with given analysis cubes — collapse_power","title":"Collapse power array with given analysis cubes — collapse_power","text":"Collapse power array given analysis cubes","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/collapse_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse power array with given analysis cubes — collapse_power","text":"","code":"collapse_power(x, analysis_index_cubes)  # S3 method for array collapse_power(x, analysis_index_cubes)  # S3 method for FileArray collapse_power(x, analysis_index_cubes)"},{"path":"https://beauchamplab.github.io/raveio/reference/collapse_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse power array with given analysis cubes — collapse_power","text":"x FileArray-class array, must 4 modes following sequence Frequency, Time, Trial, Electrode analysis_index_cubes list analysis indices mode","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/collapse_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse power array with given analysis cubes — collapse_power","text":"list collapsed (mean) results freq_trial_elec collapsed time-points freq_time_elec collapsed trials time_trial_elec collapsed frequencies freq_time collapsed trials electrodes freq_elec collapsed trials time-points freq_trial collapsed time-points electrodes time_trial collapsed frequencies electrodes time_elec collapsed frequencies trials trial_elec collapsed frequencies time-points freq power per frequency, averaged modes time power per time-point, averaged modes trial power per trial, averaged modes","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/collapse_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse power array with given analysis cubes — collapse_power","text":"","code":"if(!is_on_cran()) {  # Generate a 4-mode tensor array x <- filearray::filearray_create(   tempfile(), dimension = c(16, 100, 20, 5),   partition_size = 1 ) x[] <- rnorm(160000) dnames <- list(   Frequency = 1:16,   Time = seq(0, 1, length.out = 100),   Trial = 1:20,   Electrode = 1:5 ) dimnames(x) <- dnames  # Collapse array results <- collapse_power(x, list(   overall = list(),   A = list(Trial = 1:5, Frequency = 1:6),   B = list(Trial = 6:10, Time = 1:50) ))  # Plot power over frequency and time groupB_result <- results$B   image(t(groupB_result$freq_time),       x = dnames$Time[groupB_result$cube_index$Time],       y = dnames$Frequency[groupB_result$cube_index$Frequency],       xlab = \"Time (s)\",       ylab = \"Frequency (Hz)\",       xlim = range(dnames$Time))  x$delete(force = TRUE)   } #> NOT_CRAN is TRUE/true (not on CRAN)"},{"path":"https://beauchamplab.github.io/raveio/reference/convert-fst.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert 'fst' files to other formats — convert-fst","title":"Convert 'fst' files to other formats — convert-fst","text":"'HDF5', 'csv' common file formats can easily read 'Matlab' 'Python'","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/convert-fst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert 'fst' files to other formats — convert-fst","text":"","code":"convert_fst_to_hdf5(fst_path, hdf5_path, exclude_names = NULL)  convert_fst_to_csv(fst_path, csv_path, exclude_names = NULL)"},{"path":"https://beauchamplab.github.io/raveio/reference/convert-fst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert 'fst' files to other formats — convert-fst","text":"fst_path path 'fst' file hdf5_path path 'HDF5' file; file exists conversion, file erased first. Please make sure files backed . exclude_names table names exclude csv_path path 'csv' file; file exists conversion, file erased first. Please make sure files backed .","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/convert-fst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert 'fst' files to other formats — convert-fst","text":"convert_fst_to_hdf5 return list data saved 'HDF5'; convert_fst_to_csv returns normalized 'csv' path.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/convert_blackrock.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert 'BlackRock' 'NEV/NSx' files — convert_blackrock","title":"Convert 'BlackRock' 'NEV/NSx' files — convert_blackrock","text":"Convert 'BlackRock' 'NEV/NSx' files","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/convert_blackrock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert 'BlackRock' 'NEV/NSx' files — convert_blackrock","text":"","code":"convert_blackrock(   file,   block = NULL,   subject = NULL,   to = NULL,   epoch = c(\"comment\", \"digital_inputs\", \"recording\", \"configuration\", \"log\",     \"button_trigger\", \"tracking\", \"video_sync\"),   format = c(\"mat\", \"hdf5\"),   header_only = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/convert_blackrock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert 'BlackRock' 'NEV/NSx' files — convert_blackrock","text":"file path 'NEV/NSx' file block block name, default file name subject subject code save files; default NULL save path, must directory; default file path. subject provided, default subject raw directory path epoch type events included epoch file; default include comment, digital inputs, recording trigger, configuration change, log comment, button trigger, tracking, video trigger. format output format, choices 'mat' 'hdf5' header_only whether just generate channel epoch table; default false ... ignored enhanced backward compatibility","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/convert_blackrock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert 'BlackRock' 'NEV/NSx' files — convert_blackrock","text":"results stored directory specified . Please read output message carefully.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/dir_create2.html","id":null,"dir":"Reference","previous_headings":"","what":"Force creating directory with checks — dir_create2","title":"Force creating directory with checks — dir_create2","text":"Force creating directory checks","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/dir_create2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Force creating directory with checks — dir_create2","text":"","code":"dir_create2(x, showWarnings = FALSE, recursive = TRUE, check = TRUE, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/dir_create2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Force creating directory with checks — dir_create2","text":"x path create showWarnings, recursive, ... passed dir.create check whether check directory creation","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/dir_create2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Force creating directory with checks — dir_create2","text":"Normalized path","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/dir_create2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Force creating directory with checks — dir_create2","text":"","code":"path <- file.path(tempfile(), 'a', 'b', 'c')  # The following are equivalent dir.create(path, showWarnings = FALSE, recursive = TRUE)  dir_create2(path)"},{"path":"https://beauchamplab.github.io/raveio/reference/find_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Try to find path along the root directory — find_path","title":"Try to find path along the root directory — find_path","text":"Try find path root directory even original path missing; see examples.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/find_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try to find path along the root directory — find_path","text":"","code":"find_path(path, root_dir, all = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/find_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try to find path along the root directory — find_path","text":"path file path root_dir top directory search path return possible paths, default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/find_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try to find path along the root directory — find_path","text":"absolute path file exists, NULL missing/failed.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/find_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Try to find path along the root directory — find_path","text":"file missing, find_path concatenates root directory path combined find file. example, path \"/b/c/d\", function first seek existence \"/b/c/d\". failed, \"b/c/d\", \"~/c/d\" reaching root directory. =TRUE, files/directories found along search path returned","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/find_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Try to find path along the root directory — find_path","text":"","code":"root <- tempdir()  # ------ Case 1: basic use case -------  # Create a path in root dir_create2(file.path(root, 'a'))  # find path even it's missing. The search path will be # root/ins/cd/a - missing # root/cd/a     - missing # root/a        - exists! find_path('ins/cd/a', root) #> [1] \"/tmp/RtmpSlBpsL/a\"  # ------ Case 2: priority ------- # Create two paths in root dir_create2(file.path(root, 'cc/a')) dir_create2(file.path(root, 'a'))  # If two paths exist, return the first path found # root/ins/cd/a - missing # root/cd/a     - exists - returned # root/a        - exists, but ignored find_path('ins/cc/a', root) #> [1] \"/tmp/RtmpSlBpsL/cc/a\"  # ------ Case 3: find all ------- # Create two paths in root dir_create2(file.path(root, 'cc/a')) dir_create2(file.path(root, 'a'))  # If two paths exist, return the first path found # root/ins/cd/a - missing # root/cd/a     - exists - returned # root/a        - exists - returned find_path('ins/cc/a', root, all = TRUE) #> [1] \"/tmp/RtmpSlBpsL/cc/a\" \"/tmp/RtmpSlBpsL/a\""},{"path":"https://beauchamplab.github.io/raveio/reference/generate_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate common average reference signal for 'RAVE' subjects — generate_reference","title":"Generate common average reference signal for 'RAVE' subjects — generate_reference","text":"properly run function, please install ravetools package.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/generate_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate common average reference signal for 'RAVE' subjects — generate_reference","text":"","code":"generate_reference(subject, electrodes)"},{"path":"https://beauchamplab.github.io/raveio/reference/generate_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate common average reference signal for 'RAVE' subjects — generate_reference","text":"subject subject ID RAVESubject instance electrodes electrodes calculate common average; electrodes must run 'Wavelet' first","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/generate_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate common average reference signal for 'RAVE' subjects — generate_reference","text":"reference instance returned new_reference signal type determined automatically.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/generate_reference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate common average reference signal for 'RAVE' subjects — generate_reference","text":"goal generating common average signals capture common movement channels remove electrode signals. common average signals stored subject reference directories. Two exact copies stored: one 'HDF5' format data can read universally programming languages; one filearray format can read R super fast speed.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/get_projects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all possible projects in 'RAVE' directory — get_projects","title":"Get all possible projects in 'RAVE' directory — get_projects","text":"Get possible projects 'RAVE' directory","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/get_projects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all possible projects in 'RAVE' directory — get_projects","text":"","code":"get_projects(refresh = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/get_projects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all possible projects in 'RAVE' directory — get_projects","text":"refresh whether refresh cache; default true","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/get_projects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all possible projects in 'RAVE' directory — get_projects","text":"characters project names","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/get_val2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get value or return default if invalid — get_val2","title":"Get value or return default if invalid — get_val2","text":"Get value return default invalid","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/get_val2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get value or return default if invalid — get_val2","text":"","code":"get_val2(x, key = NA, default = NULL, na = FALSE, min_len = 1L, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/get_val2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get value or return default if invalid — get_val2","text":"x list, environment, just R object key name obtain x. NA, return x. Default NA default default value na, min_len, ... passed is_valid_ish","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/get_val2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get value or return default if invalid — get_val2","text":"values keys default invalid","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/get_val2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get value or return default if invalid — get_val2","text":"","code":"x <- list(a=1, b = NA, c = character(0))  # ------------------------ Basic usage ------------------------  # no key, returns x if x is valid get_val2(x) #> $a #> [1] 1 #>  #> $b #> [1] NA #>  #> $c #> character(0) #>   get_val2(x, 'a', default = 'invalid') #> [1] 1    # get 'b', NA is not filtered out get_val2(x, 'b', default = 'invalid') #> [1] NA  # get 'b', NA is considered invalid get_val2(x, 'b', default = 'invalid', na = TRUE) #> [1] \"invalid\"    # get 'c', length 0 is allowed get_val2(x, 'c', default = 'invalid', min_len = 0) #> character(0)  # length 0 is forbidden get_val2(x, 'c', default = 'invalid', min_len = 1) #> [1] \"invalid\""},{"path":"https://beauchamplab.github.io/raveio/reference/h5_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns all names contained in 'HDF5' file — h5_names","title":"Returns all names contained in 'HDF5' file — h5_names","text":"Returns names contained 'HDF5' file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/h5_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns all names contained in 'HDF5' file — h5_names","text":"","code":"h5_names(file)"},{"path":"https://beauchamplab.github.io/raveio/reference/h5_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns all names contained in 'HDF5' file — h5_names","text":"file, 'HDF5' file path","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/h5_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns all names contained in 'HDF5' file — h5_names","text":"characters, data set names","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/h5_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a 'HDF5' file can be opened for read/write — h5_valid","title":"Check whether a 'HDF5' file can be opened for read/write — h5_valid","text":"Check whether 'HDF5' file can opened read/write","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/h5_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a 'HDF5' file can be opened for read/write — h5_valid","text":"","code":"h5_valid(file, mode = c(\"r\", \"w\"), close_all = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/h5_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a 'HDF5' file can be opened for read/write — h5_valid","text":"file path file mode 'r' read access 'w' write access close_all whether close connections just close current connection; default false. Set TRUE want close connections file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/h5_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a 'HDF5' file can be opened for read/write — h5_valid","text":"logical whether file can opened.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/h5_valid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether a 'HDF5' file can be opened for read/write — h5_valid","text":"","code":"x <- array(1:27, c(3,3,3)) f <- tempfile()  # No data written to the file, hence invalid h5_valid(f, 'r') #> [1] FALSE  save_h5(x, f, 'dset') h5_valid(f, 'w') #> [1] TRUE  # Open the file and hold a connection ptr <- hdf5r::H5File$new(filename = f, mode = 'w')  # Can read, but cannot write h5_valid(f, 'r')  # TRUE #> [1] TRUE h5_valid(f, 'w')  # FALSE #> [1] FALSE  # However, this can be reset via `close_all=TRUE` h5_valid(f, 'r', close_all = TRUE) #> [1] TRUE h5_valid(f, 'w')  # TRUE #> [1] TRUE  # Now the connection is no longer valid ptr #> Class: H5File #> ID: Object invalid"},{"path":"https://beauchamplab.github.io/raveio/reference/import_electrode_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Import electrode table into subject meta folder — import_electrode_table","title":"Import electrode table into subject meta folder — import_electrode_table","text":"Import electrode table subject meta folder","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/import_electrode_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import electrode table into subject meta folder — import_electrode_table","text":"","code":"import_electrode_table(path, subject, use_fs = NA, dry_run = FALSE, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/import_electrode_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import electrode table into subject meta folder — import_electrode_table","text":"path path table file, must 'csv' file subject 'RAVE' subject ID instance use_fs whether use 'FreeSurfer' files calculate coordinates dry_run whether dry-run process; true, table generated saved subject's meta folder ... passed read.csv","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/import_electrode_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import electrode table into subject meta folder — import_electrode_table","text":"Nothing, electrode information written directly subject's meta directory","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/install_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Install 'RAVE' modules — install_modules","title":"Install 'RAVE' modules — install_modules","text":"Install 'RAVE' modules","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/install_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install 'RAVE' modules — install_modules","text":"","code":"install_modules(modules, dependencies = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/install_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install 'RAVE' modules — install_modules","text":"modules vector characters, repository names; default automatically determined public registry dependencies whether update dependent packages; default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/install_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install 'RAVE' modules — install_modules","text":"nothing","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/install_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Install a subject from the internet, a zip file or a directory — install_subject","title":"Install a subject from the internet, a zip file or a directory — install_subject","text":"Install subject internet, zip file directory","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/install_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install a subject from the internet, a zip file or a directory — install_subject","text":"","code":"install_subject(   path = \".\",   ask = interactive(),   overwrite = FALSE,   backup = TRUE,   use_cache = TRUE,   dry_run = FALSE,   force_project = NA,   force_subject = NA,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/install_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install a subject from the internet, a zip file or a directory — install_subject","text":"path path subject archive, can path directory, zip file, internet address (must starts 'http', 'ftp') ask overwrite false, whether ask user subject exists; default true running interactive session; users prompt choices; ask=FALSE overwrite=FALSE, process end warning subject exists. overwrite whether overwrite existing subject, see argument ask backup backup whether back-subject overwriting data; default true, rename old subject folders instead removing; set true remove existing subject. use_cache whether use cached extraction directory; default true. Set FALSE want clean installation. dry_run whether dry-run process instead actually installing; rehearsal can help see progress prevent losing data force_project, force_subject force set project subject; raise warning might mess pipelines ... passed download.file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/install_subject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install a subject from the internet, a zip file or a directory — install_subject","text":"","code":"# Please run 2nd example of function archive_subject  if (FALSE) {  install_subject(path)  }"},{"path":"https://beauchamplab.github.io/raveio/reference/is.blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Check If Input Has Blank String — is.blank","title":"Check If Input Has Blank String — is.blank","text":"Check Input Blank String","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is.blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check If Input Has Blank String — is.blank","text":"","code":"is.blank(x)"},{"path":"https://beauchamplab.github.io/raveio/reference/is.blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check If Input Has Blank String — is.blank","text":"x input data: vector array","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is.blank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check If Input Has Blank String — is.blank","text":"x == \"\"","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is.zerolenth.html","id":null,"dir":"Reference","previous_headings":"","what":"Check If Input Has Zero Length — is.zerolenth","title":"Check If Input Has Zero Length — is.zerolenth","text":"Check Input Zero Length","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is.zerolenth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check If Input Has Zero Length — is.zerolenth","text":"","code":"is.zerolenth(x)"},{"path":"https://beauchamplab.github.io/raveio/reference/is.zerolenth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check If Input Has Zero Length — is.zerolenth","text":"x input data: vector, list, array","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is.zerolenth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check If Input Has Zero Length — is.zerolenth","text":"whether x zero length","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is_on_cran.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if current session is on 'CRAN' — is_on_cran","title":"Check if current session is on 'CRAN' — is_on_cran","text":"Use function examples test. goal comply 'CRAN' policy. use normal functions cheat. Violating 'CRAN' policy introduce instability code. Make sure reading Section 'Details' using function.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is_on_cran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if current session is on 'CRAN' — is_on_cran","text":"","code":"is_on_cran(if_interactive = FALSE, verbose = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/is_on_cran.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if current session is on 'CRAN' — is_on_cran","text":"if_interactive whether interactive session considered 'CRAN'; default FALSE verbose whether print reason return; default ","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is_on_cran.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if current session is on 'CRAN' — is_on_cran","text":"logical whether current environment considered 'CRAN'.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is_on_cran.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if current session is on 'CRAN' — is_on_cran","text":"According 'CRAN' policy, package examples test functions may use maximum 2 'CPU' cores. Examples running long suppressed. Normally package developers use interactive() avoid running examples parallel code 'CRAN'. However, checked locally, examples skipped . Coding bug examples reported. objective allow 'RAVE' package developers write test examples locally integrated development environment ('Github'), suppressing 'CRAN'. way, bugs examples revealed fixed promptly. use function inside package functions cheat slip illegal code eyes 'CRAN' folks. increase work load introduce instability code. find , report package 'CRAN'. use function make package robust. developing 'RAVE' module, function explicitly banned. implement check , sooner later.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is_valid_ish.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data is close to ``valid","title":"Check if data is close to ``valid","text":"Check data close ``valid\"","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is_valid_ish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data is close to ``valid","text":"","code":"is_valid_ish(   x,   min_len = 1,   max_len = Inf,   mode = NA,   na = TRUE,   blank = FALSE,   all = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/is_valid_ish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data is close to ``valid","text":"x data check min_len, max_len minimal maximum length mode storage mode (see mode) x considered valid. Default NA: disabled. na whether NA values considered invalid? blank whether blank string considered invalid? na blank true, whether element x invalid result failure?","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is_valid_ish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if data is close to ``valid","text":"logicals whether input x valid","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/is_valid_ish.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if data is close to ``valid","text":"","code":"# length checks is_valid_ish(NULL)                     # FALSE #> [1] FALSE is_valid_ish(integer(0))               # FALSE #> [1] FALSE is_valid_ish(integer(0), min_len = 0)  # TRUE #> [1] TRUE is_valid_ish(1:10, max_len = 9)        # FALSE #> [1] FALSE  # mode check is_valid_ish(1:10)                     # TRUE #> [1] TRUE is_valid_ish(1:10, mode = 'numeric')   # TRUE #> [1] TRUE is_valid_ish(1:10, mode = 'character') # FALSE #> [1] FALSE  # NA or blank checks is_valid_ish(NA)                     # FALSE #> [1] FALSE is_valid_ish(c(1,2,NA), all = FALSE) # FALSE #> [1] FALSE is_valid_ish(c(1,2,NA), all = TRUE)  # TRUE as not all elements are NA #> [1] TRUE  is_valid_ish(c('1',''), all = FALSE)  # TRUE #> [1] TRUE is_valid_ish(1:3, all = FALSE)        # TRUE as 1:3 are not characters #> [1] TRUE"},{"path":"https://beauchamplab.github.io/raveio/reference/join_tensors.html","id":null,"dir":"Reference","previous_headings":"","what":"Join Multiple Tensors into One Tensor — join_tensors","title":"Join Multiple Tensors into One Tensor — join_tensors","text":"Join Multiple Tensors One Tensor","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/join_tensors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join Multiple Tensors into One Tensor — join_tensors","text":"","code":"join_tensors(tensors, temporary = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/join_tensors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join Multiple Tensors into One Tensor — join_tensors","text":"tensors list Tensor instances temporary whether garbage collect space exiting R session","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/join_tensors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join Multiple Tensors into One Tensor — join_tensors","text":"new Tensor instance last dimension","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/join_tensors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join Multiple Tensors into One Tensor — join_tensors","text":"Merges multiple tensors. tensor must share dimension last one dimension 1, example, 100x100x1. Join 3 tensors like result 100x100x3 tensor. function handy sub-tensors generated separately. However, validation test. Use cautions.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/join_tensors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Join Multiple Tensors into One Tensor — join_tensors","text":"Zhengjia Wang","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/join_tensors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join Multiple Tensors into One Tensor — join_tensors","text":"","code":"tensor1 <- Tensor$new(data = 1:9, c(3,3,1), dimnames = list( A = 1:3, B = 1:3, C = 1 ), varnames = c('A', 'B', 'C')) tensor2 <- Tensor$new(data = 10:18, c(3,3,1), dimnames = list(   A = 1:3, B = 1:3, C = 2 ), varnames = c('A', 'B', 'C')) merged <- join_tensors(list(tensor1, tensor2)) merged$get_data() #> , , C = 1 #>  #>    B #> A   1 2 3 #>   1 1 4 7 #>   2 2 5 8 #>   3 3 6 9 #>  #> , , C = 2 #>  #>    B #> A    1  2  3 #>   1 10 13 16 #>   2 11 14 17 #>   3 12 15 18 #>"},{"path":"https://beauchamplab.github.io/raveio/reference/lapply_async.html","id":null,"dir":"Reference","previous_headings":"","what":"Run lapply in parallel — lapply_async","title":"Run lapply in parallel — lapply_async","text":"Uses lapply_async2, allows better parallel scheduling via with_future_parallel. 'Unix', function fork processes. 'Windows', function uses strategies specified on_failure","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/lapply_async.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run lapply in parallel — lapply_async","text":"","code":"lapply_async(   x,   FUN,   FUN.args = list(),   callback = NULL,   ncores = NULL,   on_failure = \"multisession\",   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/lapply_async.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run lapply in parallel — lapply_async","text":"x iterative elements FUN function apply element x FUN.args named list passed FUN arguments callback callback function NULL. passed function, function takes one argument (elements x) input, suppose return one string character. ncores number cores use, constraint max_worker option (see raveio_getopt); default maximum number workers available on_failure alternative strategy fork process disallowed (set users 'Windows') ... passed lapply_async2","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/lapply_async.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run lapply in parallel — lapply_async","text":"","code":"if(!is_on_cran()) { library(raveio)  # ---- Basic example ---------------------------- lapply_async(1:16, function(x) {   # function that takes long to fun   Sys.sleep(1)   x })  # With callback lapply_async(1:16, function(x){   Sys.sleep(1)   x + 1 }, callback = function(x) {   sprintf(\"Calculating|%s\", x) })  # With ncores pids <- lapply_async(1:16, function(x){   Sys.sleep(0.5)   Sys.getpid() }, ncores = 2)  # Unique number of PIDs (cores) unique(unlist(pids))  # ---- With scheduler ---------------------------- # Scheduler pre-initialize parallel workers and temporary # switches parallel context. The workers ramp-up # time can be saved by reusing the workers. # with_future_parallel({    # lapply_async block 1   pids <- lapply_async(1:16, function(x){     Sys.sleep(1)     Sys.getpid()   }, callback = function(x) {     sprintf(\"lapply_async without ncores|%s\", x)   })   print(unique(unlist(pids)))    # lapply_async block 2   pids <- lapply_async(1:16, function(x){     Sys.sleep(1)     Sys.getpid()   }, callback = function(x) {     sprintf(\"lapply_async with ncores|%s\", x)   }, ncores = 4)   print(unique(unlist(pids)))  })   } #> NOT_CRAN is TRUE/true (not on CRAN) #> [1] 6416 #> [1] 6416 #> [1] 6416"},{"path":"https://beauchamplab.github.io/raveio/reference/load_bids_ieeg_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in description files from 'BIDS-iEEG' format — load_bids_ieeg_header","title":"Read in description files from 'BIDS-iEEG' format — load_bids_ieeg_header","text":"Analyze file structures import json tsv files. File specification can found https://bids-specification.readthedocs.io/en/stable/, chapter \"Modality specific files\", section \"Intracranial Electroencephalography\" (doi:10.1038/s41597-019-0105-7 ). Please note function limited support BIDS format.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_bids_ieeg_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in description files from 'BIDS-iEEG' format — load_bids_ieeg_header","text":"","code":"load_bids_ieeg_header(bids_root, project_name, subject_code, folder = \"ieeg\")"},{"path":"https://beauchamplab.github.io/raveio/reference/load_bids_ieeg_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in description files from 'BIDS-iEEG' format — load_bids_ieeg_header","text":"bids_root 'BIDS' root directory project_name project folder name subject_code subject code, include \"sub-\" prefix folder folder name corresponding 'iEEG' data. possible analyze folders. However, default, function designed 'ieeg' folder.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_bids_ieeg_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in description files from 'BIDS-iEEG' format — load_bids_ieeg_header","text":"list containing information : subject_code character, removed leading \"sub-\" project_name character, project name has_session whether session/block names indicated file structure session_names session/block names indicated file structure. missing, session name \"default\" paths list containing path information stimuli_path stimuli path, used now sessions named list containing meta information session/block. names list task name, items corresponding task contains events channel information. Miscellaneous files stored \"others\" variable.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_bids_ieeg_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in description files from 'BIDS-iEEG' format — load_bids_ieeg_header","text":"","code":"# Download https://github.com/bids-standard/bids-examples/ # extract to directory ~/rave_data/bids_dir/  bids_root <- '~/rave_data/bids_dir/' project_name <- 'ieeg_visual'  if(dir.exists(bids_root) &&    dir.exists(file.path(bids_root, project_name, 'sub-01'))){    header <- load_bids_ieeg_header(bids_root, project_name, '01')    print(header)    # sessions   names(header$sessions)    # electrodes   head(header$sessions$`01`$spaces$unknown_space$table)    # visual task channel settings   head(header$sessions$`01`$tasks$`01-visual-01`$channels)    # event table   head(header$sessions$`01`$tasks$`01-visual-01`$channels) }"},{"path":"https://beauchamplab.github.io/raveio/reference/load_fst_or_h5.html","id":null,"dir":"Reference","previous_headings":"","what":"Function try to load 'fst' arrays, if not found, read 'HDF5' arrays — load_fst_or_h5","title":"Function try to load 'fst' arrays, if not found, read 'HDF5' arrays — load_fst_or_h5","text":"Function try load 'fst' arrays, found, read 'HDF5' arrays","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_fst_or_h5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function try to load 'fst' arrays, if not found, read 'HDF5' arrays — load_fst_or_h5","text":"","code":"load_fst_or_h5(   fst_path,   h5_path,   h5_name,   fst_need_transpose = FALSE,   fst_need_drop = FALSE,   ram = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/load_fst_or_h5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function try to load 'fst' arrays, if not found, read 'HDF5' arrays — load_fst_or_h5","text":"fst_path 'fst' file cache path h5_path alternative 'HDF5' file path h5_name 'HDF5' data name fst_need_transpose 'fst' data need transpose? fst_need_drop drop dimensions ram whether load memory directly perform lazy loading","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_fst_or_h5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function try to load 'fst' arrays, if not found, read 'HDF5' arrays — load_fst_or_h5","text":"'fst' cache file exists, returns LazyFST object, otherwise returns LazyH5 instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_fst_or_h5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function try to load 'fst' arrays, if not found, read 'HDF5' arrays — load_fst_or_h5","text":"RAVE stores data redundancy. One electrode data usually saved two copies different formats: 'HDF5' 'fst', 'HDF5' cross-platform supported multiple languages Matlab, Python, etc, 'fst' format supported R , super high read/write speed. load_fst_or_h5 checks whether presence 'fst' file, failed, reads data persistent 'HDF5' file.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_h5.html","id":null,"dir":"Reference","previous_headings":"","what":"Lazy Load 'HDF5' File via hdf5r-package — load_h5","title":"Lazy Load 'HDF5' File via hdf5r-package — load_h5","text":"Wrapper class LazyH5, load data \"lazy\" mode - read part dataset needed.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_h5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy Load 'HDF5' File via hdf5r-package — load_h5","text":"","code":"load_h5(file, name, read_only = TRUE, ram = FALSE, quiet = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/load_h5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy Load 'HDF5' File via hdf5r-package — load_h5","text":"file 'HDF5' file name group/data_name path dataset (H5D data) read_only used ram=FALSE, whether returned LazyH5 instance read ram load data memory immediately, default false quiet whether suppress messages","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_h5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lazy Load 'HDF5' File via hdf5r-package — load_h5","text":"ram true, return data arrays, otherwise return LazyH5 instance.","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/load_h5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lazy Load 'HDF5' File via hdf5r-package — load_h5","text":"","code":"file <- tempfile() x <- array(1:120, dim = c(4,5,6))  # save x to file with name /group/dataset/1 save_h5(x, file, '/group/dataset/1', quiet = TRUE)  # read data y <- load_h5(file, '/group/dataset/1', ram = TRUE) class(y)   # array #> [1] \"array\"  z <- load_h5(file, '/group/dataset/1', ram = FALSE) class(z)   # LazyH5 #> [1] \"LazyH5\" \"R6\"      dim(z) #> [1] 4 5 6"},{"path":"https://beauchamplab.github.io/raveio/reference/load_meta2.html","id":null,"dir":"Reference","previous_headings":"","what":"Load 'RAVE' subject meta data — load_meta2","title":"Load 'RAVE' subject meta data — load_meta2","text":"Load 'RAVE' subject meta data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_meta2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load 'RAVE' subject meta data — load_meta2","text":"","code":"load_meta2(meta_type, project_name, subject_code, subject_id, meta_name)"},{"path":"https://beauchamplab.github.io/raveio/reference/load_meta2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load 'RAVE' subject meta data — load_meta2","text":"meta_type electrodes, epochs, time_points, frequencies, references ... project_name project name subject_code subject code subject_id \"project_name/subject_code\" meta_name used meta_type epochs references","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_meta2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load 'RAVE' subject meta data — load_meta2","text":"data frame specified meta type NULL meta data found.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"A port to read_yaml — load_yaml","title":"A port to read_yaml — load_yaml","text":"examples, see save_yaml.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A port to read_yaml — load_yaml","text":"","code":"load_yaml(file, ..., map = NULL)"},{"path":"https://beauchamplab.github.io/raveio/reference/load_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A port to read_yaml — load_yaml","text":"file, ... passed read_yaml map fastmap2 instance NULL","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/load_yaml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A port to read_yaml — load_yaml","text":"fastmap2. map provided return map, otherwise return newly created one","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/mgh_to_nii.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert 'FreeSurfer' 'mgh' to 'Nifti' — mgh_to_nii","title":"Convert 'FreeSurfer' 'mgh' to 'Nifti' — mgh_to_nii","text":"Convert 'FreeSurfer' 'mgh' 'Nifti'","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/mgh_to_nii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert 'FreeSurfer' 'mgh' to 'Nifti' — mgh_to_nii","text":"","code":"mgh_to_nii(from, to)"},{"path":"https://beauchamplab.github.io/raveio/reference/mgh_to_nii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert 'FreeSurfer' 'mgh' to 'Nifti' — mgh_to_nii","text":"path 'FreeSurfer' 'mgh' 'mgz' file path 'Nifti' file, must ends 'nii' 'nii.gz'","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/mgh_to_nii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert 'FreeSurfer' 'mgh' to 'Nifti' — mgh_to_nii","text":"Nothing; file created path specified ","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/module_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new 'RAVE' (2.0) module to current project — module_add","title":"Add new 'RAVE' (2.0) module to current project — module_add","text":"Add new 'RAVE' (2.0) module current project","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/module_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new 'RAVE' (2.0) module to current project — module_add","text":"","code":"module_add(   module_id,   module_label,   path = \".\",   type = c(\"default\", \"bare\", \"scheduler\"),   ...,   pipeline_name = module_id,   overwrite = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/module_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new 'RAVE' (2.0) module to current project — module_add","text":"module_id module ID create, must unique module_label friendly label display dashboard path project root path; default current directory type template choose, options 'default' 'bare' ... additional configurations module 'order', 'group', 'badge' pipeline_name pipeline name create along module; default identical module_id overwrite whether overwrite existing module module ID exists; default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/module_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new 'RAVE' (2.0) module to current project — module_add","text":"Nothing.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/module_registry.html","id":null,"dir":"Reference","previous_headings":"","what":"'RAVE' module registry — module_registry","title":"'RAVE' module registry — module_registry","text":"Create, view, reserve module registry","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/module_registry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'RAVE' module registry — module_registry","text":"","code":"module_registry(   title,   repo,   modules,   authors,   url = sprintf(\"https://github.com/%s\", repo) )  module_registry2(repo, description)  get_modules_registries(update = NA)  get_module_description(path)  add_module_registry(title, repo, modules, authors, url, dry_run = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/module_registry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'RAVE' module registry — module_registry","text":"title title registry, usually identical description title 'DESCRIPTION' RAVE-CONFIG file repo 'Github' repository modules characters module ID, must contain letters, digits, underscore, dash; must duplicated existing registered modules authors list module authors; must one one author 'cre' role (see person). author considered maintainer, charge editing registry url web address repository update whether force updating registry path, description path 'DESCRIPTION' RAVE-CONFIG file dry_run whether generate preview message content instead opening email link","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/module_registry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'RAVE' module registry — module_registry","text":"registry object, list registries","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/module_registry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"'RAVE' module registry — module_registry","text":"'RAVE' registry contains following data entries: repository title, name, 'URL', authors, list module IDs. 'RAVE' requires module must use unique module ID. cause issue two modules share ID. Therefore 'RAVE' maintains public registry list module maintainers can register module ID prevent people using . register module ID, please use add_module_registry validate send email 'RAVE' development team.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/module_registry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'RAVE' module registry — module_registry","text":"","code":"if(interactive()) {  library(raveio)  # get current registries get_modules_registries(FALSE)  # create your own registry module_registry(   repo = \"rave-ieeg/rave-pipelines\",   title = \"A Collection of 'RAVE' Builtin Pipelines\",   authors = list(     list(\"Zhengjia\", \"Wang\", role = c(\"cre\", \"aut\"),          email = \"dipterix@rave.wiki\")   ),   modules = \"brain_viewer\" )  # If your repository is on Github and RAVE-CONFIG file exists module_registry2(\"rave-ieeg/rave-pipelines\")  # send a request to add your registry  reg <- module_registry2(\"rave-ieeg/rave-pipelines\") add_module_registry(reg)  }"},{"path":"https://beauchamplab.github.io/raveio/reference/new_electrode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new electrode channel instance or a reference signal instance — new_electrode","title":"Create new electrode channel instance or a reference signal instance — new_electrode","text":"Create new electrode channel instance reference signal instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/new_electrode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new electrode channel instance or a reference signal instance — new_electrode","text":"","code":"new_electrode(subject, number, signal_type, ...)  new_reference(subject, number, signal_type, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/new_electrode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new electrode channel instance or a reference signal instance — new_electrode","text":"subject characters, RAVESubject instance number integer new_electrode, characters new_reference; see 'Details' 'Examples' signal_type signal type electrode reference; can automatically inferred, highly recommended specify value; see SIGNAL_TYPES ... parameters passed class constructors, respectively","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/new_electrode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new electrode channel instance or a reference signal instance — new_electrode","text":"Electrode reference instances inherit RAVEAbstarctElectrode class","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/new_electrode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create new electrode channel instance or a reference signal instance — new_electrode","text":"new_electrode, number positive valid integer indicating electrode number. new_reference, number can one followings: 'noref', NULL reference needed 'ref_X' 'X' single number, reference another existing electrode; occur bipolar-reference cases 'ref_XXX' 'XXX' combination multiple electrodes can parsed parse_svec. occur common average reference, white matter reference. One example 'ref_13-16,24', meaning reference signal average electrode 13, 14, 15, 16, 24.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/new_electrode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new electrode channel instance or a reference signal instance — new_electrode","text":"","code":"if (FALSE) {  # Download subject demo/DemoSubject (~500 MB)  # Electrode 14 in demo/DemoSubject subject <- as_rave_subject(\"demo/DemoSubject\") e <- new_electrode(subject = subject, number = 14, signal_type = \"LFP\")  # Load CAR reference \"ref_13-16,24\" ref <- new_reference(subject = subject, number = \"ref_13-16,24\",                      signal_type = \"LFP\") e$set_reference(ref)   # Set epoch e$set_epoch(epoch = 'auditory_onset')  # Set loading window e$trial_intervals <- list(c(-1, 2))  # Preview print(e)  # Now epoch power power <- e$load_data(\"power\") names(dimnames(power))  # Subset power subset(power, Time ~ Time < 0, Electrode ~ Electrode == 14)  # Draw baseline tempfile <- tempfile() bl <- power_baseline(power, baseline_windows = c(-1, 0),                      method = \"decibel\", filebase = tempfile) collapsed_power <- collapse2(bl, keep = c(2,1)) # Visualize dname <- dimnames(bl) image(collapsed_power, x = dname$Time, y = dname$Frequency,       xlab = \"Time (s)\", ylab = \"Frequency (Hz)\",       main = \"Mean power over trial (Baseline: -1~0 seconds)\",       sub = glue('Electrode {e$number} (Reference: {ref$number})')) abline(v = 0, lty = 2, col = 'blue') text(x = 0, y = 20, \"Audio onset\", col = \"blue\", cex = 0.6)  # clear cache on hard disk e$clear_cache() ref$clear_cache()  }"},{"path":"https://beauchamplab.github.io/raveio/reference/niftyreg_coreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Register 'CT' to 'MR' images via 'NiftyReg' — niftyreg_coreg","title":"Register 'CT' to 'MR' images via 'NiftyReg' — niftyreg_coreg","text":"Supports 'Rigid', 'affine', 'non-linear' transformation","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/niftyreg_coreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register 'CT' to 'MR' images via 'NiftyReg' — niftyreg_coreg","text":"","code":"niftyreg_coreg(   ct_path,   mri_path,   coreg_path = NULL,   reg_type = c(\"rigid\", \"affine\", \"nonlinear\"),   interp = c(\"trilinear\", \"cubic\", \"nearest\"),   verbose = TRUE,   ... )  cmd_run_niftyreg_coreg(   subject,   ct_path,   mri_path,   reg_type = c(\"rigid\", \"affine\", \"nonlinear\"),   interp = c(\"trilinear\", \"cubic\", \"nearest\"),   verbose = TRUE,   dry_run = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/niftyreg_coreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register 'CT' to 'MR' images via 'NiftyReg' — niftyreg_coreg","text":"ct_path, mri_path absolute paths 'CT' 'MR' image files coreg_path registration path, save results; default parent folder ct_path reg_type registration type, choices 'rigid', 'affine', 'nonlinear' interp interpolate sampling volumes, choices 'trilinear', 'cubic', 'nearest' verbose whether verbose command; default true ... arguments passed register_volume subject 'RAVE' subject dry_run whether dry-run script print command instead executing code; default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/niftyreg_coreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register 'CT' to 'MR' images via 'NiftyReg' — niftyreg_coreg","text":"Nothing returned function. However, several files generated 'CT' path: 'ct_in_t1.nii' aligned 'CT' image; image also re-sampled 'MRI' space 'CT_IJK_to_MR_RAS.txt' transform matrix volume 'IJK' space original 'CT' 'RAS' anatomical coordinate 'MR' scanner 'CT_RAS_to_MR_RAS.txt' transform matrix scanner 'RAS' space original 'CT' 'RAS' 'MR' scanner space","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline-knitr-markdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure 'rmarkdown' files to build 'RAVE' pipelines — pipeline-knitr-markdown","title":"Configure 'rmarkdown' files to build 'RAVE' pipelines — pipeline-knitr-markdown","text":"Allows building 'RAVE' pipelines 'rmarkdown' files. Please use 'rmarkdown' scripts . Use pipeline_create_template create example.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline-knitr-markdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure 'rmarkdown' files to build 'RAVE' pipelines — pipeline-knitr-markdown","text":"","code":"configure_knitr(languages = c(\"R\", \"python\"))  pipeline_setup_rmd(   module_id,   env = parent.frame(),   collapse = TRUE,   comment = \"#>\",   languages = c(\"R\", \"python\"),   project_path = dipsaus::rs_active_project(child_ok = TRUE, shiny_ok = TRUE) )"},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline-knitr-markdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure 'rmarkdown' files to build 'RAVE' pipelines — pipeline-knitr-markdown","text":"languages one programming languages support; options 'R' 'python' module_id module ID, usually name direct parent folder containing pipeline file env environment set pipeline translator collapse, comment passed set method opts_chunk project_path project path containing pipeline folders, usually active project folder","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline-knitr-markdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure 'rmarkdown' files to build 'RAVE' pipelines — pipeline-knitr-markdown","text":"function supposed called later builds pipeline scripts","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates 'RAVE' pipeline instance — pipeline","title":"Creates 'RAVE' pipeline instance — pipeline","text":"Set pipeline inputs, execute, read pipeline outputs","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates 'RAVE' pipeline instance — pipeline","text":"","code":"pipeline(   pipeline_name,   settings_file = \"settings.yaml\",   paths = pipeline_root(),   temporary = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates 'RAVE' pipeline instance — pipeline","text":"pipeline_name name pipeline, usually title field 'DESCRIPTION' file, pipeline folder name (description file missing) settings_file name settings file, usually stores user inputs paths paths search pipeline, usually parent directory pipeline; default pipeline_root, search pipelines installed current working directory. temporary see pipeline_root","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates 'RAVE' pipeline instance — pipeline","text":"PipelineTools instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates 'RAVE' pipeline instance — pipeline","text":"","code":"if(!is_on_cran()) {  library(raveio)  # ------------ Set up a bare minimal example pipeline --------------- pipeline_path <- pipeline_create_template(   root_path = tempdir(), pipeline_name = \"raveio_demo\",   overwrite = TRUE, activate = FALSE, template_type = \"rmd-bare\")  save_yaml(list(   n = 100, pch = 16, col = \"steelblue\" ), file = file.path(pipeline_path, \"settings.yaml\"))  pipeline_build(pipeline_path)  rmarkdown::render(input = file.path(pipeline_path, \"main.Rmd\"),                   output_dir = pipeline_path,                   knit_root_dir = pipeline_path,                   intermediates_dir = pipeline_path, quiet = TRUE)  utils::browseURL(file.path(pipeline_path, \"main.html\"))  # --------------------- Example starts ------------------------  pipeline <- pipeline(\"raveio_demo\", paths = tempdir())  pipeline$run(\"plot_data\")  # Run again and you will see some targets are skipped pipeline$set_settings(pch = 2) pipeline$run(\"plot_data\")  head(pipeline$read(\"input_data\"))  # or use pipeline[c(\"n\", \"pch\", \"col\")] pipeline[-c(\"input_data\")]  pipeline$target_table  pipeline$result_table  pipeline$progress(\"details\")  # --------------------- Clean up ------------------------ unlink(pipeline_path, recursive = TRUE)  } #> NOT_CRAN is TRUE/true (not on CRAN) #>  #> Quitting from lines 9-12 [setup] (main.Rmd) #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection"},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_collection.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine and execute pipelines — pipeline_collection","title":"Combine and execute pipelines — pipeline_collection","text":"Combine execute pipelines","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_collection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine and execute pipelines — pipeline_collection","text":"","code":"pipeline_collection(root_path = NULL, overwrite = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_collection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine and execute pipelines — pipeline_collection","text":"root_path directory store pipelines results overwrite whether overwrite root_path exists; default false, raises error root_path exists","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_collection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine and execute pipelines — pipeline_collection","text":"PipelineCollections instance","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Install 'RAVE' pipelines — pipeline_install","title":"Install 'RAVE' pipelines — pipeline_install","text":"Install 'RAVE' pipelines","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install 'RAVE' pipelines — pipeline_install","text":"","code":"pipeline_install_local(   src,   to = c(\"default\", \"custom\", \"workdir\", \"tempdir\"),   upgrade = FALSE,   force = FALSE,   ... )  pipeline_install_github(   repo,   to = c(\"default\", \"custom\", \"workdir\", \"tempdir\"),   upgrade = FALSE,   force = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install 'RAVE' pipelines — pipeline_install","text":"src pipeline directory installation path; choices 'default', 'custom', 'workdir', 'tempdir'. Please specify pipeline root path via pipeline_root 'custom' used. upgrade whether upgrade dependence; default FALSE stability, however, highly recommended upgrade dependencies force whether force installing pipelines ... parameters used repo 'Github' repository user-repository combination, example, 'rave-ieeg/rave-pipeline'","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_install.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install 'RAVE' pipelines — pipeline_install","text":"nothing","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_settings_get_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or change pipeline input parameter settings — pipeline_settings_get_set","title":"Get or change pipeline input parameter settings — pipeline_settings_get_set","text":"Get change pipeline input parameter settings","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_settings_get_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or change pipeline input parameter settings — pipeline_settings_get_set","text":"","code":"pipeline_settings_set(   ...,   pipeline_path = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   pipeline_settings_path = file.path(pipeline_path, \"settings.yaml\") )  pipeline_settings_get(   key,   default = NULL,   constraint = NULL,   pipeline_path = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   pipeline_settings_path = file.path(pipeline_path, \"settings.yaml\") )"},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_settings_get_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or change pipeline input parameter settings — pipeline_settings_get_set","text":"pipeline_path root directory pipeline pipeline_settings_path settings file pipeline, must 'yaml' file; default 'settings.yaml' current pipeline key, ... character key(s) get set default default value key missing constraint constraint resulting value; NULL, result must within constraint values, otherwise first element constraint returned. useful make sure results stay within given options","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/pipeline_settings_get_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or change pipeline input parameter settings — pipeline_settings_get_set","text":"pipeline_settings_set returns list settings. pipeline_settings_get returns value given key.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/power_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate power baseline — power_baseline","title":"Calculate power baseline — power_baseline","text":"Calculate power baseline","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/power_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate power baseline — power_baseline","text":"","code":"power_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"sqrt_percentage\", \"decibel\", \"zscore\", \"sqrt_zscore\"),   units = c(\"Trial\", \"Frequency\", \"Electrode\"),   ... )  # S3 method for rave_prepare_power power_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"sqrt_percentage\", \"decibel\", \"zscore\", \"sqrt_zscore\"),   units = c(\"Frequency\", \"Trial\", \"Electrode\"),   electrodes,   ... )  # S3 method for FileArray power_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"sqrt_percentage\", \"decibel\", \"zscore\", \"sqrt_zscore\"),   units = c(\"Frequency\", \"Trial\", \"Electrode\"),   filebase = NULL,   ... )  # S3 method for array power_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"sqrt_percentage\", \"decibel\", \"zscore\", \"sqrt_zscore\"),   units = c(\"Trial\", \"Frequency\", \"Electrode\"),   ... )  # S3 method for ECoGTensor power_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"sqrt_percentage\", \"decibel\", \"zscore\", \"sqrt_zscore\"),   units = c(\"Trial\", \"Frequency\", \"Electrode\"),   filebase = NULL,   hybrid = TRUE,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/power_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate power baseline — power_baseline","text":"x R array, filearray, ECoGTensor, 'rave_prepare_power' object created prepare_subject_power. baseline_windows list baseline window (intervals) method baseline method; choices 'percentage', 'sqrt_percentage', 'decibel', 'zscore', 'sqrt_zscore'; see 'Details' baseline_array units unit baseline; see 'Details' ... passed methods electrodes electrodes included baseline calculation; power repository object produced prepare_subject_power ; default available electrodes signal_types filebase store output; default NULL automatically determined hybrid whether array ","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/power_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate power baseline — power_baseline","text":"Usually type input: arrays, filearray, ECoGTensor, outputs also type dimensions; 'rave_prepare_power' repositories, results stored 'baselined' element; see 'Examples'.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/power_baseline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate power baseline — power_baseline","text":"arrays must four-mode tensor must valid named dimnames. dimension names must 'Trial', 'Frequency', 'Time', 'Electrode', case sensitive. baseline_windows determines baseline windows used calculate time-points baseline included. can one intervals must pass validation function validate_time_window. units determines unit baseline. can one 'Trial', 'Frequency', 'Electrode'. default value , .e., baseline combination trial, frequency, electrode. share baseline across trials, please remove 'Trial' units. calculate baseline shared across electrodes (e.g. mini-electrodes), remove 'Electrode' units.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/power_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate power baseline — power_baseline","text":"","code":"if (FALSE) { # The following code need to download additional demo data # Please see https://rave.wiki/ for more details  library(raveio) repo <- prepare_subject_power(   subject = \"demo/DemoSubject\",   time_windows = c(-1, 3),   electrodes = c(14, 15))  ##### Direct baseline on the repository power_baseline(x = repo, method = \"decibel\",                baseline_windows = list(c(-1, 0), c(2, 3))) power_mean <- repo$power$baselined$collapse(   keep = c(2,1), method = \"mean\") image(power_mean, x = repo$time_points, y = repo$frequency,       xlab = \"Time (s)\", ylab = \"Frequency (Hz)\",       main = \"Mean power over trial (Baseline: -1~0 & 2~3)\") abline(v = 0, lty = 2, col = 'blue') text(x = 0, y = 20, \"Aud-Onset\", col = \"blue\", cex = 0.6)  ##### Alternatively, baseline on electrode instances baselined <- lapply(repo$power$data_list, function(inst) {   re <- power_baseline(inst, method = \"decibel\",                        baseline_windows = list(c(-1, 0), c(2, 3)))   collapse2(re, keep = c(2,1), method = \"mean\") }) power_mean2 <- (baselined[[1]] + baselined[[2]]) / 2  # Same with precision difference max(abs(power_mean2 - power_mean)) < 1e-6   }"},{"path":"https://beauchamplab.github.io/raveio/reference/progress_with_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced progress with logger message — progress_with_logger","title":"Enhanced progress with logger message — progress_with_logger","text":"best performance, please install 'ravedash'. function can replace progress2.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/progress_with_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced progress with logger message — progress_with_logger","text":"","code":"progress_with_logger(   title,   max = 1,   ...,   quiet = FALSE,   session = shiny::getDefaultReactiveDomain(),   shiny_auto_close = FALSE,   outputId = NULL,   log )"},{"path":"https://beauchamplab.github.io/raveio/reference/progress_with_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced progress with logger message — progress_with_logger","text":"title, max, ..., quiet, session, shiny_auto_close see progress2 outputId used package 'shidashi' installed, otherwise ignored log function, NULL, missing; default missing, use logger function package 'ravedash', cat2 'ravedash' installed. log=NULL, message suppressed 'shiny' applications. function provided, function called.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/progress_with_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced progress with logger message — progress_with_logger","text":"list, see progress2","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/py_nipy_coreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Register 'CT' to 'MR' images via 'nipy' script — py_nipy_coreg","title":"Register 'CT' to 'MR' images via 'nipy' script — py_nipy_coreg","text":"Align 'CT' using nipy.algorithms.registration.histogram_registration.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/py_nipy_coreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register 'CT' to 'MR' images via 'nipy' script — py_nipy_coreg","text":"","code":"py_nipy_coreg(   ct_path,   mri_path,   clean_source = TRUE,   inverse_target = TRUE,   precenter_source = TRUE,   smooth = 0,   reg_type = c(\"rigid\", \"affine\"),   interp = c(\"pv\", \"tri\"),   similarity = c(\"crl1\", \"cc\", \"cr\", \"mi\", \"nmi\", \"slr\"),   optimizer = c(\"powell\", \"steepest\", \"cg\", \"bfgs\", \"simplex\"),   tol = 1e-04,   dry_run = FALSE )  cmd_run_nipy_coreg(   subject,   ct_path,   mri_path,   clean_source = TRUE,   inverse_target = TRUE,   precenter_source = TRUE,   reg_type = c(\"rigid\", \"affine\"),   interp = c(\"pv\", \"tri\"),   similarity = c(\"crl1\", \"cc\", \"cr\", \"mi\", \"nmi\", \"slr\"),   optimizer = c(\"powell\", \"steepest\", \"cg\", \"bfgs\", \"simplex\"),   dry_run = FALSE,   verbose = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/py_nipy_coreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register 'CT' to 'MR' images via 'nipy' script — py_nipy_coreg","text":"ct_path, mri_path absolute paths 'CT' 'MR' image files clean_source whether replace negative 'CT' values zeros; default true inverse_target whether inverse 'MRI' color intensity; default true precenter_source whether adjust 'CT' transform matrix alignment, origin 'CT' center volume; default true. option may avoid case 'CT' far-away 'MR' volume beginning optimization smooth, interp, optimizer, tol optimization parameters, see 'nipy' documentation details. reg_type registration type, choices 'rigid' 'affine' similarity cost function alignment; choices 'crl1' ('L1' regularized correlation), 'cc' (correlation coefficient), 'cr' (correlation), 'mi' (mutual information), 'nmi' (normalized mutual information), 'slr' (likelihood ratio). reality personally find 'crl1' works best cases, though many tutorials suggest 'nmi'. dry_run whether dry-run script print command instead executing code; default false subject 'RAVE' subject verbose whether verbose command; default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/py_nipy_coreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register 'CT' to 'MR' images via 'nipy' script — py_nipy_coreg","text":"Nothing returned function. However, several files generated 'CT' path: 'ct_in_t1.nii' aligned 'CT' image; image also re-sampled 'MRI' space 'CT_IJK_to_MR_RAS.txt' transform matrix volume 'IJK' space original 'CT' 'RAS' anatomical coordinate 'MR' scanner 'CT_RAS_to_MR_RAS.txt' transform matrix scanner 'RAS' space original 'CT' 'RAS' 'MR' scanner space","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"'RAVE' pipeline functions — rave-pipeline","title":"'RAVE' pipeline functions — rave-pipeline","text":"Utility functions 'RAVE' pipelines, currently designed internal development use. infrastructure deployed 'RAVE' future facilitate \"self-expanding\" aim. Please check official 'RAVE' website.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'RAVE' pipeline functions — rave-pipeline","text":"","code":"pipeline_root(root_path, temporary = FALSE)  pipeline_list(root_path = pipeline_root())  pipeline_find(name, root_path = pipeline_root())  pipeline_attach(name, root_path = pipeline_root())  pipeline_run(   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   scheduler = c(\"none\", \"future\", \"clustermq\"),   type = c(\"smart\", \"callr\", \"vanilla\"),   envir = new.env(parent = globalenv()),   callr_function = NULL,   names = NULL,   async = FALSE,   check_interval = 0.5,   progress_quiet = !async,   progress_max = NA,   progress_title = \"Running pipeline\",   return_values = TRUE,   ... )  pipeline_clean(   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   destroy = c(\"all\", \"cloud\", \"local\", \"meta\", \"process\", \"progress\", \"objects\",     \"scratch\", \"workspaces\"),   ask = FALSE )  pipeline_run_bare(   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   scheduler = c(\"none\", \"future\", \"clustermq\"),   type = c(\"smart\", \"callr\", \"vanilla\"),   envir = new.env(parent = globalenv()),   callr_function = NULL,   names = NULL,   return_values = TRUE,   ... )  load_targets(..., env = NULL)  pipeline_target_names(pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"))  pipeline_debug(   quick = TRUE,   env = parent.frame(),   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   skip_names )  pipeline_eval(   names,   env = new.env(parent = parent.frame()),   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   settings_path = file.path(pipe_dir, \"settings.yaml\") )  pipeline_visualize(   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   glimpse = FALSE,   targets_only = TRUE,   shortcut = FALSE,   zoom_speed = 0.1,   ... )  pipeline_progress(   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   method = c(\"summary\", \"details\", \"custom\"),   func = targets::tar_progress_summary )  pipeline_fork(   src = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   dest = tempfile(pattern = \"rave_pipeline_\"),   filter_pattern = PIPELINE_FORK_PATTERN,   activate = FALSE )  pipeline_build(pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"))  pipeline_read(   var_names,   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   branches = NULL,   ifnotfound = NULL )  pipeline_vartable(   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   targets_only = TRUE,   complete_only = FALSE,   ... )  pipeline_hasname(var_names, pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"))  pipeline_watch(   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   targets_only = TRUE,   ... )  pipeline_create_template(   root_path,   pipeline_name,   overwrite = FALSE,   activate = TRUE,   template_type = c(\"rmd\", \"r\", \"rmd-bare\", \"rmd-scheduler\") )  pipeline_create_subject_pipeline(   subject,   pipeline_name,   overwrite = FALSE,   activate = TRUE,   template_type = c(\"rmd\", \"r\") )  pipeline_description(file)  pipeline_load_extdata(   name,   format = c(\"auto\", \"json\", \"yaml\", \"csv\", \"fst\", \"rds\"),   error_if_missing = TRUE,   default_if_missing = NULL,   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   ... )  pipeline_save_extdata(   data,   name,   format = c(\"json\", \"yaml\", \"csv\", \"fst\", \"rds\"),   overwrite = FALSE,   pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"),   ... )  pipeline_shared(pipe_dir = Sys.getenv(\"RAVE_PIPELINE\", \".\"))"},{"path":"https://beauchamplab.github.io/raveio/reference/rave-pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'RAVE' pipeline functions — rave-pipeline","text":"root_path root directory pipeline templates temporary whether save paths current pipeline root registry. Set TRUE importing pipelines subject pipeline folders name, pipeline_name pipeline name create; usually also folder pipe_dir pipeline directory ; can set via system environment Sys.setenv(\"RAVE_PIPELINE\"=...) scheduler schedule target jobs: default 'none', sequential. multiple heavy-weighted jobs can scheduled time, can choose 'future' 'clustermq' type pipeline executed; current choices \"smart\" enable 'future' package possible, 'callr' use r, 'vanilla' run everything sequentially main session. callr_function function passed tar_make; forced NULL type='vanilla', r type='callr' names names pipeline targets executed; default NULL, runs targets; use pipeline_target_names check available target names. async whether run pipeline without blocking main session check_interval running background (non-blocking mode), often check pipeline progress_title, progress_max, progress_quiet control progress, see progress2. return_values whether return pipeline target values; default true; works pipeline_run_bare ignored pipeline_run ... parameters, targets, etc. destroy part data repository needs cleaned ask whether ask env, envir environment execute pipeline quick whether skip finished targets save time skip_names hint target names fast skip provided --date; used quick=TRUE. missing, skip_names automatically determined settings_path path settings file name within subject's pipeline path glimpse whether hide network status visualizing pipelines targets_only whether return variable table targets ; default true shortcut whether display shortcut targets zoom_speed zoom speed visualizing pipeline dependence method progress presented; choices \"summary\", \"details\", \"custom\". custom method chosen, func called func function call reading customized pipeline progress; default tar_progress_summary src, dest pipeline folder copy pipeline script filter_pattern file name patterns used filter scripts avoid copying data files; default \"\\.(R|yaml|txt|csv|fst|conf)$\" activate whether activate new pipeline folder dest; default false var_names variable name fetch check branches branch read ; see tar_read ifnotfound default values return variable found complete_only whether show completed --date target variables; default false overwrite whether overwrite existing pipeline; default false users can double-check; true, existing pipeline, including data erased template_type template type create; choices 'r' 'rmd' subject character indicating valid 'RAVE' subject ID, RAVESubject instance file path 'DESCRIPTION' file pipeline folder, pipeline collection folder contains pipeline information, structures, dependencies, etc. format format extended data, default 'json', choices 'yaml', 'fst', 'csv', 'rds' error_if_missing, default_if_missing extended data found data extended data saved","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'RAVE' pipeline functions — rave-pipeline","text":"pipeline_root root directories pipelines pipeline_list available pipeline names pipeline_root pipeline_find path pipeline pipeline_run PipelineResult instance load_targets list targets build pipeline_target_names vector characters indicating pipeline target names pipeline_visualize widget visualizing target dependence structure pipeline_progress table building progress pipeline_fork normalized path forked pipeline directory pipeline_read value corresponding var_names, named list var_names one element pipeline_vartable table summaries variables; can raise errors pipeline never executed pipeline_hasname logical, whether pipeline variable built pipeline_watch basic shiny application monitor progress pipeline_description list descriptions pipeline pipeline collection","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare 'RAVE' single-subject data — prepare_subject_bare0","title":"Prepare 'RAVE' single-subject data — prepare_subject_bare0","text":"Prepare 'RAVE' single-subject data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare 'RAVE' single-subject data — prepare_subject_bare0","text":"","code":"prepare_subject_bare0(   subject,   electrodes,   reference_name,   ...,   quiet = TRUE,   repository_id = NULL )  prepare_subject_bare(   subject,   electrodes,   reference_name,   ...,   repository_id = NULL )  prepare_subject_with_epoch(   subject,   electrodes,   reference_name,   epoch_name,   time_windows,   env = parent.frame(),   ... )  prepare_subject_with_blocks(   subject,   electrodes,   reference_name,   blocks,   signal_type = \"LFP\",   time_frequency = signal_type == \"LFP\",   env = parent.frame(),   repository_id = NULL,   ... )  prepare_subject_phase(   subject,   electrodes,   reference_name,   epoch_name,   time_windows,   signal_type = c(\"LFP\"),   env = parent.frame(),   verbose = TRUE,   ... )  prepare_subject_power(   subject,   electrodes,   reference_name,   epoch_name,   time_windows,   signal_type = c(\"LFP\"),   env = parent.frame(),   verbose = TRUE,   ... )  prepare_subject_wavelet(   subject,   electrodes,   reference_name,   epoch_name,   time_windows,   signal_type = c(\"LFP\"),   env = parent.frame(),   verbose = TRUE,   ... )  prepare_subject_raw_voltage_with_epoch(   subject,   electrodes,   epoch_name,   time_windows,   ...,   quiet = TRUE,   repository_id = NULL )  prepare_subject_voltage_with_epoch(   subject,   electrodes,   epoch_name,   time_windows,   reference_name,   ...,   quiet = TRUE,   repository_id = NULL )"},{"path":"https://beauchamplab.github.io/raveio/reference/rave-prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare 'RAVE' single-subject data — prepare_subject_bare0","text":"subject character project subject, \"demo/YAB\", RAVESubject instance electrodes integer vector electrodes, character can parsed parse_svec reference_name reference name loaded ... ignored quiet whether quietly load data repository_id used internally epoch_name epoch name loaded, RAVEEpoch instance time_windows list time windows relative epoch onset time; need pass validation validate_time_window env environment evaluate blocks one session blocks load signal_type electrode signal type (length one) considered; default 'LFP'. option rarely needs change unless really want check power data types. signal types, check SIGNAL_TYPES time_frequency whether load time-frequency data preparing block data verbose whether show progress","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-prepare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare 'RAVE' single-subject data — prepare_subject_bare0","text":"fastmap2 (basically list) objects. Depending functions called, following items may exist list: subject RAVESubject instance epoch_name input epoch_name epoch RAVEEpoch instance reference_name input reference_name reference_table data frame reference electrode_table data frame electrode information frequency vector frequencies time_points vector time-points power_list list power data electrodes power_dimnames list trial indices, frequencies, time points, electrodes loaded","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-raw-validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate raw files in 'rave' directory — rave-raw-validation","title":"Validate raw files in 'rave' directory — rave-raw-validation","text":"Validate subjects returns whether subject can imported 'rave'","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-raw-validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate raw files in 'rave' directory — rave-raw-validation","text":"","code":"validate_raw_file(   subject_code,   blocks,   electrodes,   format,   data_type = c(\"continuous\"),   ... )  IMPORT_FORMATS"},{"path":"https://beauchamplab.github.io/raveio/reference/rave-raw-validation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Validate raw files in 'rave' directory — rave-raw-validation","text":"object class list length 7.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-raw-validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate raw files in 'rave' directory — rave-raw-validation","text":"subject_code subject code, direct folder 'rave' raw data path blocks block character, direct folder subject folder. raw files following 'BIDS' convention, see details electrodes electrodes verify format integer character. characters, run names(IMPORT_FORMATS) data_type currently support continuous type signals ... parameters used validating 'BIDS' format; see details.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-raw-validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate raw files in 'rave' directory — rave-raw-validation","text":"logical true false whether directory valid. Attributes containing error reasons snapshot data. attributes might : snapshot description data found passing validation valid_run_names 'BIDS' format, valid session+task+run name passing validation reason named list names reason validation fails values corresponding sessions electrodes .","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-raw-validation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate raw files in 'rave' directory — rave-raw-validation","text":"Six types raw file structures supported. can basically classified two categories: 'rave' native raw structure 'BIDS-iEEG' structure. 'rave' native structure, subject folders stored within root directory, can obtained via raveio_getopt('raw_data_dir'). Subject directory subject code. Inside subject folder block files. 'rave', term 'block' combination session, task, run. Within block, 'iEEG' data files. 'BIDS-iEEG' format, root directory can obtained via raveio_getopt('bids_data_dir'). 'BIDS' root folder contains project folders. unlike 'rave' native raw data format. Subject folders stored within project directories. subject folders start 'sub-'. Within subject folder, session folders prefix 'ses-'. Session folders optional. 'iEEG' data stored 'ieeg' folder session/subject folder. 'ieeg' folder contain least electrodes.tsv sub-<label>*_electrodes.tsv 'iEEG' description sub-<label>*_task-<label>_run-<index>_ieeg.json 'iEEG' data file sub-<label>*_task-<label>_run-<index>_ieeg.<ext>, current   'rave', extensions '.vhdr+.eeg/.dat' ('BrainVision') 'EDF'   (plus) supported. format 'BIDS', project_name must specified. following formats supported: '.mat/.h5 file per electrode per block' 'rave' native raw format, block folder contains multiple   'Matlab' 'HDF5' files. file corresponds channel/electrode.   File names follow 'xxx001.mat' 'xxx001.h5'.   numbers extension channel numbers. 'Single .mat/.h5 file per block' 'rave' native raw format, block folder contains one   'Matlab' 'HDF5' file. file name can arbitrary, extension   must either '.mat' '.h5'. Within file   matrix containing data. short dimension matrix   channels, larger side dimension corresponds   time points. 'Single EDF(+) file per block' 'rave' native raw format, block folder contains one   '.edf' file. 'Single BrainVision file (.vhdr+.eeg, .vhdr+.dat) per block' 'rave' native raw format, block folder contains two   files. first file header '.vhdr' file. contains   meta information. second either '.eeg' '.dat'   file containing body, .e. signal entries. 'BIDS & EDF(+)' 'BIDS' format. data file '.edf' extension 'BIDS & BrainVision (.vhdr+.eeg, .vhdr+.dat)' 'BIDS' format. data file '.vhdr'+'.eeg/.dat'   extensions","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-server.html","id":null,"dir":"Reference","previous_headings":"","what":"Install and configure 'RAVE' server as background service using\nshiny-server — rave-server","title":"Install and configure 'RAVE' server as background service using\nshiny-server — rave-server","text":"Works 'Linux' 'Mac' .","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install and configure 'RAVE' server as background service using\nshiny-server — rave-server","text":"","code":"rave_server_install(   url = \"https://github.com/rstudio/shiny-server/archive/refs/tags/v1.5.18.987.zip\" )  rave_server_configure(   ports = 17283,   user = Sys.info()[[\"user\"]],   rave_version = c(\"1\", \"2\") )"},{"path":"https://beauchamplab.github.io/raveio/reference/rave-server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install and configure 'RAVE' server as background service using\nshiny-server — rave-server","text":"url 'URL' shiny-server 'ZIP' file download ports integer vectors character, indicating port numbers host 'RAVE' instances valid port must within range 1024 65535. user user run service ; default login user rave_version internally used; might deprecated future","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install and configure 'RAVE' server as background service using\nshiny-server — rave-server","text":"nothing","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install and configure 'RAVE' server as background service using\nshiny-server — rave-server","text":"","code":"if (FALSE) {  # OS-specific. Please install R package `rpymat` first  # Install rave-server rave_server_install()  # Let port 17283-17290 to host RAVE instance rave_server_configure(ports = \"17283-17290\")  }"},{"path":"https://beauchamplab.github.io/raveio/reference/rave-snippet.html","id":null,"dir":"Reference","previous_headings":"","what":"'RAVE' code snippets — rave-snippet","title":"'RAVE' code snippets — rave-snippet","text":"Run snippet code","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-snippet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'RAVE' code snippets — rave-snippet","text":"","code":"update_local_snippet(force = TRUE)  load_snippet(topic, local = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/rave-snippet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'RAVE' code snippets — rave-snippet","text":"force whether force updating snippets; default true topic snippet topic local whether use local snippets first requesting online repository","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-snippet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'RAVE' code snippets — rave-snippet","text":"`load_snippet` returns snippet function, others return nothing","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave-snippet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'RAVE' code snippets — rave-snippet","text":"","code":"if(!is_on_cran()) {    update_local_snippet()   snippet <- load_snippet(\"dummy-snippet\")    # Read snippet documentation   print(snippet)    # Run snippet as a function   snippet(\"this is an input\") } #> NOT_CRAN is TRUE/true (not on CRAN) #> <RAVE code snippet: [dummy-snippet]> #> Snippet path: /home/runner/.cache/R/raveio/rave-gists-main/dummy-snippet.R #>   @author Zhengjia Wang #>   @date Feb 08, 2023 #>   @license Apache-2.0 #>      #>   @title This file is used to demonstrate how rave-snippet works #>      #>     A RAVE code snippet contains three sections: #>       * documentation section, #>       * variable section, #>       * code section. #>      #>     This documentation is located at `documentation section`, starting with two #>     characters `#'`. The section ends with `#' END OF DOC`. The documentation #>     section describes what the code snippets do, and what are #>     the inputs and outputs, and possibly with examples. To understand what #>     inputs are, look for keywords `@param`, for example: #>      #>   @param my_input defines an input argument `my_input`, followed by #>     its explanation #>      #>      #>     The variable section starts right after `#' END OF DOC`. They are usually #>     commented for a reason (see 'How to use snippets' below). You can download #>     and un-comment these lines and run snippets as standalone scripts. #>      #>     The last section is code section, usually you don't have to change the magic #>     there unless you know what you are doing. #>      #>   @section How to use rave-snippets: #>      #>     Scenario 1: You can download the script to your local disk, from there #>     un-comment the *variable section*, set variable as required, and run the #>     whole script using `ctrl/command+shift+enter` (or `command+enter` to run #>     line by line) #>      #>     Scenario 2: You can use `rave` built-in functions to load the snippet: #>      #>         topic <- \"dummy-snippet\"   # <- this should be the snippet name #>         snippet <- raveio::load_snippet(topic); snippet #>         snippet(param1 = ..., param2 = ...) #>      #>  #>   @usage: snippet(my_input, ...) #> this is an input"},{"path":"https://beauchamplab.github.io/raveio/reference/rave_brain.html","id":null,"dir":"Reference","previous_headings":"","what":"Load 'FreeSurfer' or 'AFNI/SUMA' brain from 'RAVE' — rave_brain","title":"Load 'FreeSurfer' or 'AFNI/SUMA' brain from 'RAVE' — rave_brain","text":"Create 3D visualization brain visualize modern web browsers","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_brain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load 'FreeSurfer' or 'AFNI/SUMA' brain from 'RAVE' — rave_brain","text":"","code":"rave_brain(   subject,   surfaces = \"pial\",   use_141 = TRUE,   recache = FALSE,   clean_before_cache = FALSE,   compute_template = FALSE,   usetemplateifmissing = FALSE,   include_electrodes = TRUE )"},{"path":"https://beauchamplab.github.io/raveio/reference/rave_brain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load 'FreeSurfer' or 'AFNI/SUMA' brain from 'RAVE' — rave_brain","text":"subject character, list, RAVESubject instance; list objects, make sure subject$subject_id valid 'RAVE' subject 'ID' surfaces one brain surface types \"pial\", \"white\", \"smoothwm\", \"pial-outer-smoothed\", etc.; check freesurfer_brain2 use_141 whether use 'AFNI/SUMA' standard 141 brain recache whether re-calculate cache; used original 'FreeSurfer' 'AFNI/SUMA' files changed; new files added clean_before_cache whether clean original cache recache; set true original cached files corrupted compute_template whether compute template mappings; useful template mapping multiple subjects needed usetemplateifmissing whether use template brain subject brain files missing. set true, template (usually 'N27') brain displayed alternative solution, electrodes rendered according 'MNI305' coordinates, 'VertexNumber' given. include_electrodes whether include electrode model; default true","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_brain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load 'FreeSurfer' or 'AFNI/SUMA' brain from 'RAVE' — rave_brain","text":"'threeBrain' instance brain found usetemplateifmissing set true; otherwise returns NULL","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_brain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load 'FreeSurfer' or 'AFNI/SUMA' brain from 'RAVE' — rave_brain","text":"","code":"# Please make sure DemoSubject is correctly installed # The subject is ~1GB from Github  if(interactive()){   brain <- rave_brain(\"demo/DemoSubject\")    if( !is.null(brain) ) { brain$plot() }  }"},{"path":"https://beauchamplab.github.io/raveio/reference/rave_command_line_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and execute external command-line tools — rave_command_line_path","title":"Find and execute external command-line tools — rave_command_line_path","text":"Find execute external command-line tools","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_command_line_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and execute external command-line tools — rave_command_line_path","text":"","code":"normalize_commandline_path(   path,   type = c(\"dcm2niix\", \"freesurfer\", \"fsl\", \"afni\", \"others\"),   unset = NA )  cmd_dcm2niix(error_on_missing = TRUE, unset = NA)  cmd_freesurfer_home(error_on_missing = TRUE, unset = NA)  cmd_fsl_home(error_on_missing = TRUE, unset = NA)  cmd_afni_home(error_on_missing = TRUE, unset = NA)  cmd_homebrew(error_on_missing = TRUE, unset = NA)  is_dry_run()"},{"path":"https://beauchamplab.github.io/raveio/reference/rave_command_line_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and execute external command-line tools — rave_command_line_path","text":"path path normalize type type command unset default return command found error_on_missing whether raise errors command missing","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_command_line_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find and execute external command-line tools — rave_command_line_path","text":"Normalized path command, unset command missing.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_directories.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a list of 'RAVE' directories — rave_directories","title":"Returns a list of 'RAVE' directories — rave_directories","text":"function internally used called directly.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_directories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a list of 'RAVE' directories — rave_directories","text":"","code":"rave_directories(   subject_code,   project_name,   blocks = NULL,   .force_format = c(\"\", \"native\", \"BIDS\") )"},{"path":"https://beauchamplab.github.io/raveio/reference/rave_directories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a list of 'RAVE' directories — rave_directories","text":"subject_code 'RAVE' subject code project_name 'RAVE' project name blocks session block names, optional .force_format format data, default automatically detected.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_directories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a list of 'RAVE' directories — rave_directories","text":"list directories","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export 'RAVE' data — rave_export","title":"Export 'RAVE' data — rave_export","text":"Export portable data custom analyses.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export 'RAVE' data — rave_export","text":"","code":"rave_export(x, path, ...)  # S3 method for default rave_export(x, path, format = c(\"rds\", \"yaml\", \"json\"), ...)  # S3 method for rave_prepare_subject_raw_voltage_with_epoch rave_export(x, path, zip = FALSE, ...)  # S3 method for rave_prepare_subject_voltage_with_epoch rave_export(x, path, zip = FALSE, ...)  # S3 method for rave_prepare_power rave_export(x, path, zip = FALSE, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/rave_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export 'RAVE' data — rave_export","text":"x R object 'RAVE' repositories path path save ... passed methods format export format zip whether zip files","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export 'RAVE' data — rave_export","text":"Exported data path","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export 'RAVE' data — rave_export","text":"","code":"x <- \"my data\" path <- tempfile() rave_export(x, path) #> [1] \"/tmp/RtmpSlBpsL/file191041e479a4\"  readRDS(path) #> [1] \"my data\"  if (FALSE) {   # Needs demo subject   path <- tempfile()   x <- prepare_subject_power(\"demo/DemoSubject\")    # Export power data to path   rave_export(x, path) }"},{"path":"https://beauchamplab.github.io/raveio/reference/rave_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data into 'rave' projects — rave_import","title":"Import data into 'rave' projects — rave_import","text":"Import files predefined structures. Supported file formats include 'Matlab', 'HDF5', 'EDF(+)', 'BrainVision' ('.eeg/.dat/.vhdr'). Supported file structures include 'rave' native structure 'BIDS' (limited) format. Please see https://openwetware.org/wiki/RAVE:ravepreprocess tutorials.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data into 'rave' projects — rave_import","text":"","code":"rave_import(   project_name,   subject_code,   blocks,   electrodes,   format,   sample_rate,   conversion = NA,   data_type = \"LFP\",   task_runs = NULL,   add = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/rave_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data into 'rave' projects — rave_import","text":"project_name project name, 'rave' native structure, can character; 'BIDS' format, must consistent 'BIDS' project name. subjects multiple tasks, see Section \"'RAVE' Project\" subject_code subject code character. 'rave' native structure, folder name raw directory. 'BIDS', subject label without \"sub-\" prefix blocks characters, 'rave' native format, folder names subject directory; 'BIDS', session name \"ses-\". Section \"Block vs. Session\" different meaning \"blocks\" 'rave' 'BIDS' electrodes integers electrode numbers format integer 1 6, character. characters, can get options running names(IMPORT_FORMATS) sample_rate sample frequency, must positive conversion physical unit conversion, choices NA, V, mV, uV data_type electrode signal type; see SIGNAL_TYPES task_runs 'BIDS' formats , see Section \"Block vs. Session\" add whether add electrodes. set true, new electrodes allowed imported, blocks ignored trying import electrodes imported still result error. ... parameters","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data into 'rave' projects — rave_import","text":"None","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_import.html","id":"-rave-project","dir":"Reference","previous_headings":"","what":"'RAVE' Project","title":"Import data into 'rave' projects — rave_import","text":"'rave' project can flexible. project can refer task, research objective, \"arbitrarily\" long find common research interests among subjects. One subject can appear multiple projects different blocks, hence project_name objective-based. concept \"project\" 'rave' raw directory. importing data, choose subset blocks subjects forming project. importing 'BIDS' data 'rave', project_name must consistent 'BIDS' project name compromise. imported, may change project folder name imported rave data directory names. raw traces imported, 'rave' data become self-contained 'BIDS' data longer required analysis. naming inconsistency also ignored.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_import.html","id":"block-vs-session","dir":"Reference","previous_headings":"","what":"Block vs. Session","title":"Import data into 'rave' projects — rave_import","text":"'rave' 'BIDS' different definitions \"chunk\" signals. 'rave', use \"block\". means combination session (days), task, run, .e. block continuous signals captured. Raw data files supposed stored file hierarchy <raw-root>/<subject_code>/<block>/<datafiles>. 'BIDS', sessions, tasks, runs separated, session names indicated subject folder. previous compatibility issues, argument 'block' refers direct folder names subject directories. means importing data 'BIDS' format, block argument needs session names comply 'subject/block' structure, additional mandatory argument task_runs especially designed 'BIDS' format. 'rave' native raw data format, block -imported.  'BIDS' format, task_runs treated blocks imported.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_import.html","id":"file-formats","dir":"Reference","previous_headings":"","what":"File Formats","title":"Import data into 'rave' projects — rave_import","text":"Following file structure. use project \"demo\" subject \"YAB\" block \"008\"), electrode 14 example. format=1, \".mat/.h5 file per electrode per block\" folder <raw>/YAB/008 contains 'Matlab' 'HDF5' files per electrode. Data file name look like \"xxx_14.mat\" format=2, \"Single .mat/.h5 file per block\" <raw>/YAB/008 contains one 'Matlab' 'HDF5' file. Data within file 2-dimensional matrix, column 14 signal recorded electrode 14 format=3, \"Single EDF(+) file per block\" <raw>/YAB/008 contains one 'edf' file format=4,  \"Single BrainVision file (.vhdr+.eeg, .vhdr+.dat) per block\" <raw>/YAB/008 contains one 'vhdr' file, data file must inferred header file format=5, \"BIDS & EDF(+)\" <bids>/demo/sub-YAB/ses-008/ must contains *_electrodes.tsv, run must channel file. channel files electrode file must consistent names.  Argument task_runs mandatory, characters, combination session, task name, run number. example, task header file BIDS name 'sub-YAB_ses-008_task-visual_run-01_ieeg.edf' task_runs name '008-visual-01', first '008' refers session, 'visual' task name, second '01' run number. format=6,  \"BIDS & BrainVision (.vhdr+.eeg, .vhdr+.dat)\" previous format \"BIDS & EDF(+)\", data files 'BrainVision' formats.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_subject_format_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Compatibility support for 'RAVE' 1.0 format — rave_subject_format_conversion","title":"Compatibility support for 'RAVE' 1.0 format — rave_subject_format_conversion","text":"Convert 'RAVE' subject generated 2.0 pipeline 1.0 modules can use data. subject must valid electrodes. data must imported, time-frequency transformed pass validation converting.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_subject_format_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compatibility support for 'RAVE' 1.0 format — rave_subject_format_conversion","text":"","code":"rave_subject_format_conversion(subject, verbose = TRUE, ...)"},{"path":"https://beauchamplab.github.io/raveio/reference/rave_subject_format_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compatibility support for 'RAVE' 1.0 format — rave_subject_format_conversion","text":"subject 'RAVE' subject characters, 'demo/YAB', subject instance generated RAVESubject verbose whether verbose messages ... ignored, reserved future use","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/rave_subject_format_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compatibility support for 'RAVE' 1.0 format — rave_subject_format_conversion","text":"Nothing","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/raveio-constants.html","id":null,"dir":"Reference","previous_headings":"","what":"The constant variables — raveio-constants","title":"The constant variables — raveio-constants","text":"constant variables","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/raveio-constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The constant variables — raveio-constants","text":"","code":"SIGNAL_TYPES  LOCATION_TYPES  MNI305_to_MNI152  PIPELINE_FORK_PATTERN"},{"path":"https://beauchamplab.github.io/raveio/reference/raveio-constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The constant variables — raveio-constants","text":"object class character length 6. object class character length 5. object class matrix (inherits array) 4 rows 4 columns. object class character length 1.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/raveio-constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The constant variables — raveio-constants","text":"SIGNAL_TYPES following options: 'LFP', 'Spike', 'EKG', 'Audio', 'Photodiode', 'Unknown'. 'raveio' 0.0.6, 'LFP' (see LFP_electrode) signal type supported. LOCATION_TYPES list electrode location types: 'iEEG' (includes next two), 'sEEG' (stereo), 'ECoG' (surface), 'EEG' (scalp), 'Others'. See field 'location' RAVEAbstarctElectrode MNI305_to_MNI152 4--4 matrix converting 'MNI305' coordinates 'MNI152' space. difference two spaces : 'MNI305' average 305 human subjects, 'MNI152' average 152 people. two coordinates differs slightly. 'MNI' coordinates reported 'RAVE' 'FreeSurfer' 'MNI305' space, many programs expecting 'MNI152' coordinates.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/raveio-option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set/Get 'raveio' option — raveio-option","title":"Set/Get 'raveio' option — raveio-option","text":"Persist settings local configuration file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/raveio-option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set/Get 'raveio' option — raveio-option","text":"","code":"raveio_setopt(key, value, .save = TRUE)  raveio_resetopt(all = FALSE)  raveio_getopt(key, default = NA, temp = TRUE)  raveio_confpath(cfile = \"settings.yaml\")"},{"path":"https://beauchamplab.github.io/raveio/reference/raveio-option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set/Get 'raveio' option — raveio-option","text":"key character, option name value character logical length 1, option value .save whether save local drive, internally used temporary change option. recommended use directly. whether reset non-default keys default key found, return default value temp saving, whether key-value pair considered temporary, temporary settings ignored saving; getting options, setting temp false reveal actual settings. cfile file name configuration path","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/raveio-option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set/Get 'raveio' option — raveio-option","text":"raveio_setopt returns modified value; raveio_resetopt returns current settings list; raveio_confpath returns absolute path settings file; raveio_getopt returns settings value given key, default found.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/raveio-option.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set/Get 'raveio' option — raveio-option","text":"raveio_setopt stores key-value pair local path. values persistent shared across multiple sessions. read-keys \"session_string\". Trying set keys result error. raveio_getopt returns value corresponding keys. key missing, whole option returned. set =TRUE, raveio_resetopt resets keys including non-standard ones. However \"session_string\" never reset.","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/read-brainvision-eeg.html","id":null,"dir":"Reference","previous_headings":"","what":"Load from 'BrainVision' file — read-brainvision-eeg","title":"Load from 'BrainVision' file — read-brainvision-eeg","text":"Read 'eeg' 'ieeg' data 'BrainVision' files .eeg .dat extensions.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read-brainvision-eeg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load from 'BrainVision' file — read-brainvision-eeg","text":"","code":"read_eeg_header(file)  read_eeg_data(header, path = NULL)"},{"path":"https://beauchamplab.github.io/raveio/reference/read-brainvision-eeg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load from 'BrainVision' file — read-brainvision-eeg","text":"file path 'vhdr' header file header header object returned read_eeg_header path optional, path data file original data file missing renamed; must absolute path.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read-brainvision-eeg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load from 'BrainVision' file — read-brainvision-eeg","text":"read_eeg_header returns list containing information : raw raw header contents common list descriptors header channels table channels, including number, reference, resolution unit sample_rate sampling frequency root_path directory data stored channel_counts total channel counts markers NULL marker file missing, list marker description table containing 6 columns. read_eeg_data returns header, signal data data description: data matrix signal values. row channel column time point.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read-brainvision-eeg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load from 'BrainVision' file — read-brainvision-eeg","text":"'BrainVision' dataset usually stored separately header file (.vhdr), marker file (.vmrk, optional) data file (.eeg .dat). files must store folder read R. Header data contains channel information. Data \"channel\" contains channel name, reference, resolution physical unit. \"resolution\" times digital data values physical value recorded data. read_eeg_data makes conversion internally . \"unit\" physical unit recordings. default 'uV' means micro-volts. Marker file ends .vmrk optional. file indicated header file exists, marker table included reading headers. marker table contains six columns: marker number, type, description, start position (data point), size (duration data points), target channel (0 means applied channels). Signal file name usually contained within header file. Therefore desired signal file name never changed created. However, cases signal files renamed indexed header files, please specify path force load signals different file.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read-brainvision-eeg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load from 'BrainVision' file — read-brainvision-eeg","text":"","code":"header_file <- 'sub-01_ses-01_task-visual_run-01_ieeg.vhdr'  if( file.exists(header_file) ){   # load a subject header   header <- read_eeg_header(header_file)    # load entire signal   data <- read_eeg_data(header)    data$description }"},{"path":"https://beauchamplab.github.io/raveio/reference/read-write-fst.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a 'fst' file — read-write-fst","title":"Read a 'fst' file — read-write-fst","text":"Read 'fst' file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read-write-fst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a 'fst' file — read-write-fst","text":"","code":"save_fst(x, path, ...)  load_fst(path, ..., as.data.table = TRUE)"},{"path":"https://beauchamplab.github.io/raveio/reference/read-write-fst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a 'fst' file — read-write-fst","text":"x data frame write path path path 'fst' file: must connection. ... passed read_fst write_fst .data.table passed read_fst fst package","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_csv_ieeg.html","id":null,"dir":"Reference","previous_headings":"","what":"Read comma separated value file and ignore headers — read_csv_ieeg","title":"Read comma separated value file and ignore headers — read_csv_ieeg","text":"Resolved irregular 'iEEG' format header missing.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_csv_ieeg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read comma separated value file and ignore headers — read_csv_ieeg","text":"","code":"read_csv_ieeg(file, nrows = Inf, drop = NULL)"},{"path":"https://beauchamplab.github.io/raveio/reference/read_csv_ieeg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read comma separated value file and ignore headers — read_csv_ieeg","text":"file comma separated value file read . file must contains numerical values nrows number rows read drop passed fread","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_csv_ieeg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read comma separated value file and ignore headers — read_csv_ieeg","text":"function checks first two rows comma separated value file first row different storage.mode second row, first row considered header, otherwise header treated missing. Note file must least two rows.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_edf_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Read 'EDF(+)' or 'BDF(+)' file headers — read_edf_header","title":"Read 'EDF(+)' or 'BDF(+)' file headers — read_edf_header","text":"Wrapper readEdfHeader, added information","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_edf_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read 'EDF(+)' or 'BDF(+)' file headers — read_edf_header","text":"","code":"read_edf_header(path)"},{"path":"https://beauchamplab.github.io/raveio/reference/read_edf_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read 'EDF(+)' or 'BDF(+)' file headers — read_edf_header","text":"path file path, passed readEdfHeader","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_edf_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read 'EDF(+)' or 'BDF(+)' file headers — read_edf_header","text":"list header information 'EDF/BDF' file.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_edf_header.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read 'EDF(+)' or 'BDF(+)' file headers — read_edf_header","text":"added names : isAnnot2, sampleRate2, unit2. avoid conflict names, \"2\" appended names. isAnnot2 indicates whether channel annotation channel recorded signals. sampleRate2 vector sample rates channels. unit2 physical unit recorded signals. 'iEEG' data, electric potential unit, choices 'V' volt, 'mV' millivolt, 'uV' micro-volt. details, see https://www.edfplus.info/specs/edftexts.html","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/read_edf_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Read 'EDF(+)' or 'BDF(+)' file signals — read_edf_signal","title":"Read 'EDF(+)' or 'BDF(+)' file signals — read_edf_signal","text":"Read 'EDF(+)' 'BDF(+)' file signals","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_edf_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read 'EDF(+)' or 'BDF(+)' file signals — read_edf_signal","text":"","code":"read_edf_signal(   path,   signal_numbers = NULL,   convert_volt = c(\"NA\", \"V\", \"mV\", \"uV\") )"},{"path":"https://beauchamplab.github.io/raveio/reference/read_edf_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read 'EDF(+)' or 'BDF(+)' file signals — read_edf_signal","text":"path file path, passed readEdfHeader signal_numbers channel/electrode numbers convert_volt convert voltage (electric potential) new unit, NA means conversion, choices 'V', 'mV', 'uV'.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_edf_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read 'EDF(+)' or 'BDF(+)' file signals — read_edf_signal","text":"list containing header information, signal lists, channel/electrode names. signal_numbers specified, corresponding names appear selected_signal_names. get_signal() can get physical signals unit conversion.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Read 'Matlab' files — read_mat","title":"Read 'Matlab' files — read_mat","text":"compatible reader can read 'Matlab' files prior version 6.0","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read 'Matlab' files — read_mat","text":"","code":"read_mat(file, ram = TRUE, engine = c(\"r\", \"py\"))  read_mat2(file, ram = TRUE, engine = c(\"r\", \"py\"))"},{"path":"https://beauchamplab.github.io/raveio/reference/read_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read 'Matlab' files — read_mat","text":"file path 'Matlab' file ram whether load data memory. available file 'HDF5' format. Default false load arrays, set true, lazy-load data. useful array large. engine method read file, choices 'r' 'py' ('Python'); 'py' chosen, make sure configure_conda configured.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read 'Matlab' files — read_mat","text":"list data stored file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read 'Matlab' files — read_mat","text":"readMat can read 'Matlab' files prior version 6. version 6, 'Matlab' uses 'HDF5' format store data, read_mat can handle cases. performance read_mat can limited file big many datasets reads data contained 'Matlab' file memory.","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/read_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read 'Matlab' files — read_mat","text":"","code":"# Matlab .mat <= v7.3 x <- matrix(1:16, 4) f <- tempfile() R.matlab::writeMat(con = f, x = x)  read_mat(f) #> $x #>      [,1] [,2] [,3] [,4] #> [1,]    1    5    9   13 #> [2,]    2    6   10   14 #> [3,]    3    7   11   15 #> [4,]    4    8   12   16 #>  #> attr(,\"header\") #> attr(,\"header\")$description #> [1] \"MATLAB 5.0 MAT-file, Platform: unix, Software: R v4.3.1, Created on: Wed Aug  9 20:48:32 2023                               \" #>  #> attr(,\"header\")$version #> [1] \"5\" #>  #> attr(,\"header\")$endian #> [1] \"little\" #>   # Matlab .mat >= v7.3, using hdf5 # Make sure you have installed hdf5r if( dipsaus::package_installed('hdf5r') ){  f <- tempfile() save_h5(x, file = f, name = 'x')  read_mat(f)  # For v7.3, you don't have to load all data into RAM dat <- read_mat(f, ram = FALSE) dat  dat$x[]  } #>      [,1] [,2] [,3] [,4] #> [1,]    1    5    9   13 #> [2,]    2    6   10   14 #> [3,]    3    7   11   15 #> [4,]    4    8   12   16"},{"path":"https://beauchamplab.github.io/raveio/reference/read_nsx_nev.html","id":null,"dir":"Reference","previous_headings":"","what":"Read 'BlackRock' event and signal files — read_nsx_nev","title":"Read 'BlackRock' event and signal files — read_nsx_nev","text":"Current implementation supports minimum 2.3 file specification version. Please contact package maintainer add specification configurations want us support older versions.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/read_nsx_nev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read 'BlackRock' event and signal files — read_nsx_nev","text":"","code":"read_nsx_nev(   paths,   nev_path = NULL,   header_only = FALSE,   nev_data = TRUE,   verbose = TRUE,   ram = FALSE,   force_update = FALSE,   temp_path = file.path(tempdir(), \"blackrock-temp\") )"},{"path":"https://beauchamplab.github.io/raveio/reference/read_nsx_nev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read 'BlackRock' event and signal files — read_nsx_nev","text":"paths 'NSx' signal files, usually file extensions '.ns1', '.ns2', '.ns3', '.ns4', '.ns5'. nev_path 'NEV' event files, file extension '.nev' header_only whether load header information avoid reading signal arrays nev_data whether load '.nev' comments 'waveforms' verbose whether print progress loading signal array ram whether load signals memory rather storing filearray; default false force_update force updating channel data even headers changed temp_path temporary directory store channel data","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. glue glue promises %...!%, %...>%, %...T!%, %...T>%","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/safe_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read comma separated value files with given column classes — safe_read_csv","title":"Read comma separated value files with given column classes — safe_read_csv","text":"Read comma separated value files given column classes","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/safe_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read comma separated value files with given column classes — safe_read_csv","text":"","code":"safe_read_csv(   file,   header = TRUE,   sep = \",\",   colClasses = NA,   skip = 0,   quote = \"\\\"\",   ...,   stringsAsFactors = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/safe_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read comma separated value files with given column classes — safe_read_csv","text":"file, header, sep, colClasses, skip, quote, stringsAsFactors, ... passed read.csv","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/safe_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read comma separated value files with given column classes — safe_read_csv","text":"data frame","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/safe_read_csv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read comma separated value files with given column classes — safe_read_csv","text":"Reading comma separated value file using builtin function read.csv might result unexpected behavior. safe_read_csv preprocessing format take cares following cases. 1. skip exceeds maximum rows data, return blank data frame instead raising error. 2. row names included file, colClasses automatically skip column starts second column 3. length colClasses equal number columns, instead cycling class types, set columns NA type let read.csv decide default types. 4. stringsAsFactors default FALSE consistent R 4.0, function called R 3.x.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/safe_read_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read comma separated value files with given column classes — safe_read_csv","text":"","code":"f <- tempfile() x <- data.frame(a = letters[1:10], b = 1:10, c = 2:11)  # ------------------ Auto-detect row names ------------------ # Write with rownames utils::write.csv(x, f, row.names = LETTERS[2:11])  # read csv with base library utils table1 <- utils::read.csv(f, colClasses = c('character', 'character'))  # 4 columns including row names str(table1) #> 'data.frame':\t10 obs. of  4 variables: #>  $ X: chr  \"B\" \"C\" \"D\" \"E\" ... #>  $ a: chr  \"a\" \"b\" \"c\" \"d\" ... #>  $ b: chr  \"1\" \"2\" \"3\" \"4\" ... #>  $ c: chr  \"2\" \"3\" \"4\" \"5\" ...  # read csv via safe_read_csv table2 <- safe_read_csv(f, colClasses = c('character', 'character'))  # row names are automatically detected, hence 3 columns # Only first columns are characters, the third column is auto # detected as numeric str(table2) #> 'data.frame':\t10 obs. of  3 variables: #>  $ a: chr  \"a\" \"b\" \"c\" \"d\" ... #>  $ b: chr  \"1\" \"2\" \"3\" \"4\" ... #>  $ c: int  2 3 4 5 6 7 8 9 10 11  # read table without row names utils::write.csv(x, f, row.names = FALSE) table2 <- safe_read_csv(f, colClasses = c('character', 'character'))  # still 3 columns, and row names are 1:nrow str(table2) #> 'data.frame':\t10 obs. of  3 variables: #>  $ a: chr  \"a\" \"b\" \"c\" \"d\" ... #>  $ b: chr  \"1\" \"2\" \"3\" \"4\" ... #>  $ c: int  2 3 4 5 6 7 8 9 10 11  # --------------- Blank data frame when nrow too large --------------- # instead of raising errors, return blank data frame safe_read_csv(f, skip = 1000) #> data frame with 0 columns and 0 rows"},{"path":"https://beauchamplab.github.io/raveio/reference/safe_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Save data to comma separated value files with backups — safe_write_csv","title":"Save data to comma separated value files with backups — safe_write_csv","text":"Save comma separated value files, file exists, backup original file.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/safe_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save data to comma separated value files with backups — safe_write_csv","text":"","code":"safe_write_csv(x, file, ..., quiet = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/safe_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save data to comma separated value files with backups — safe_write_csv","text":"x, file, ... pass write.csv quiet whether suppress overwrite message","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/safe_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save data to comma separated value files with backups — safe_write_csv","text":"Normalized path file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/safe_write_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save data to comma separated value files with backups — safe_write_csv","text":"","code":"f <- tempfile() x <- data.frame(a = 1:10)  # File not exists, same as write file, returns normalized `f` safe_write_csv(x, f) #> [1] \"/tmp/RtmpSlBpsL/file191079dc3128\"  # Check whether file exists file.exists(f) #> [1] TRUE  # write again, and the old file will be copied safe_write_csv(x, f) #> [1] \"/tmp/RtmpSlBpsL/file191079dc3128\""},{"path":"https://beauchamplab.github.io/raveio/reference/save_h5.html","id":null,"dir":"Reference","previous_headings":"","what":"Save objects to 'HDF5' file without trivial checks — save_h5","title":"Save objects to 'HDF5' file without trivial checks — save_h5","text":"Save objects 'HDF5' file without trivial checks","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_h5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save objects to 'HDF5' file without trivial checks — save_h5","text":"","code":"save_h5(   x,   file,   name,   chunk = \"auto\",   level = 4,   replace = TRUE,   new_file = FALSE,   ctype = NULL,   quiet = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/save_h5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save objects to 'HDF5' file without trivial checks — save_h5","text":"x array, matrix, vector file path 'HDF5' file name path/name data; example, \"group/data_name\" chunk chunk size level compress level 0 - compression 10 - max compression replace data replaced exists new_file removing file old one exists ctype data type \"character\", \"integer\", \"numeric\". set NULL automatically detect types. Note complex data please store separately real imaginary parts. quiet whether suppress messages, default false ... passed LazyH5$save","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_h5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save objects to 'HDF5' file without trivial checks — save_h5","text":"Absolute path file saved","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/save_h5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save objects to 'HDF5' file without trivial checks — save_h5","text":"","code":"file <- tempfile() x <- array(1:120, dim = 2:5)  # save x to file with name /group/dataset/1 save_h5(x, file, '/group/dataset/1', chunk = dim(x))  # read data y <- load_h5(file, '/group/dataset/1') y[] #> , , 1, 1 #>  #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6 #>  #> , , 2, 1 #>  #>      [,1] [,2] [,3] #> [1,]    7    9   11 #> [2,]    8   10   12 #>  #> , , 3, 1 #>  #>      [,1] [,2] [,3] #> [1,]   13   15   17 #> [2,]   14   16   18 #>  #> , , 4, 1 #>  #>      [,1] [,2] [,3] #> [1,]   19   21   23 #> [2,]   20   22   24 #>  #> , , 1, 2 #>  #>      [,1] [,2] [,3] #> [1,]   25   27   29 #> [2,]   26   28   30 #>  #> , , 2, 2 #>  #>      [,1] [,2] [,3] #> [1,]   31   33   35 #> [2,]   32   34   36 #>  #> , , 3, 2 #>  #>      [,1] [,2] [,3] #> [1,]   37   39   41 #> [2,]   38   40   42 #>  #> , , 4, 2 #>  #>      [,1] [,2] [,3] #> [1,]   43   45   47 #> [2,]   44   46   48 #>  #> , , 1, 3 #>  #>      [,1] [,2] [,3] #> [1,]   49   51   53 #> [2,]   50   52   54 #>  #> , , 2, 3 #>  #>      [,1] [,2] [,3] #> [1,]   55   57   59 #> [2,]   56   58   60 #>  #> , , 3, 3 #>  #>      [,1] [,2] [,3] #> [1,]   61   63   65 #> [2,]   62   64   66 #>  #> , , 4, 3 #>  #>      [,1] [,2] [,3] #> [1,]   67   69   71 #> [2,]   68   70   72 #>  #> , , 1, 4 #>  #>      [,1] [,2] [,3] #> [1,]   73   75   77 #> [2,]   74   76   78 #>  #> , , 2, 4 #>  #>      [,1] [,2] [,3] #> [1,]   79   81   83 #> [2,]   80   82   84 #>  #> , , 3, 4 #>  #>      [,1] [,2] [,3] #> [1,]   85   87   89 #> [2,]   86   88   90 #>  #> , , 4, 4 #>  #>      [,1] [,2] [,3] #> [1,]   91   93   95 #> [2,]   92   94   96 #>  #> , , 1, 5 #>  #>      [,1] [,2] [,3] #> [1,]   97   99  101 #> [2,]   98  100  102 #>  #> , , 2, 5 #>  #>      [,1] [,2] [,3] #> [1,]  103  105  107 #> [2,]  104  106  108 #>  #> , , 3, 5 #>  #>      [,1] [,2] [,3] #> [1,]  109  111  113 #> [2,]  110  112  114 #>  #> , , 4, 5 #>  #>      [,1] [,2] [,3] #> [1,]  115  117  119 #> [2,]  116  118  120 #>"},{"path":"https://beauchamplab.github.io/raveio/reference/save_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Save or load R object in 'JSON' format — save_json","title":"Save or load R object in 'JSON' format — save_json","text":"Save load R object 'JSON' format","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save or load R object in 'JSON' format — save_json","text":"","code":"save_json(   x,   con = stdout(),   ...,   digits = ceiling(-log10(.Machine$double.eps)),   pretty = TRUE,   serialize = TRUE )  load_json(con, ..., map = NULL)"},{"path":"https://beauchamplab.github.io/raveio/reference/save_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save or load R object in 'JSON' format — save_json","text":"x R object save con file connection ... parameters pass toJSON fromJSON digits number digits save pretty whether output pretty serialize whether save serialized version x; see 'Examples'. map map save results","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save or load R object in 'JSON' format — save_json","text":"save_json returns nothing; load_json returns R object.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save or load R object in 'JSON' format — save_json","text":"","code":"# Serialize save_json(list(a = 1, b = function(){})) #> { #>   \"type\": \"list\", #>   \"attributes\": { #>     \"names\": { #>       \"type\": \"character\", #>       \"attributes\": {}, #>       \"value\": [\"a\", \"b\"] #>     } #>   }, #>   \"value\": [ #>     { #>       \"type\": \"double\", #>       \"attributes\": {}, #>       \"value\": [1] #>     }, #>     { #>       \"type\": \"closure\", #>       \"attributes\": {}, #>       \"value\": [ #>         { #>           \"type\": \"language\", #>           \"attributes\": { #>             \"srcref\": { #>               \"type\": \"list\", #>               \"attributes\": {}, #>               \"value\": [ #>                 { #>                   \"type\": \"integer\", #>                   \"attributes\": { #>                     \"srcfile\": { #>                       \"type\": \"environment\", #>                       \"attributes\": { #>                         \"class\": { #>                           \"type\": \"character\", #>                           \"attributes\": {}, #>                           \"value\": [\"srcfilecopy\", \"srcfile\"] #>                         } #>                       }, #>                       \"value\": {} #>                     }, #>                     \"class\": { #>                       \"type\": \"character\", #>                       \"attributes\": {}, #>                       \"value\": [\"srcref\"] #>                     } #>                   }, #>                   \"value\": [4, 37, 4, 37, 37, 37, 4, 4] #>                 } #>               ] #>             }, #>             \"srcfile\": { #>               \"type\": \"environment\", #>               \"attributes\": { #>                 \"class\": { #>                   \"type\": \"character\", #>                   \"attributes\": {}, #>                   \"value\": [\"srcfilecopy\", \"srcfile\"] #>                 } #>               }, #>               \"value\": {} #>             }, #>             \"wholeSrcref\": { #>               \"type\": \"integer\", #>               \"attributes\": { #>                 \"srcfile\": { #>                   \"type\": \"environment\", #>                   \"attributes\": { #>                     \"class\": { #>                       \"type\": \"character\", #>                       \"attributes\": {}, #>                       \"value\": [\"srcfilecopy\", \"srcfile\"] #>                     } #>                   }, #>                   \"value\": {} #>                 }, #>                 \"class\": { #>                   \"type\": \"character\", #>                   \"attributes\": {}, #>                   \"value\": [\"srcref\"] #>                 } #>               }, #>               \"value\": [1, 0, 4, 38, 0, 38, 1, 4] #>             } #>           }, #>           \"value\": [\"{\", \"}\"] #>         } #>       ] #>     } #>   ] #> }  # use toJSON save_json(list(a = 1, b = function(){}), serialize = FALSE) #> { #>   \"a\": [1], #>   \"b\": [\"function () \", \"{\", \"}\"] #> }   # Demo of using serializer f1 <- tempfile(fileext = \".json\") save_json(x ~ y + 1, f1)  load_json(f1) #> x ~ y + 1 #> <environment: 0x557d15a02650>  unlink(f1)"},{"path":"https://beauchamplab.github.io/raveio/reference/save_meta2.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to save meta data to 'RAVE' subject — save_meta2","title":"Function to save meta data to 'RAVE' subject — save_meta2","text":"Function save meta data 'RAVE' subject","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_meta2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to save meta data to 'RAVE' subject — save_meta2","text":"","code":"save_meta2(data, meta_type, project_name, subject_code)"},{"path":"https://beauchamplab.github.io/raveio/reference/save_meta2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to save meta data to 'RAVE' subject — save_meta2","text":"data data table meta_type see load meta project_name project name subject_code subject code","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_meta2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to save meta data to 'RAVE' subject — save_meta2","text":"Either none meta matched absolute path file saved.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Write named list to file — save_yaml","title":"Write named list to file — save_yaml","text":"Write named list file","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write named list to file — save_yaml","text":"","code":"save_yaml(x, file, ..., sorted = FALSE)"},{"path":"https://beauchamplab.github.io/raveio/reference/save_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write named list to file — save_yaml","text":"x named list, fastmap2, anything can transformed named list via .list file, ... passed write_yaml sorted whether sort results name; default false","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/save_yaml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write named list to file — save_yaml","text":"Normalized file path","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/save_yaml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write named list to file — save_yaml","text":"","code":"x <- list(a = 1, b = 2) f <- tempfile()  save_yaml(x, f)  load_yaml(f) #> <Map, size=2, keys=[b, a]>  map <- dipsaus::fastmap2(missing_default = NA) map$c <- 'lol' load_yaml(f, map = map) #> <Map, size=3, keys=[b, a, c]>  map$a #> [1] 1 map$d #> [1] NA"},{"path":"https://beauchamplab.github.io/raveio/reference/test_hdspeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple hard disk speed test — test_hdspeed","title":"Simple hard disk speed test — test_hdspeed","text":"Simple hard disk speed test","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/test_hdspeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple hard disk speed test — test_hdspeed","text":"","code":"test_hdspeed(   path = tempdir(),   file_size = 1e+06,   quiet = FALSE,   abort_if_slow = TRUE,   use_cache = FALSE )"},{"path":"https://beauchamplab.github.io/raveio/reference/test_hdspeed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple hard disk speed test — test_hdspeed","text":"path existing directory test speed, default temporary local directory. file_size bytes, default 1 MB. quiet verbose messages suppressed? abort_if_slow abort test hard drive slow. usually happens hard drive connected via slow internet: write speed less 0.1 MB per second. use_cache hard drive speed tested , abort testing return cached results ; default false.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/test_hdspeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple hard disk speed test — test_hdspeed","text":"vector two: writing reading speed MB per seconds.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/time_diff2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate time difference in seconds — time_diff2","title":"Calculate time difference in seconds — time_diff2","text":"Calculate time difference seconds","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/time_diff2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate time difference in seconds — time_diff2","text":"","code":"time_diff2(start, end, units = \"secs\", label = \"\")"},{"path":"https://beauchamplab.github.io/raveio/reference/time_diff2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate time difference in seconds — time_diff2","text":"start, end start end timer units passed time_delta label rave-units label display purpose.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/time_diff2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate time difference in seconds — time_diff2","text":"number inherits rave-units class.","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/raveio/reference/time_diff2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate time difference in seconds — time_diff2","text":"","code":"start <- Sys.time() Sys.sleep(0.1) end <- Sys.time() dif <- time_diff2(start, end, label = 'Running ') print(dif, digits = 4) #> Running 0.1026 secs  is.numeric(dif) #> [1] TRUE  dif + 1 #> Running 1.10 secs"},{"path":"https://beauchamplab.github.io/raveio/reference/url_neurosynth.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'Neurosynth' website address using 'MNI152' coordinates — url_neurosynth","title":"Get 'Neurosynth' website address using 'MNI152' coordinates — url_neurosynth","text":"Get 'Neurosynth' website address using 'MNI152' coordinates","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/url_neurosynth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'Neurosynth' website address using 'MNI152' coordinates — url_neurosynth","text":"","code":"url_neurosynth(x, y, z)"},{"path":"https://beauchamplab.github.io/raveio/reference/url_neurosynth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 'Neurosynth' website address using 'MNI152' coordinates — url_neurosynth","text":"x, y, z numerical values: right-anterior-superior 'RAS' coordinates 'MNI152' space","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/url_neurosynth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 'Neurosynth' website address using 'MNI152' coordinates — url_neurosynth","text":"'Neurosynth' website address","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/validate_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate subject data integrity — validate_subject","title":"Validate subject data integrity — validate_subject","text":"Check existence, validity, consistency","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/validate_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate subject data integrity — validate_subject","text":"subject subject ID (character), RAVESubject instance method validation method, choices 'normal' (default) 'basic' fast checks; set 'normal', four additional validation parts tested (see parts * Section 'Value'). verbose whether print validation messages version data version, choices 1 'RAVE' 1.0 data format, 2 ('RAVE' 2.0 data format); default 2","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/validate_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate subject data integrity — validate_subject","text":"list nested validation results. validation process consists following parts order: Data paths (paths)  path subject's root folder path subject's 'RAVE' folder ('rave' folder root directory) raw_path subject's raw data folder data_path directory storing voltage, power, phase data (reference) meta_path meta directory containing electrode coordinates, reference table, epoch information, etc. reference_path directory storing calculated reference signals preprocess_path directory storing preprocessing information cache_path (low priority) data caching path freesurfer_path (low priority) subject's 'FreeSurfer' directory note_path (low priority) subject's notes pipeline_path (low priority) folder containing saved pipelines subject Preprocessing information (preprocess)  electrodes_set whether subject non-empty electrode set blocks_set whether session block length non-zero sample_rate_set whether raw sampling frequency set valid, proper positive number data_imported whether assigning electrodes imported notch_filtered whether 'LFP' 'EKG' signals 'Notch' filtered has_wavelet whether 'LFP' signals wavelet-transformed has_reference least one reference generated meta folder has_epoch least one epoch file generated meta folder has_electrode_file meta folder electrodes.csv file Meta information (meta)  meta_data_valid item exists previous preprocess validation failed incomplete meta_electrode_table electrodes.csv file meta folder correct format consistent electrodes numbers preprocess information meta_reference_xxx (xxx replaced actual reference names) checks whether reference table contains electrodes whether reference data exists meta_epoch_xxx (xxx replaced actual epoch names) checks whether epoch table correct formats whether missing blocks indicated epoch files Voltage data (voltage_data*)  voltage_preprocessing whether raw preprocessing voltage data valid. includes data lengths within blocks signal type voltage_data whether voltage data ('Notch' filters) exist readable. Besides, lengths data must consistent raw signals Spectral power phase (power_phase_data*)  power_data whether power data exists 'LFP' signals. Besides, pass validation process, frequency time-point lengths must consistent preprocess record power_data power_data phase data Epoch table (epoch_tables*) One sub-items depending number epoch tables. pass validation, event time session block must exceed actual signal duration. example, one session lasts 200 seconds, invalidate result trial onset time later 200 seconds. Reference table (reference_tables*) One sub-items depending number reference tables. pass validation, reference data must valid. inconsistencies, example, missing file, wrong frequency size, invalid time-point lengths result failure","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/validate_time_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate time windows to be used — validate_time_window","title":"Validate time windows to be used — validate_time_window","text":"Make sure time windows valid intervals returns reshaped window list","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/validate_time_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate time windows to be used — validate_time_window","text":"","code":"validate_time_window(time_windows)"},{"path":"https://beauchamplab.github.io/raveio/reference/validate_time_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate time windows to be used — validate_time_window","text":"time_windows vectors list time intervals","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/validate_time_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate time windows to be used — validate_time_window","text":"list time intervals (ordered, length 2)","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/validate_time_window.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate time windows to be used — validate_time_window","text":"","code":"# Simple time window validate_time_window(c(-1, 2)) #> [[1]] #> [1] -1  2 #>   # Multiple windows validate_time_window(c(-1, 2, 3, 5)) #> [[1]] #> [1] -1  2 #>  #> [[2]] #> [1] 3 5 #>   # alternatively validate_time_window(list(c(-1, 2), c(3, 5))) #> [[1]] #> [1] -1  2 #>  #> [[2]] #> [1] 3 5 #>  validate_time_window(list(list(-1, 2), list(3, 5))) #> [[1]] #> [1] -1  2 #>  #> [[2]] #> [1] 3 5 #>    if (FALSE) {  # Incorrect usage (will raise errors)    # Invalid interval (length must be two for each intervals)   validate_time_window(list(c(-1, 2, 3, 5)))    # Time intervals must be in ascending order   validate_time_window(c(2, 1))  }"},{"path":"https://beauchamplab.github.io/raveio/reference/voltage_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate voltage baseline — voltage_baseline","title":"Calculate voltage baseline — voltage_baseline","text":"Calculate voltage baseline","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/voltage_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate voltage baseline — voltage_baseline","text":"","code":"voltage_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"zscore\", \"subtract_mean\"),   units = c(\"Trial\", \"Electrode\"),   ... )  # S3 method for rave_prepare_subject_raw_voltage_with_epoch voltage_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"zscore\", \"subtract_mean\"),   units = c(\"Trial\", \"Electrode\"),   electrodes,   baseline_mean,   baseline_sd,   ... )  # S3 method for rave_prepare_subject_voltage_with_epoch voltage_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"zscore\", \"subtract_mean\"),   units = c(\"Trial\", \"Electrode\"),   electrodes,   baseline_mean,   baseline_sd,   ... )  # S3 method for FileArray voltage_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"zscore\", \"subtract_mean\"),   units = c(\"Trial\", \"Electrode\"),   filebase = NULL,   ... )  # S3 method for array voltage_baseline(   x,   baseline_windows,   method = c(\"percentage\", \"zscore\", \"subtract_mean\"),   units = c(\"Trial\", \"Electrode\"),   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/voltage_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate voltage baseline — voltage_baseline","text":"x R array, filearray, 'rave_prepare_power' object created prepare_subject_raw_voltage_with_epoch. baseline_windows list baseline window (intervals) method baseline method; choices 'percentage' 'zscore'; see 'Details' baseline_array units unit baseline; see 'Details' ... passed methods electrodes electrodes included baseline calculation; power repository object produced prepare_subject_power ; default available electrodes signal_types baseline_mean, baseline_sd internally used 'RAVE' repository, provided baseline contained data. useful calculating baseline data blocks. filebase store output; default NULL automatically determined","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/voltage_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate voltage baseline — voltage_baseline","text":"type inputs","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/voltage_baseline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate voltage baseline — voltage_baseline","text":"arrays must three-mode tensor must valid named dimnames. dimension names must 'Trial', 'Time', 'Electrode', case sensitive. baseline_windows determines baseline windows used calculate time-points baseline included. can one intervals must pass validation function validate_time_window. units determines unit baseline. can either 'Trial', 'Electrode'. default value , .e., baseline combination trial electrode.","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/voltage_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate voltage baseline — voltage_baseline","text":"","code":"if (FALSE) { # The following code need to download additional demo data # Please see https://rave.wiki/ for more details  library(raveio) repo <- prepare_subject_raw_voltage_with_epoch(   subject = \"demo/DemoSubject\",   time_windows = c(-1, 3),   electrodes = c(14, 15))  ##### Direct baseline on repository voltage_baseline(   x = repo, method = \"zscore\",   baseline_windows = list(c(-1, 0), c(2, 3)) )  voltage_mean <- repo$raw_voltage$baselined$collapse(   keep = c(1,3), method = \"mean\") matplot(voltage_mean, type = \"l\", lty = 1,         x = repo$raw_voltage$dimnames$Time,         xlab = \"Time (s)\", ylab = \"Voltage (z-scored)\",         main = \"Mean coltage over trial (Baseline: -1~0 & 2~3)\") abline(v = 0, lty = 2, col = 'darkgreen') text(x = 0, y = -0.5, \"Aud-Onset \", col = \"darkgreen\", cex = 0.6, adj = c(1,1))  ##### Alternatively, baseline on each electrode channel voltage_mean2 <- sapply(repo$raw_voltage$data_list, function(inst) {   re <- voltage_baseline(     x = inst, method = \"zscore\",     baseline_windows = list(c(-1, 0), c(2, 3)))   rowMeans(re[]) })  # Same with floating difference max(abs(voltage_mean - voltage_mean2)) < 1e-8   }"},{"path":"https://beauchamplab.github.io/raveio/reference/with_future_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable parallel computing provided by 'future' package within the context — with_future_parallel","title":"Enable parallel computing provided by 'future' package within the context — with_future_parallel","text":"Enable parallel computing provided 'future' package within context","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/with_future_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable parallel computing provided by 'future' package within the context — with_future_parallel","text":"","code":"with_future_parallel(   expr,   env = parent.frame(),   quoted = FALSE,   on_failure = \"multisession\",   max_workers = NA,   ... )"},{"path":"https://beauchamplab.github.io/raveio/reference/with_future_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable parallel computing provided by 'future' package within the context — with_future_parallel","text":"expr expression evaluated env environment expr quoted whether expr quoted; default false on_failure alternative 'future' plan use forking process disallowed; usually occurs 'Windows' machines; see details. max_workers maximum workers; default automatically set raveio_getopt(\"max_worker\",1L) ... additional parameters passing make_forked_clusters","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/with_future_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable parallel computing provided by 'future' package within the context — with_future_parallel","text":"evaluation results expr","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/with_future_parallel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Enable parallel computing provided by 'future' package within the context — with_future_parallel","text":"'RAVE' functions prepare_subject_power support parallel computing speed . However, parallel computing optional. can enable wrapping function calls within with_future_parallel (see examples). default plan use 'forked' R sessions. convenient, fast, relative simple way create multiple R processes share memories. However, machines 'Windows' support yet implemented. cases, plan fall backs back-specified on_failure. default, on_failure 'multisession', heavier implementation forking process, slightly longer ramp-time. However, difference marginal functions. parallel computing enabled, number parallel workers specified option raveio_getopt(\"max_worker\", 1L).","code":""},{"path":"https://beauchamplab.github.io/raveio/reference/with_future_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enable parallel computing provided by 'future' package within the context — with_future_parallel","text":"","code":"library(raveio)  demo_subject <- as_rave_subject(\"demo/DemoSubject\", strict = FALSE)  if(dir.exists(demo_subject$path)) {   with_future_parallel({     prepare_subject_power(\"demo/DemoSubject\")   }) }"},{"path":"https://beauchamplab.github.io/raveio/news/index.html","id":"raveio-090","dir":"Changelog","previous_headings":"","what":"raveio 0.9.0","title":"raveio 0.9.0","text":"CRAN release: 2023-07-16 close major release. Major changes: Pipeline supports Python now! (think deserves first place) Referencing electrodes require users run wavelet anymore (one wins second allows flexible data processing pipelines) Added PipelineCollections, allowing users build run multiple pipelines run_wavelet trigger caching existing references pipeline errors properly handled Pipeline error messages also print expressions causing issues Clears pipeline object directory related errors raised; case pipeline rescheduled automatically Pipeline also reports warning messages Allow pipelines fork Added external data path (extdata) pipeline store large temporary data Added prepare_subject_phase prepare_subject_wavelet support loading phase time-frequency data (besides amplitude) Pipeline shared scripts uses script directory working directory Added lapply_async can run parallel standalone compatible with_future_parallel; function replaces dipsaus::lapply_async2 Added new subject class RAVEMetaSubject meta-analysis Added support FreeSurfer recon--clinical.sh, allowing users apply super-resolution clinical MRI surface reconstruction Supports one NSx block data contains multiple recordings (discontinued/paused recording one block) rave_export exports summary Matlab format well (thanks @Kaitlyn) Added cmd_run_r generate reproducible shell scripts run code Added pipeline$visualize view target relationships schedule graphs Added pipeline$shared_env obtain shared environment Minor changes: Default pipeline repository user name changed rave-ieeg Updated Github action configurations Copy MRI derivative folder importing images NIfTI format (imaging segmentation CT MRI registration) Updated pipeline template display latest pipeline dependency Pipeline dependency installed directory ravemanager Removed improper S3generics validate_raw_file_lfp Pipeline root searching path can set temporary values Added is_on_cran, allowing certain examples tests suppressed CRAN check, code enabled local tests - helps keep examples --date Bug fixes: Fixed template module UI extra padding bottom Fixed Blackrock NEV-3.0 specification configurations Fixed errors subject set_default get_default raise errors configuration files corrupted Fixed potential code injection issue Fixed parallel code closing socket connections correctly","code":""},{"path":"https://beauchamplab.github.io/raveio/news/index.html","id":"raveio-010","dir":"Changelog","previous_headings":"","what":"raveio 0.1.0","title":"raveio 0.1.0","text":"CRAN release: 2023-03-15 Major changes: Added pipeline target format interface; example rave-subject implemented rewrote as_rave_subject subject information updated called Revised error handlers pipeline generating engine, errors occur, enclosing target expressions back-trace printed Supported brain viewer loaded without electrodes via include_electrodes argument Added coregistration via ANTs Supports MRI registering templates via non-linear transforms Minor changes: importing electrodes formats, subject used required. However, totally unnecessary; removed requirement Fixed small typo may cause inconsistent electrode labels (Nolabel NoLabel) Bug fixes: executing pipeline shared script, possible leak variables global environment; fixed Fixing bug shared scripts might loaded properly pipeline_run","code":""},{"path":"https://beauchamplab.github.io/raveio/news/index.html","id":"raveio-009","dir":"Changelog","previous_headings":"","what":"raveio 0.0.9","title":"raveio 0.0.9","text":"CRAN release: 2022-10-14 Major changes: Added run_wavelet isolate wavelet kernels subject, requires update ravetools Avoid override ravetools options loading package Added clean method pipeline clean data objects Allowed pipelines save load customized data avoid polluting settings.yaml Allowed pipelines eval instead run Added new data type raw-voltage method load_blocks (class LFP_electrode) load raw voltage data Added prepare_subject_bare0 load subject voltage data imported (Notch filters) Added repository type voltage signals Added .nev converter export BlackRock format Matlab HDF5 formats Backup pipeline files updating Added baseline method voltage signals Minor changes: Changed FLIRT script perform less search speed Exported MNI305_to_MNI152 matrix Added quiet option loading electrodes suppress warnings Try use ravetools whenever possible Added option avoid reading BlackRock.nev headers shorten loading time Allow electrodes loaded without warnings Bug fixes: Fixed watchdog electrode table unavailable Fixed rand_string random running multicore future parallel Fixed preprocess_file path class LFP_electrode Baseline window longer needed mean standard deviation provided Fixed .nev converter bugs causing index overflows cases","code":""},{"path":"https://beauchamplab.github.io/raveio/news/index.html","id":"raveio-008","dir":"Changelog","previous_headings":"","what":"raveio 0.0.8","title":"raveio 0.0.8","text":"CRAN release: 2022-08-25 Major changes: Added bundled validation functions check data integrity: function supports RAVE 1.0 2.0 formats Added backward support convert 2.0 data format 1.0 Added file support BlackRock (NEV, NSx) formats specification number (>=2.2) Allowed pipelines execute without targets avoid serializing large objects Added repository type requires epoch information. useful users want analyze blocks data Added monitoring class RAVEWatchDog can automatically monitor NEV NSx files, import & process data Added merge_subjects merge multiple subjects project different blocks Added support recon-, dcm2niix, 3dAllineate, flirt shell-commands (requires external programs installed) Added finalizing installation function allow installing built-processing pipelines Minor changes: Allow one signal type loaded repository Allowed electrodes text instead vector integers creating repository Bug fixes: Fixed generate_reference set array read-mode saving headers Actively clear cache whenever new reference generated","code":""},{"path":"https://beauchamplab.github.io/raveio/news/index.html","id":"raveio-007","dir":"Changelog","previous_headings":"","what":"raveio 0.0.7","title":"raveio 0.0.7","text":"CRAN release: 2022-06-20 Major changes: Added PipelineTools class wrapped constructor raveio::pipeline load common utility tools needed run pipeline Added module templates RAVE-2.0 Allow import_electrode_table import table without replacing existing electrode files dry_run option","code":""},{"path":"https://beauchamplab.github.io/raveio/news/index.html","id":"raveio-006","dir":"Changelog","previous_headings":"","what":"raveio 0.0.6","title":"raveio 0.0.6","text":"CRAN release: 2022-05-30 Major changes: Added read_mat2 allow reading Matlab files stored HDF5 formats Allow subject instances store retrieve default key-value pairs via set_default get_default methods Disable multicore default, users can use plan provided future package Added location signal types electrodes Added function perform baseline via power_baseline directly repository Added multiple repository types RAVE subjects identical key signature Added with_future_parallel enable multicore features expressions Added reference signal class Use ravedash log system provided package installed Speed-raveio_getopt raveio_setopt Added validate_time_window return intervals time windows Added save_json load_json handle JSON format using jsonlite package Allow set threeBrain template brain Added import_electrode_table import electrode table coordinates T1 MNI space tkrRAS Electrodes can load corresponding block data Added normalize_commandline_path cmd_* functions search external system commands FreeSurfer, FSL-FLIRT, dcm2niix Added backup_file back existing files instead overwriting Allow download install rave-server services (currently works OSX) Changes pipeline framework: Implemented matured reproducible pipeline framework Added R-markdown template build pipelines Allow pipelines run another process can kill process anytime Pipelines run async mode works shiny applications Created R6 class pipeline results promises way Allow clear cache files subject level Async pipelines can callback functions check, useful monitoring progress Enhancements: save_yaml can write connections rave_imports runs parallel native2 format Added option disable fork-clusters (enabled default OSX Linux) Allows EDF files partially read Added data format entry preprocess instance, allowing following modules aware raw data format ravetools respects tensor_temp_path temporary path","code":""},{"path":"https://beauchamplab.github.io/raveio/news/index.html","id":"raveio-005","dir":"Changelog","previous_headings":"","what":"raveio 0.0.5","title":"raveio 0.0.5","text":"CRAN release: 2021-10-13 Major changes: Rewind back hdf5r passes CRAN checks now Fixed HDF5 bugs Added pipeline functions self-expand RAVE Added pipeline templates","code":""},{"path":"https://beauchamplab.github.io/raveio/news/index.html","id":"raveio-004","dir":"Changelog","previous_headings":"","what":"raveio 0.0.4","title":"raveio 0.0.4","text":"CRAN release: 2021-08-05 Major changes: removed lazyarray, pryr fixed get_ram errors system command found disabled support Solaris changed hdf5r rhdf5","code":""},{"path":"https://beauchamplab.github.io/raveio/news/index.html","id":"raveio-003","dir":"Changelog","previous_headings":"","what":"raveio 0.0.3","title":"raveio 0.0.3","text":"CRAN release: 2020-08-14 Initial CRAN submission.","code":""}]
